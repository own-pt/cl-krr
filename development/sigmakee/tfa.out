Info in KBmanager.initializeOnce()
Info in KBmanager.initializeOnce(): initializing with /Users/ar/.sigmakee/KBs
KBmanager.readConfiguration()
KBmanager.serializedExists(): true
KBmanager.serializedOld(config): 
KBmanager.serializedOld(config): save date: Tue Jun 11 10:59:24 BRT 2019
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
Error in KBmanager.kbsFilenamesFromXML(): Bad tag: preference
Error in KBmanager.kbsFilenamesFromXML(): expected <kb>
kbsFilenamesFromXML(): Completed loading KB names
KBmanager.serializedOld(config): returning false (not old)
KBmanager.loadSerialized(): KBmanager has been deserialized 
WordNet.initOnce(): using baseDir = /Users/ar/.sigmakee/KBs/WordNetMappings
WordNet.loadFresh(): 
INFO in WordNet.compileRegexPatterns(): compiling patterns
INFO in WordNet.readNouns(): Reading WordNet noun files
...............
Error in WordNet.readNouns(): No match in /Users/ar/.sigmakee/KBs/WordNetMappings/WordNetMappings30-noun.txt for line ElectricalConductor+
...................................................................x
  1.603 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/WordNetMappings30-noun.txt with 82242 lines
  0.007 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/noun.exc
INFO in WordNet.readVerbs(): Reading WordNet verb files
.............x
  0.211 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/WordNetMappings30-verb.txt with 13837 lines
  0.003 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/verb.exc
INFO in WordNet.readAdjectives(): Reading WordNet adjective files
..................x
  0.257 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/WordNetMappings30-adj.txt with 18226 lines
INFO in WordNet.readAdverbs(): Reading WordNet adverb files
...x
  0.056 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/WordNetMappings30-adv.txt with 3691 lines
INFO in WordNet.readWordFrequencies(): Reading WordNet word frequencies
.................................x
  1.789 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/wordFrequencies.txt
INFO in WordNet.readStopWords(): Reading stop words
  0.007 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/stopwords.txt
INFO in WordNet.readSenseIndex(): Reading WordNet sense index
..............................................................................................................................................................................................................x
  0.538 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/index.sense with 206000 senses.
INFO in WordNet.readSenseCount(): Reading WordNet sense counts
.....Info in WordNet.readSenseCount(): > 100 missing senses, suppressing messages 
................................x
  0.176 seconds to process /Users/ar/.sigmakee/KBs/WordNetMappings/cntlist with 37000 senses.
INFO in WordNet.serialize(): origMaxNounSynsetID: 15300051 and: 15300051
WordNet.serialize(): WN has been serialized 
ENTER DB.readSpreadsheet(/Users/ar/.sigmakee/KBs/WordNetMappings/sentiment.csv, null)
ENTER DB.readSpreadsheet(java.io.FileReader@264e0dbc, null)
EXIT DB.readSpreadsheet(java.io.FileReader@264e0dbc, null)
  rows == [list of 8222 rows]
  0.079 seconds elapsed time
EXIT DB.readSpreadsheet(/Users/ar/.sigmakee/KBs/WordNetMappings/sentiment.csv, null)
NLGUtils.init(): initializing with /Users/ar/.sigmakee/KBs
NLGUtils.readKeywordMap():
NLGUtils.serializedExists(): true
NLGUtils.loadSerialized()
NLGUtils.loadSerialized(): NLGUtils has been deserialized 
INFO in OMWordnet.readOMWfiles(): reading files: 
OMWordnet.loadSerialized(): OMW has been deserialized 
Info in KBmanager.initializeOnce(): initialized is true
Info in KBmanager.initializeOnce()
Info in KBmanager.initializeOnce(): initialized is true
Info in KBmanager.initializeOnce(): initializing is false
Info in KBmanager.initializeOnce(): returning 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty c1
handleVariableArity():
handleVariableArity(): r: contraryAttribute
Error in KB.isSubclass(): empty c1
handleVariableArity(): non numeric and non-list r: contraryAttribute
handleVariableArity(): r: partition
Error in KB.isSubclass(): empty c1
handleVariableArity(): non numeric and non-list r: partition
handleVariableArity(): r: AssignmentFn
handleVariableArity(): numeric or list r: AssignmentFn
handleVariableArity(): adding term: 1__
handleVariableArity(): adding term: 2__2In
handleVariableArity(): adding term: 3__2In
handleVariableArity(): adding term: 4__2In
handleVariableArity(): adding term: 5__2In
handleVariableArity(): adding term: 6__2In
handleVariableArity(): r: exhaustiveAttribute
Error in KB.isSubclass(): empty c1
handleVariableArity(): non numeric and non-list r: exhaustiveAttribute
handleVariableArity(): r: exhaustiveDecomposition
Error in KB.isSubclass(): empty c1
handleVariableArity(): non numeric and non-list r: exhaustiveDecomposition
handleVariableArity(): r: disjointDecomposition
Error in KB.isSubclass(): empty c1
handleVariableArity(): non numeric and non-list r: disjointDecomposition
handleVariableArity(): r: ListFn
handleVariableArity(): numeric or list r: ListFn
handleVariableArity(): adding term: 1__1In
handleVariableArity(): adding term: 2__1In
handleVariableArity(): adding term: 3__1In
handleVariableArity(): adding term: 4__1In
handleVariableArity(): adding term: 5__1In
handleVariableArity(): adding term: 6__1In
handleVariableArity(): r: LeastCommonMultipleFn
handleVariableArity(): numeric or list r: LeastCommonMultipleFn
handleVariableArity(): adding term: 1__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 2__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 3__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 4__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 5__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 6__0In1In
handleVariableArity(): r: GreatestCommonDivisorFn
handleVariableArity(): numeric or list r: GreatestCommonDivisorFn
handleVariableArity(): adding term: 1__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 2__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 3__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 4__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 5__0In1In
Error in KB.isSubclass(): empty c1
handleVariableArity(): adding term: 6__0In1In
handleVariableArity(): toExtend: {MultiplicationFn=[0In1In2In, 0Re1Re2Re, 0Ra1Ra2Ra], AssignmentFn=[4__2In, 3__2Ra, 6__2Re, 5__2Re, 6__2Ra, 3__2In, 2__2Re, 6__2In, 4__2Ra, 1__, 4__2Re, 5__2In, 2__2Ra, 5__2Ra, 2__2In, 3__2Re], greaterThanOrEqualTo=[1In2In, 1Ra2Ra, 1Re2Re], exhaustiveAttribute=[1, 2, 3, 4, 5, 6], exhaustiveDecomposition=[1, 2, 3, 4, 5, 6], ListFn=[3__1Ra, 4__1In, 1__1In, 6__1Re, 6__1Ra, 2__1Re, 1__1Ra, 6__1In, 3__1In, 4__1Ra, 4__1Re, 2__1Ra, 5__1In, 1__1Re, 5__1Re, 2__1In, 3__1Re, 5__1Ra], LeastCommonMultipleFn=[1__0Re1Re, 1__0Ra1Ra, 2__0Ra1Ra, 3__0Re1Re, 1__0In1In, 4__0Ra1Ra, 2__0Re1Re, 2__0In1In, 3__0Ra1Ra, 4__0In1In, 5__0Re1Re, 4__0Re1Re, 3__0In1In, 5__0Ra1Ra, 6__0In1In, 5__0In1In, 6__0Re1Re, 6__0Ra1Ra], equal=[1In2In, 1Ra2Ra, 1Re2Re], DivisionFn=[0In1In2In, 0Re1Re2Re, 0Ra1Ra2Ra], contraryAttribute=[1, 2, 3, 4, 5, 6], partition=[1, 2, 3, 4, 5, 6], AdditionFn=[0In1In2In, 0Re1Re2Re, 0Ra1Ra2Ra], lessThan=[1In2In, 1Ra2Ra, 1Re2Re], disjointDecomposition=[1, 2, 3, 4, 5, 6], FloorFn=[0In1Re], SubtractionFn=[0In1In2In, 0Re1Re2Re, 0Ra1Ra2Ra], lessThanOrEqualTo=[1In2In, 1Ra2Ra, 1Re2Re], greaterThan=[1In2In, 1Ra2Ra, 1Re2Re], GreatestCommonDivisorFn=[1__0Re1Re, 1__0Ra1Ra, 2__0Ra1Ra, 3__0Re1Re, 1__0In1In, 4__0Ra1Ra, 2__0Re1Re, 2__0In1In, 3__0Ra1Ra, 4__0In1In, 5__0Re1Re, 4__0Re1Re, 3__0In1In, 5__0Ra1Ra, 6__0In1In, 5__0In1In, 6__0Re1Re, 6__0Ra1Ra]}
writeSorts(): t: -1
writeSorts(): t: .5
writeSorts(): t: <=>
writeSorts(): t: =>
writeSorts(): t: ACPowerSource
writeSorts(): t: AMFMAlarmClock
writeSorts(): t: AbnormalAnatomicalStructure
writeSorts(): t: Aborting
writeSorts(): t: Above
writeSorts(): t: AbsoluteValueFn
writeRelationSort(): sig: [NonnegativeRealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
processRelationSort(): sig: [NonnegativeRealNumber, RealNumber]
processRelationSort(): t,s,i: AbsoluteValueFn, NonnegativeRealNumber, 0
processRelationSort(): t,s,i: AbsoluteValueFn, RealNumber, 1
processRelationSort(): modsig: {0=[, 0Re], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding AbsoluteValueFn : [1Ra, 0Re, 1Re, 1In, 0Re1Ra, 0Re1In, 0Re1Re]
writeSorts(): t: Abstract
writeSorts(): t: AcademicDegree
writeSorts(): t: Accelerating
writeSorts(): t: AccountNumber
writeSorts(): t: Accountant
writeSorts(): t: Accrediting
writeSorts(): t: AchievingControl
writeSorts(): t: Acre
writeSorts(): t: Actinium
writeSorts(): t: ActiveAgreement
writeSorts(): t: Actor
writeSorts(): t: ActuaryScience
writeSorts(): t: AcuteAngle
writeSorts(): t: AdditionFn
writeSorts(): t: AdditionFn__0In1In2InFn
writeSorts(): t: AdditionFn__0Ra1Ra2RaFn
writeSorts(): t: AdditionFn__0Re1Re2ReFn
writeSorts(): t: Adjacent
writeSorts(): t: Adjective
writeSorts(): t: AdjoiningRoom
writeSorts(): t: Admiral
writeSorts(): t: Adverb
writeSorts(): t: Advertising
writeSorts(): t: Aerating
writeSorts(): t: Aerator
writeSorts(): t: AerobicExerciseDevice
writeSorts(): t: Africa
writeSorts(): t: AfterNoon
writeSorts(): t: Afternoon
writeSorts(): t: AfternoonFn
writeRelationSort(): sig: [Afternoon+, Day+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: AgeGroup
writeSorts(): t: Agency
writeSorts(): t: Agent
writeSorts(): t: Agreement
writeSorts(): t: Agriculture
writeSorts(): t: Air
writeSorts(): t: AirConditioner
writeSorts(): t: AirForce
writeSorts(): t: AirTransportation
writeSorts(): t: Aircraft
writeSorts(): t: Airway
writeSorts(): t: AlarmClock
writeSorts(): t: Alcohol
writeSorts(): t: AlcoholicBeverage
writeSorts(): t: AlethicAttribute
writeSorts(): t: Alga
writeSorts(): t: Alkaloid
writeSorts(): t: Alligator
writeSorts(): t: Alone
writeSorts(): t: AlphabeticCharacter
writeSorts(): t: Aluminum
writeSorts(): t: Alveolus
writeSorts(): t: Ambulating
writeSorts(): t: Ambush
writeSorts(): t: AmericansWithDisabilitiesAct
writeSorts(): t: Americium
writeSorts(): t: AminoAcid
writeSorts(): t: Ampere
writeSorts(): t: Amphibian
writeSorts(): t: Amu
writeSorts(): t: Anaconda
writeSorts(): t: AnaerobicExerciseDevice
writeSorts(): t: AnatomicalStructure
writeSorts(): t: Anchor
writeSorts(): t: Anger
writeSorts(): t: AngleMeasure
writeSorts(): t: Angstrom
writeSorts(): t: AngularDegree
writeSorts(): t: AnimacyAttribute
writeSorts(): t: Animal
writeSorts(): t: AnimalAnatomicalStructure
writeSorts(): t: AnimalController
writeSorts(): t: AnimalDoll
writeSorts(): t: AnimalGuiding
writeSorts(): t: AnimalLanguage
writeSorts(): t: AnimalPoweredDevice
writeSorts(): t: AnimalResidence
writeSorts(): t: AnimalShell
writeSorts(): t: AnimalSubstance
writeSorts(): t: AnimalTeam
writeSorts(): t: Ankle
writeSorts(): t: Announcement
writeSorts(): t: Answering
writeSorts(): t: AntInsect
writeSorts(): t: AnteMeridiem
writeSorts(): t: Antelope
writeSorts(): t: Antenna
writeSorts(): t: Anthropology
writeSorts(): t: AntiSymmetricPositionalAttribute
writeSorts(): t: Antibiotic
writeSorts(): t: Antibody
writeSorts(): t: Antigen
writeSorts(): t: AntigenA
writeSorts(): t: AntigenB
writeSorts(): t: Antimony
writeSorts(): t: AntisymmetricRelation
writeSorts(): t: Anxiety
writeSorts(): t: ApartmentBuilding
writeSorts(): t: ApartmentUnit
writeSorts(): t: Ape
writeSorts(): t: Apologizing
writeSorts(): t: Apple
writeSorts(): t: Application
writeSorts(): t: Appointing
writeSorts(): t: April
writeSorts(): t: Apron
writeSorts(): t: AquaticMammal
writeSorts(): t: Arachnid
writeSorts(): t: Archeology
writeSorts(): t: Architecture
writeSorts(): t: AreaMeasure
writeSorts(): t: Argon
writeSorts(): t: Arguing
writeSorts(): t: Argument
writeSorts(): t: Arm
writeSorts(): t: Army
writeSorts(): t: Arriving
writeSorts(): t: ArrowIcon
writeSorts(): t: ArrowProjectile
writeSorts(): t: Arsenic
writeSorts(): t: Arson
writeSorts(): t: ArtCritic
writeSorts(): t: ArtMuseum
writeSorts(): t: ArtPainting
writeSorts(): t: ArtSchool
writeSorts(): t: ArtStudio
writeSorts(): t: ArtWork
writeSorts(): t: Artery
writeSorts(): t: Arthropod
writeSorts(): t: Article
writeSorts(): t: Artifact
writeSorts(): t: ArtifactMediatedCommunication
writeSorts(): t: ArtificialLanguage
writeSorts(): t: ArtilleryGun
writeSorts(): t: Artist
writeSorts(): t: ArtisticOccupation
writeSorts(): t: AsexualReproduction
writeSorts(): t: Asia
writeSorts(): t: Asleep
writeSorts(): t: AssignmentFn
writeRelationSort(): sig: [Entity, Function, Entity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [Entity, Function, Entity]
processRelationSort(): t,s,i: AssignmentFn, Entity, 0
processRelationSort(): list operator: AssignmentFn
processRelationSort(): t,s,i: AssignmentFn, Function, 1
processRelationSort(): t,s,i: AssignmentFn, Entity, 2
processRelationSort(): list operator: AssignmentFn
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding AssignmentFn : [2Ra, 0Ra2In, 0In2In, 0Re, 0Re2Ra, 2Re, 0In2Ra, 0Re2In, 0In2Re, 0In, 2In, 0Re2Re, 0Ra2Ra, 0Ra, 0Ra2Re]
writeSorts(): t: AssociativeFunction
writeSorts(): t: Astatine
writeSorts(): t: AstronomicalBody
writeSorts(): t: Astronomy
writeSorts(): t: AsymmetricRelation
writeSorts(): t: AtmosphericRegion
writeSorts(): t: Atom
writeSorts(): t: AtomGram
writeSorts(): t: AtomicGroup
writeSorts(): t: AtomicNucleus
writeSorts(): t: Atrophy
writeSorts(): t: Attaching
writeSorts(): t: AttachingDevice
writeSorts(): t: Attack
writeSorts(): t: Attorney
writeSorts(): t: AttorneyGeneral
writeSorts(): t: AttrFn
writeRelationSort(): sig: [Class, SetOrClass, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: Attribute
writeSorts(): t: Audible
writeSorts(): t: AudioRecorder
writeSorts(): t: AudioRecording
writeSorts(): t: Auditorium
writeSorts(): t: AuditoriumSeat
writeSorts(): t: August
writeSorts(): t: Australia
writeSorts(): t: AutomaticGun
writeSorts(): t: Automobile
writeSorts(): t: AutonomicProcess
writeSorts(): t: Avocado
writeSorts(): t: Awake
writeSorts(): t: Awarding
writeSorts(): t: Axle
writeSorts(): t: BackFn
writeRelationSort(): sig: [SelfConnectedObject, SelfConnectedObject]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: BacterialDisease
writeSorts(): t: Bacterium
writeSorts(): t: Badger
writeSorts(): t: Bag
writeSorts(): t: Baking
writeSorts(): t: Balcony
writeSorts(): t: Ball
writeSorts(): t: BallisticMissile
writeSorts(): t: Ballot
writeSorts(): t: Bandage
writeSorts(): t: Baptizing
writeSorts(): t: Bare
writeSorts(): t: Barefoot
writeSorts(): t: BargainSale
writeSorts(): t: Barium
writeSorts(): t: Barking
writeSorts(): t: Barn
writeSorts(): t: Bartender
writeSorts(): t: Basement
writeSorts(): t: BathTub
writeSorts(): t: Bathing
writeSorts(): t: BathingDevice
writeSorts(): t: Bathroom
writeSorts(): t: Baton
writeSorts(): t: Battery
writeSorts(): t: Battle
writeSorts(): t: Bear
writeSorts(): t: BecomingDrunk
writeSorts(): t: Becquerel
writeSorts(): t: Bed
writeSorts(): t: BedAttribute
writeSorts(): t: BedFrame
writeSorts(): t: BedLinen
writeSorts(): t: Bedroom
writeSorts(): t: Bee
writeSorts(): t: Beef
writeSorts(): t: Beer
writeSorts(): t: BeforeCommonEra
writeSorts(): t: BeginFn
writeRelationSort(): sig: [TimePoint, TimeInterval]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [TimePoint, TimeInterval]
processRelationSort(): t,s,i: BeginFn, TimePoint, 0
processRelationSort(): t,s,i: BeginFn, TimeInterval, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding BeginFn : []
writeSorts(): t: BeginNodeFn
writeRelationSort(): sig: [GraphNode, GraphPath]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: BeginningOperations
writeSorts(): t: BeliefGroup
writeSorts(): t: Below
writeSorts(): t: Belt
writeSorts(): t: Bequeathing
writeSorts(): t: Berkelium
writeSorts(): t: Beryllium
writeSorts(): t: Betting
writeSorts(): t: Beverage
writeSorts(): t: Bidet
writeSorts(): t: BinaryFunction
writeSorts(): t: BinaryNumber
writeSorts(): t: BinaryPredicate
writeSorts(): t: BinaryRelation
writeSorts(): t: Biochemistry
writeSorts(): t: Biography
writeSorts(): t: BiologicalAttribute
writeSorts(): t: BiologicalConception
writeSorts(): t: BiologicalProcess
writeSorts(): t: BiologicalSpecies
writeSorts(): t: BiologicallyActiveSubstance
writeSorts(): t: Biology
writeSorts(): t: Biopsy
writeSorts(): t: Biped
writeSorts(): t: Bird
writeSorts(): t: BirdEgg
writeSorts(): t: Birth
writeSorts(): t: Bismuth
writeSorts(): t: Bit
writeSorts(): t: Biting
writeSorts(): t: Black
writeSorts(): t: Blade
writeSorts(): t: Blank
writeSorts(): t: Blanket
writeSorts(): t: Bleeding
writeSorts(): t: Blind
writeSorts(): t: Bloating
writeSorts(): t: Blockade
writeSorts(): t: Blood
writeSorts(): t: BloodCell
writeSorts(): t: BloodTypeA
writeSorts(): t: BloodTypeAB
writeSorts(): t: BloodTypeB
writeSorts(): t: BloodTypeO
writeSorts(): t: BloodVessel
writeSorts(): t: Blue
writeSorts(): t: Blueprint
writeSorts(): t: Blushing
writeSorts(): t: BoardOrBlock
writeSorts(): t: Boarding
writeSorts(): t: BoatDeck
writeSorts(): t: BodyCavity
writeSorts(): t: BodyCovering
writeSorts(): t: BodyJoint
writeSorts(): t: BodyJunction
writeSorts(): t: BodyMotion
writeSorts(): t: BodyOfWater
writeSorts(): t: BodyPart
writeSorts(): t: BodyPosition
writeSorts(): t: BodySubstance
writeSorts(): t: BodyVessel
writeSorts(): t: Boiling
writeSorts(): t: Bolt
writeSorts(): t: Bomb
writeSorts(): t: Bombing
writeSorts(): t: Bone
writeSorts(): t: Book
writeSorts(): t: Boron
writeSorts(): t: Borrowing
writeSorts(): t: BotanicalTree
writeSorts(): t: Botany
writeSorts(): t: Bottle
writeSorts(): t: Bowing
writeSorts(): t: Box
writeSorts(): t: Boy
writeSorts(): t: Brain
writeSorts(): t: Brass
writeSorts(): t: BreadOrBiscuit
writeSorts(): t: BreakabilityAttribute
writeSorts(): t: BreakingRecord
writeSorts(): t: Breast
writeSorts(): t: Breathing
writeSorts(): t: Brick
writeSorts(): t: BrigadierGeneral
writeSorts(): t: BritishThermalUnit
writeSorts(): t: BroadcastProgram
writeSorts(): t: Broadcasting
writeSorts(): t: Bromine
writeSorts(): t: BronchialDuct
writeSorts(): t: Brood
writeSorts(): t: Broom
writeSorts(): t: Brown
writeSorts(): t: BrushOrComb
writeSorts(): t: Bubble
writeSorts(): t: Buffalo
writeSorts(): t: Building
writeSorts(): t: BuildingLevel
writeSorts(): t: Bull
writeSorts(): t: Bullet
writeSorts(): t: BulletCartridge
writeSorts(): t: BumbleBee
writeSorts(): t: BunkBed
writeSorts(): t: Bunny
writeSorts(): t: Burial
writeSorts(): t: Burying
writeSorts(): t: Business
writeSorts(): t: BusinessCompetition
writeSorts(): t: BusinessExecutive
writeSorts(): t: BusinessPerson
writeSorts(): t: Bust
writeSorts(): t: Butter
writeSorts(): t: Button
writeSorts(): t: Buying
writeSorts(): t: Byte
writeSorts(): t: Cadmium
writeSorts(): t: Caesium
writeSorts(): t: Cafeteria
writeSorts(): t: Calcium
writeSorts(): t: Calculating
writeSorts(): t: Calf
writeSorts(): t: Californium
writeSorts(): t: Calorie
writeSorts(): t: Camera
writeSorts(): t: Camp
writeSorts(): t: Campground
writeSorts(): t: Cancer
writeSorts(): t: Candela
writeSorts(): t: Candle
writeSorts(): t: Canine
writeSorts(): t: Capillary
writeSorts(): t: CaptainOfficer
writeSorts(): t: Capturing
writeSorts(): t: CarBombing
writeSorts(): t: Carbohydrate
writeSorts(): t: Carbon
writeSorts(): t: CardinalityFn
writeRelationSort(): sig: [Integer, (UnionFn SetOrClass Collection)]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [Integer, (UnionFn SetOrClass Collection)]
processRelationSort(): t,s,i: CardinalityFn, Integer, 0
processRelationSort(): t,s,i: CardinalityFn, (UnionFn SetOrClass Collection), 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding CardinalityFn : [0Re, 0In, 0Ra]
writeSorts(): t: CareOrganization
writeSorts(): t: CargoShip
writeSorts(): t: Carnivore
writeSorts(): t: Carpenter
writeSorts(): t: Carpentry
writeSorts(): t: Carrying
writeSorts(): t: Cartography
writeSorts(): t: CartridgeCase
writeSorts(): t: CaseRole
writeSorts(): t: Catching
writeSorts(): t: CausingHappiness
writeSorts(): t: CausingPain
writeSorts(): t: CausingUnhappiness
writeSorts(): t: CavalryUnit
writeSorts(): t: CeasingOperations
writeSorts(): t: Ceiling
writeSorts(): t: CeilingFn
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
processRelationSort(): sig: [Integer, RealNumber]
processRelationSort(): t,s,i: CeilingFn, Integer, 0
processRelationSort(): t,s,i: CeilingFn, RealNumber, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding CeilingFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: Celebrity
writeSorts(): t: Cell
writeSorts(): t: CellNucleus
writeSorts(): t: CellPart
writeSorts(): t: Cellulose
writeSorts(): t: CelsiusDegree
writeSorts(): t: Cemetery
writeSorts(): t: CenterOfCircleFn
writeRelationSort(): sig: [GeometricPoint, Circle]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Centimeter
writeSorts(): t: CentralTimeZone
writeSorts(): t: CentrifugalMotion
writeSorts(): t: CentripetalMotion
writeSorts(): t: CenturyDuration
writeSorts(): t: CerealGrain
writeSorts(): t: Ceremony
writeSorts(): t: Cerium
writeSorts(): t: Certificate
writeSorts(): t: Chair
writeSorts(): t: ChangeOfControl
writeSorts(): t: ChangeOfPossession
writeSorts(): t: ChangingClothing
writeSorts(): t: Chapter
writeSorts(): t: Character
writeSorts(): t: Chart
writeSorts(): t: Cheetah
writeSorts(): t: ChemicalAcid
writeSorts(): t: ChemicalAttack
writeSorts(): t: ChemicalBase
writeSorts(): t: ChemicalDecomposition
writeSorts(): t: ChemicalEquilibrium
writeSorts(): t: ChemicalProcess
writeSorts(): t: ChemicalReduction
writeSorts(): t: ChemicalSalt
writeSorts(): t: ChemicalSynthesis
writeSorts(): t: Chemistry
writeSorts(): t: ChestOrCabinet
writeSorts(): t: Chewing
writeSorts(): t: Chicken
writeSorts(): t: ChickenMeat
writeSorts(): t: Chimney
writeSorts(): t: Chin
writeSorts(): t: China
writeSorts(): t: ChineseLanguage
writeSorts(): t: Chlorine
writeSorts(): t: Cholesterol
writeSorts(): t: Choreographing
writeSorts(): t: ChristianBible
writeSorts(): t: ChristianGospel
writeSorts(): t: Chromatography
writeSorts(): t: Chromium
writeSorts(): t: CigarOrCigarette
writeSorts(): t: Circle
writeSorts(): t: CircleSector
writeSorts(): t: Circumision
writeSorts(): t: CitizenryFn
writeRelationSort(): sig: [GroupOfPeople, GeopoliticalArea]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: City
writeSorts(): t: CityBlock
writeSorts(): t: CityDistrict
writeSorts(): t: CityGovernment
writeSorts(): t: CivilWar
writeSorts(): t: Civilian
writeSorts(): t: Clamp
writeSorts(): t: Clapping
writeSorts(): t: Class
writeSorts(): t: ClassificationScheme
writeSorts(): t: Classifying
writeSorts(): t: Classroom
writeSorts(): t: Clay
writeSorts(): t: Clean
writeSorts(): t: Cleaning
writeSorts(): t: CleaningDevice
writeSorts(): t: Cleric
writeSorts(): t: ClericalSecretary
writeSorts(): t: Cloak
writeSorts(): t: Clock
writeSorts(): t: ClosedTwoDimensionalFigure
writeSorts(): t: Closet
writeSorts(): t: Closing
writeSorts(): t: ClosingContract
writeSorts(): t: ClosingEyes
writeSorts(): t: Clothed
writeSorts(): t: ClothesDryer
writeSorts(): t: ClothesWashingMachine
writeSorts(): t: Clothing
writeSorts(): t: ClothingSuit
writeSorts(): t: Cloud
writeSorts(): t: Cloudy
writeSorts(): t: Club
writeSorts(): t: Coach
writeSorts(): t: CoastGuard
writeSorts(): t: Coat
writeSorts(): t: Cobalt
writeSorts(): t: Coconut
writeSorts(): t: Coffee
writeSorts(): t: Coffin
writeSorts(): t: CognitiveAgent
writeSorts(): t: CoinOperated
writeSorts(): t: ColdBloodedVertebrate
writeSorts(): t: ColdTemperature
writeSorts(): t: Collage
writeSorts(): t: Collar
writeSorts(): t: Collectible
writeSorts(): t: Collection
writeSorts(): t: College
writeSorts(): t: CollegeFreshman
writeSorts(): t: CollegeJunior
writeSorts(): t: CollegeSenior
writeSorts(): t: CollegeSophomore
writeSorts(): t: CollegeStudentPosition
writeSorts(): t: Colonel
writeSorts(): t: ColorAttribute
writeSorts(): t: ColorBlind
writeSorts(): t: Coloring
writeSorts(): t: Combining
writeSorts(): t: Combustion
writeSorts(): t: Comedian
writeSorts(): t: Commenting
writeSorts(): t: CommercialAgent
writeSorts(): t: CommercialBuilding
writeSorts(): t: CommercialService
writeSorts(): t: CommercialShipping
writeSorts(): t: CommercialUnit
writeSorts(): t: Commission
writeSorts(): t: Committing
writeSorts(): t: CommonEra
writeSorts(): t: CommunalAttribute
writeSorts(): t: Communication
writeSorts(): t: CommunicationDevice
writeSorts(): t: CommunicationOrganization
writeSorts(): t: CommunicationSystem
writeSorts(): t: CommutativeFunction
writeSorts(): t: Comparing
writeSorts(): t: Compartment
writeSorts(): t: Compass
writeSorts(): t: ComplementFn
writeRelationSort(): sig: [SetOrClass, SetOrClass]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: ComplexNumber
writeSorts(): t: ComposingMusic
writeSorts(): t: CompositeUnitOfMeasure
writeSorts(): t: CompoundSubstance
writeSorts(): t: Compressing
writeSorts(): t: Computer
writeSorts(): t: ComputerKeyboard
writeSorts(): t: ComputerLanguage
writeSorts(): t: ComputerProgram
writeSorts(): t: ComputerProgramming
writeSorts(): t: ComputerScience
writeSorts(): t: ComputerScreen
writeSorts(): t: ComputerTouchscreen
writeSorts(): t: Concealing
writeSorts(): t: Condensing
writeSorts(): t: CondominiumBuilding
writeSorts(): t: CondominiumUnit
writeSorts(): t: Cone
writeSorts(): t: ConfederateSoldier
writeSorts(): t: Confining
writeSorts(): t: Confirming
writeSorts(): t: Congratulating
writeSorts(): t: ConjugatedSubstance
writeSorts(): t: ConsciousnessAttribute
writeSorts(): t: ConservationDependentSpecies
writeSorts(): t: ConservationStatus
writeSorts(): t: Consonant
writeSorts(): t: ConstantQuantity
writeSorts(): t: ConstrictorSnake
writeSorts(): t: ConstructedLanguage
writeSorts(): t: Constructing
writeSorts(): t: ContactSite
writeSorts(): t: Container
writeSorts(): t: ContainerEmpty
writeSorts(): t: ContainerFull
writeSorts(): t: ContentBearingObject
writeSorts(): t: ContentBearingPhysical
writeSorts(): t: ContentBearingProcess
writeSorts(): t: ContentDevelopment
writeSorts(): t: Contest
writeSorts(): t: ContestAttribute
writeSorts(): t: Continent
writeSorts(): t: ContinuousFunction
writeSorts(): t: ContraceptiveDevice
writeSorts(): t: Contract
writeSorts(): t: Convoy
writeSorts(): t: CookedAttribute
writeSorts(): t: Cooking
writeSorts(): t: CoolTemperature
writeSorts(): t: Cooling
writeSorts(): t: CoolingDevice
writeSorts(): t: Cooperation
writeSorts(): t: CoordinatedUniversalTimeZone
writeSorts(): t: Copper
writeSorts(): t: Copying
writeSorts(): t: Coroner
writeSorts(): t: Corporal
writeSorts(): t: Corporation
writeSorts(): t: CorpuscularObject
writeSorts(): t: Correcting
writeSorts(): t: Correspondence
writeSorts(): t: Corresponding
writeSorts(): t: CosineFn
writeRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
processRelationSort(): t,s,i: CosineFn, RealNumber, 0
processRelationSort(): t,s,i: CosineFn, PlaneAngleMeasure, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding CosineFn : [0Re, 0In, 0Ra]
writeSorts(): t: Cotton
writeSorts(): t: CottonFabric
writeSorts(): t: Coulomb
writeSorts(): t: Counting
writeSorts(): t: County
writeSorts(): t: CourtRoom
writeSorts(): t: Courtyard
writeSorts(): t: Covering
writeSorts(): t: CoveringFn
writeRelationSort(): sig: [WearableItem+, BodyPart+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Cow
writeSorts(): t: Crane
writeSorts(): t: Crawling
writeSorts(): t: Creation
writeSorts(): t: Crib
writeSorts(): t: CriminalAction
writeSorts(): t: CriminalGang
writeSorts(): t: CriticallyEndangeredSpecies
writeSorts(): t: Crocodile
writeSorts(): t: Crustacean
writeSorts(): t: CubicFoot
writeSorts(): t: CultivatedLandArea
writeSorts(): t: Cup
writeSorts(): t: Curb
writeSorts(): t: Curium
writeSorts(): t: Currency
writeSorts(): t: CurrencyBill
writeSorts(): t: CurrencyCoin
writeSorts(): t: CurrencyMeasure
writeSorts(): t: Curtain
writeSorts(): t: CutSetFn
writeRelationSort(): sig: [GraphPath+, Graph]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Cutting
writeSorts(): t: CuttingDevice
writeSorts(): t: Cylinder
writeSorts(): t: DCPowerSource
writeSorts(): t: Dachshund
writeSorts(): t: DamagedVehicle
writeSorts(): t: Damaging
writeSorts(): t: Damp
writeSorts(): t: DanceHall
writeSorts(): t: Dancing
writeSorts(): t: DataStorageDevice
writeSorts(): t: DateFruit
writeSorts(): t: Day
writeSorts(): t: DayDuration
writeSorts(): t: DayFn
writeRelationSort(): sig: [Day+, PositiveInteger, Month+]
writeRelationSort(): sigstr:  $int * $i 
processRelationSort(): sig: [Day+, PositiveInteger, Month+]
processRelationSort(): t,s,i: DayFn, Day+, 0
processRelationSort(): t,s,i: DayFn, PositiveInteger, 1
processRelationSort(): t,s,i: DayFn, Month+, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding DayFn : [1Ra, 1Re, 1In]
writeSorts(): t: DaySchool
writeSorts(): t: DayTime
writeSorts(): t: Deacon
writeSorts(): t: Dead
writeSorts(): t: DeadFn
writeRelationSort(): sig: [OrganismRemains+, Organism+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Deaf
writeSorts(): t: Death
writeSorts(): t: Debating
writeSorts(): t: Deboarding
writeSorts(): t: Decade
writeSorts(): t: DecadeDuration
writeSorts(): t: Decelerating
writeSorts(): t: December
writeSorts(): t: Deciding
writeSorts(): t: Declaring
writeSorts(): t: Decoding
writeSorts(): t: Decreasing
writeSorts(): t: DeductiveArgument
writeSorts(): t: Deer
writeSorts(): t: Defecation
writeSorts(): t: DefensiveManeuver
writeSorts(): t: Demonstrating
writeSorts(): t: DemonymFn
writeRelationSort(): sig: [NationalPerson+, GeographicArea]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: DenominatorFn
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
processRelationSort(): sig: [Integer, RealNumber]
processRelationSort(): t,s,i: DenominatorFn, Integer, 0
processRelationSort(): t,s,i: DenominatorFn, RealNumber, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding DenominatorFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: DensityFn
writeRelationSort(): sig: [FunctionQuantity, MassMeasure, VolumeMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [FunctionQuantity, MassMeasure, VolumeMeasure]
processRelationSort(): t,s,i: DensityFn, FunctionQuantity, 0
processRelationSort(): t,s,i: DensityFn, MassMeasure, 1
processRelationSort(): t,s,i: DensityFn, VolumeMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding DensityFn : []
writeSorts(): t: Dentist
writeSorts(): t: DeonticAttribute
writeSorts(): t: DependencyOrSpecialSovereigntyArea
writeSorts(): t: Depressant
writeSorts(): t: Deputy
writeSorts(): t: DescendantsFn
writeRelationSort(): sig: [FamilyGroup, Human]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Descriptor
writeSorts(): t: DescriptorPart
writeSorts(): t: Designing
writeSorts(): t: Desk
writeSorts(): t: Destruction
writeSorts(): t: Detaching
writeSorts(): t: Detergent
writeSorts(): t: DevelopmentalAttribute
writeSorts(): t: Device
writeSorts(): t: DeviceAttribute
writeSorts(): t: DeviceClosed
writeSorts(): t: DeviceDamaged
writeSorts(): t: DeviceNormal
writeSorts(): t: DeviceOff
writeSorts(): t: DeviceOn
writeSorts(): t: DeviceOpen
writeSorts(): t: DeviceStateAttribute
writeSorts(): t: DiagnosticProcess
writeSorts(): t: Dialysis
writeSorts(): t: DiameterFn
writeRelationSort(): sig: [LengthMeasure, Circle]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [LengthMeasure, Circle]
processRelationSort(): t,s,i: DiameterFn, LengthMeasure, 0
processRelationSort(): t,s,i: DiameterFn, Circle, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding DiameterFn : []
writeSorts(): t: Diamond
writeSorts(): t: Diarrhea
writeSorts(): t: Dictionary
writeSorts(): t: DieselEngine
writeSorts(): t: DieselFuel
writeSorts(): t: Diet
writeSorts(): t: Dieting
writeSorts(): t: Digesting
writeSorts(): t: Digging
writeSorts(): t: DigitAppendage
writeSorts(): t: DigitCharacter
writeSorts(): t: Diluting
writeSorts(): t: DiningArea
writeSorts(): t: DiningGuide
writeSorts(): t: DiningRoom
writeSorts(): t: Diplomat
writeSorts(): t: DirectDialTelephoneCommunication
writeSorts(): t: DirectedGraph
writeSorts(): t: Directing
writeSorts(): t: DirectionChange
writeSorts(): t: DirectionalAttribute
writeSorts(): t: Dirty
writeSorts(): t: Disability
writeSorts(): t: Disagreeing
writeSorts(): t: Disappearing
writeSorts(): t: Discovering
writeSorts(): t: DiseaseOrSyndrome
writeSorts(): t: Dish
writeSorts(): t: Dishwasher
writeSorts(): t: Dismounting
writeSorts(): t: DisplayArtifact
writeSorts(): t: Disseminating
writeSorts(): t: Dissident
writeSorts(): t: DistilledAlcoholicBeverage
writeSorts(): t: DivisionFn
writeSorts(): t: DivisionFn__0In1In2InFn
writeSorts(): t: DivisionFn__0Ra1Ra2RaFn
writeSorts(): t: DivisionFn__0Re1Re2ReFn
writeSorts(): t: Divorcing
writeSorts(): t: Document
writeSorts(): t: Documentary
writeSorts(): t: Dodging
writeSorts(): t: Doll
writeSorts(): t: Dome
writeSorts(): t: Domestic
writeSorts(): t: DomesticAnimal
writeSorts(): t: DomesticCat
writeSorts(): t: DomesticDog
writeSorts(): t: Donkey
writeSorts(): t: Door
writeSorts(): t: Doorway
writeSorts(): t: Dormitory
writeSorts(): t: DoubleBed
writeSorts(): t: DoubleSize
writeSorts(): t: Dough
writeSorts(): t: Downstairs
writeSorts(): t: Downstream
writeSorts(): t: Downtown
writeSorts(): t: Downwind
writeSorts(): t: DramaticActing
writeSorts(): t: DramaticCast
writeSorts(): t: DramaticDirecting
writeSorts(): t: DramaticPerformance
writeSorts(): t: DramaticPlay
writeSorts(): t: Drawing
writeSorts(): t: Dreaming
writeSorts(): t: Dress
writeSorts(): t: Dressing
writeSorts(): t: DressingRoom
writeSorts(): t: Drill
writeSorts(): t: Drilling
writeSorts(): t: Drinking
writeSorts(): t: DrinkingCup
writeSorts(): t: Dripping
writeSorts(): t: DriveComponent
writeSorts(): t: DriversLicense
writeSorts(): t: Driveway
writeSorts(): t: Driving
writeSorts(): t: DrugStore
writeSorts(): t: Drugged
writeSorts(): t: Drunk
writeSorts(): t: Dry
writeSorts(): t: Drying
writeSorts(): t: DryingDevice
writeSorts(): t: DualObjectProcess
writeSorts(): t: Duck
writeSorts(): t: Ducking
writeSorts(): t: Dysprosium
writeSorts(): t: Ear
writeSorts(): t: Earphone
writeSorts(): t: Easel
writeSorts(): t: East
writeSorts(): t: EasternTimeZone
writeSorts(): t: Eating
writeSorts(): t: Echoing
writeSorts(): t: EconomicAttribute
writeSorts(): t: EconomicRelation
writeSorts(): t: Economics
writeSorts(): t: EditionFn
writeRelationSort(): sig: [ContentBearingObject+, ContentBearingObject+, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [ContentBearingObject+, ContentBearingObject+, PositiveInteger]
processRelationSort(): t,s,i: EditionFn, ContentBearingObject+, 0
processRelationSort(): t,s,i: EditionFn, ContentBearingObject+, 1
processRelationSort(): t,s,i: EditionFn, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding EditionFn : [2Ra, 2Re, 2In]
writeSorts(): t: EducationalCourse
writeSorts(): t: EducationalFacility
writeSorts(): t: EducationalOrganization
writeSorts(): t: EducationalProcess
writeSorts(): t: EducationalProgram
writeSorts(): t: Egg
writeSorts(): t: Einsteinium
writeSorts(): t: Elaborating
writeSorts(): t: Elbow
writeSorts(): t: Election
writeSorts(): t: ElectricCoffeeMaker
writeSorts(): t: ElectricDevice
writeSorts(): t: ElectricMotor
writeSorts(): t: ElectricalOutlet
writeSorts(): t: ElectricalPlug
writeSorts(): t: ElectricalSignalling
writeSorts(): t: Electricity
writeSorts(): t: Electron
writeSorts(): t: ElectronVolt
writeSorts(): t: ElectronicLock
writeSorts(): t: ElectronicSignalling
writeSorts(): t: Electronics
writeSorts(): t: ElementalSubstance
writeSorts(): t: Elephant
writeSorts(): t: Elevator
writeSorts(): t: EmbassyBuilding
writeSorts(): t: Embracing
writeSorts(): t: Embryonic
writeSorts(): t: EmotionalState
writeSorts(): t: Emphysema
writeSorts(): t: EmploymentFiring
writeSorts(): t: Encoding
writeSorts(): t: EndFn
writeRelationSort(): sig: [TimePoint, TimeInterval]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [TimePoint, TimeInterval]
processRelationSort(): t,s,i: EndFn, TimePoint, 0
processRelationSort(): t,s,i: EndFn, TimeInterval, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding EndFn : []
writeSorts(): t: EndNodeFn
writeRelationSort(): sig: [GraphNode, GraphPath]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: EndangeredSpecies
writeSorts(): t: Engine
writeSorts(): t: Engineering
writeSorts(): t: EngineeringComponent
writeSorts(): t: EngineeringConnection
writeSorts(): t: EnglishLanguage
writeSorts(): t: EntertainmentBuilding
writeSorts(): t: EntertainmentCompany
writeSorts(): t: EntertainmentProfession
writeSorts(): t: Entity
writeSorts(): t: Entombing
writeSorts(): t: Envelope
writeSorts(): t: Enzyme
writeSorts(): t: EquivalenceRelation
writeSorts(): t: Erbium
writeSorts(): t: Escaping
writeSorts(): t: Espionage
writeSorts(): t: EthnicGroup
writeSorts(): t: EuroCent
writeSorts(): t: EuroDollar
writeSorts(): t: Europe
writeSorts(): t: Europium
writeSorts(): t: Evaporating
writeSorts(): t: EvenInteger
writeSorts(): t: Evening
writeSorts(): t: EveningFn
writeRelationSort(): sig: [Evening+, Day+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Excitement
writeSorts(): t: Excrement
writeSorts(): t: Excretion
writeSorts(): t: Execution
writeSorts(): t: ExerciseCenter
writeSorts(): t: Exhaling
writeSorts(): t: Exoskeleton
writeSorts(): t: Experimenting
writeSorts(): t: Explanation
writeSorts(): t: Explosion
writeSorts(): t: ExplosiveDevice
writeSorts(): t: ExplosiveMine
writeSorts(): t: ExplosiveSubstance
writeSorts(): t: ExponentiationFn
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
processRelationSort(): sig: [RealNumber, RealNumber, Integer]
processRelationSort(): t,s,i: ExponentiationFn, RealNumber, 0
processRelationSort(): t,s,i: ExponentiationFn, RealNumber, 1
processRelationSort(): t,s,i: ExponentiationFn, Integer, 2
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding ExponentiationFn : [2Ra, 0In1In, 0Ra1Re2Re, 0Ra2In, 0Re, 0Re2Ra, 2Re, 1Ra2Re, 0In1In2Re, 0Ra1Ra2In, 0In1Ra, 1Ra2Ra, 0In1In2Ra, 0Re2In, 1Re2Re, 0In1Re, 0Re1Ra2Re, 0Re1Re2Ra, 0Re1Ra2Ra, 0Re1Re2Re, 0In1Ra2In, 0In1Re2In, 0In1Re2Re, 0In1Ra2Ra, 0In1Re2Ra, 1In, 0Re2Re, 0Ra2Ra, 0In1Ra2Re, 0Ra2Re, 1Ra, 0In2In, 1Re, 0Ra1In2In, 0Re1Ra, 0Ra1In2Re, 0Re1In, 0Ra1In2Ra, 0In2Ra, 0Re1In2Re, 0Ra1In, 0In2Re, 0Re1In2Ra, 1In2In, 0Re1In2In, 1In2Re, 1In2Ra, 0Re1Ra2In, 0Re1Re2In, 1Re2Ra, 0Ra1Re2In, 0In, 2In, 0Ra1Ra, 1Ra2In, 0In1In2In, 0Ra1Ra2Re, 0Re1Re, 1Re2In, 0Ra1Re, 0Ra1Re2Ra, 0Ra1Ra2Ra, 0Ra]
writeSorts(): t: Expressing
writeSorts(): t: ExpressingApproval
writeSorts(): t: ExpressingDisapproval
writeSorts(): t: ExpressingFarewell
writeSorts(): t: ExpressingInLanguage
writeSorts(): t: ExtensionFn
writeRelationSort(): sig: [Class, Attribute]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: ExtinctInTheWildSpecies
writeSorts(): t: ExtinctSpecies
writeSorts(): t: Eye
writeSorts(): t: EyeGlass
writeSorts(): t: EyeIris
writeSorts(): t: EyeMotion
writeSorts(): t: Eyelid
writeSorts(): t: Fabric
writeSorts(): t: FabricIron
writeSorts(): t: Face
writeSorts(): t: FacialExpression
writeSorts(): t: FacialHair
writeSorts(): t: Fact
writeSorts(): t: FactualText
writeSorts(): t: FahrenheitDegree
writeSorts(): t: FallSeason
writeSorts(): t: Falling
writeSorts(): t: FallingAsleep
writeSorts(): t: Fallout
writeSorts(): t: False
writeSorts(): t: FamilyBusiness
writeSorts(): t: FamilyGroup
writeSorts(): t: FanDevice
writeSorts(): t: Farad
writeSorts(): t: Farm
writeSorts(): t: FarmBuilding
writeSorts(): t: FarmHand
writeSorts(): t: Farming
writeSorts(): t: Fasting
writeSorts(): t: FatTissue
writeSorts(): t: Fax
writeSorts(): t: FaxMachine
writeSorts(): t: Feather
writeSorts(): t: February
writeSorts(): t: Feces
writeSorts(): t: Feeding
writeSorts(): t: Feline
writeSorts(): t: Female
writeSorts(): t: FemaleCow
writeSorts(): t: Fence
writeSorts(): t: Fermium
writeSorts(): t: Fern
writeSorts(): t: Ferret
writeSorts(): t: Fever
writeSorts(): t: FictionalText
writeSorts(): t: Field
writeSorts(): t: FieldOfLaw
writeSorts(): t: FieldOfStudy
writeSorts(): t: FileDevice
writeSorts(): t: Fillable
writeSorts(): t: FilmDirector
writeSorts(): t: FilmMaking
writeSorts(): t: FilmMakingProfession
writeSorts(): t: FilmProducer
writeSorts(): t: Filter
writeSorts(): t: FinancialBill
writeSorts(): t: FinancialCompany
writeSorts(): t: FinancialInstrument
writeSorts(): t: FinancialService
writeSorts(): t: FinancialText
writeSorts(): t: FinancialTransaction
writeSorts(): t: Financing
writeSorts(): t: Finger
writeSorts(): t: Fingerprint
writeSorts(): t: FiniteQuantity
writeSorts(): t: FiniteSet
writeSorts(): t: Fire
writeSorts(): t: FireAlarm
writeSorts(): t: FireExtinguisher
writeSorts(): t: FireSprinklerSystem
writeSorts(): t: Firearm
writeSorts(): t: Fireplace
writeSorts(): t: FirstFn
writeRelationSort(): sig: [Entity, List]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [Entity, List]
processRelationSort(): t,s,i: FirstFn, Entity, 0
processRelationSort(): list operator: FirstFn
processRelationSort(): t,s,i: FirstFn, List, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding FirstFn : [0Re, 0In, 0Ra]
writeSorts(): t: Fish
writeSorts(): t: FishTank
writeSorts(): t: Fist
writeSorts(): t: FixedHoliday
writeSorts(): t: FixedPhone
writeSorts(): t: Flag
writeSorts(): t: Flammable
writeSorts(): t: Flat
writeSorts(): t: Fleet
writeSorts(): t: Flooding
writeSorts(): t: Floor
writeSorts(): t: FloorFn
writeSorts(): t: FloorFn__0In1In2InFn
writeSorts(): t: FloorFn__0Ra1Ra2RaFn
writeSorts(): t: FloorFn__0Re1Re2ReFn
writeSorts(): t: Flour
writeSorts(): t: FlowRegion
writeSorts(): t: Flower
writeSorts(): t: FloweringPlant
writeSorts(): t: Fluid
writeSorts(): t: FluidContainer
writeSorts(): t: Fluorine
writeSorts(): t: FlyInsect
writeSorts(): t: Flying
writeSorts(): t: FlyingAircraft
writeSorts(): t: Focusing
writeSorts(): t: Fodder
writeSorts(): t: Fog
writeSorts(): t: Folding
writeSorts(): t: Food
writeSorts(): t: FoodForFn
writeRelationSort(): sig: [SelfConnectedObject+, Organism+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Foot
writeSorts(): t: FootLength
writeSorts(): t: FormOfGovernment
writeSorts(): t: FormText
writeSorts(): t: FormalMeeting
writeSorts(): t: Formula
writeSorts(): t: FossilFuel
writeSorts(): t: Foul
writeSorts(): t: Founding
writeSorts(): t: FourPosterBed
writeSorts(): t: Fox
writeSorts(): t: Fragile
writeSorts(): t: Francium
writeSorts(): t: FreeAtom
writeSorts(): t: Freezer
writeSorts(): t: Freezing
writeSorts(): t: FrenchLanguage
writeSorts(): t: FrequencyMeasure
writeSorts(): t: FreshWaterArea
writeSorts(): t: Friday
writeSorts(): t: Frightening
writeSorts(): t: FrontFn
writeRelationSort(): sig: [SelfConnectedObject, SelfConnectedObject]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Frowning
writeSorts(): t: FruitOrVegetable
writeSorts(): t: Fuel
writeSorts(): t: FullTimePosition
writeSorts(): t: FullyFormed
writeSorts(): t: Function
writeSorts(): t: FunctionQuantity
writeSorts(): t: Functioning
writeSorts(): t: Funding
writeSorts(): t: Funeral
writeSorts(): t: Fungus
writeSorts(): t: Furniture
writeSorts(): t: FutureFn
writeRelationSort(): sig: [TimeInterval, TimePosition]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [TimeInterval, TimePosition]
processRelationSort(): t,s,i: FutureFn, TimeInterval, 0
processRelationSort(): t,s,i: FutureFn, TimePosition, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding FutureFn : []
writeSorts(): t: Gadolinium
writeSorts(): t: GainingConsciousness
writeSorts(): t: Gallium
writeSorts(): t: Game
writeSorts(): t: GameArtifact
writeSorts(): t: GameAttribute
writeSorts(): t: GameBoard
writeSorts(): t: GameCall
writeSorts(): t: GameDie
writeSorts(): t: GameGoal
writeSorts(): t: GamePiece
writeSorts(): t: GameReferee
writeSorts(): t: GameRoom
writeSorts(): t: GameShot
writeSorts(): t: Garage
writeSorts(): t: Gas
writeSorts(): t: GasMixture
writeSorts(): t: GasMotion
writeSorts(): t: Gasoline
writeSorts(): t: GasolineEngine
writeSorts(): t: Gastropod
writeSorts(): t: GeneralizedIntersectionFn
writeRelationSort(): sig: [SetOrClass, SetOrClass+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: GeneralizedUnionFn
writeRelationSort(): sig: [SetOrClass, SetOrClass+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Generator
writeSorts(): t: GeographicArea
writeSorts(): t: Geography
writeSorts(): t: GeologicalProcess
writeSorts(): t: Geology
writeSorts(): t: GeometricFigure
writeSorts(): t: GeometricPoint
writeSorts(): t: GeopoliticalArea
writeSorts(): t: GermanLanguage
writeSorts(): t: Germanium
writeSorts(): t: Gesture
writeSorts(): t: Getting
writeSorts(): t: GigaFn
writeRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
processRelationSort(): t,s,i: GigaFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: GigaFn, UnitOfMeasure, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding GigaFn : []
writeSorts(): t: Girl
writeSorts(): t: Giving
writeSorts(): t: GivingBack
writeSorts(): t: Gland
writeSorts(): t: Glass
writeSorts(): t: Glove
writeSorts(): t: Glue
writeSorts(): t: Goat
writeSorts(): t: Goiter
writeSorts(): t: Gold
writeSorts(): t: Goose
writeSorts(): t: Government
writeSorts(): t: GovernmentBuilding
writeSorts(): t: GovernmentFn
writeRelationSort(): sig: [Government, GeopoliticalArea]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: GovernmentOrganization
writeSorts(): t: GovernmentPerson
writeSorts(): t: GovernmentPosition
writeSorts(): t: GovernmentSecretary
writeSorts(): t: GrabBar
writeSorts(): t: Grabbing
writeSorts(): t: GraduateSchool
writeSorts(): t: Graduation
writeSorts(): t: Gram
writeSorts(): t: Graph
writeSorts(): t: GraphArc
writeSorts(): t: GraphCircuit
writeSorts(): t: GraphElement
writeSorts(): t: GraphLoop
writeSorts(): t: GraphNode
writeSorts(): t: GraphPath
writeSorts(): t: GraphPathFn
writeRelationSort(): sig: [GraphPath+, GraphNode, GraphNode]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: GraphicDesigning
writeSorts(): t: Grass
writeSorts(): t: Grasshopper
writeSorts(): t: Gray
writeSorts(): t: GrayColor
writeSorts(): t: GreatestCommonDivisorFn
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
processRelationSort(): sig: [Integer, Integer]
processRelationSort(): t,s,i: GreatestCommonDivisorFn, Integer, 0
processRelationSort(): t,s,i: GreatestCommonDivisorFn, Integer, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding GreatestCommonDivisorFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: GrecianTub
writeSorts(): t: GreekLanguage
writeSorts(): t: Green
writeSorts(): t: Greeting
writeSorts(): t: GroceryStore
writeSorts(): t: Group
writeSorts(): t: GroupOfAnimals
writeSorts(): t: GroupOfPeople
writeSorts(): t: Growth
writeSorts(): t: GuideBook
writeSorts(): t: Guiding
writeSorts(): t: GuineaPig
writeSorts(): t: Gun
writeSorts(): t: GunBarrel
writeSorts(): t: GunPowder
writeSorts(): t: GunStock
writeSorts(): t: GunTrigger
writeSorts(): t: Hafnium
writeSorts(): t: Hair
writeSorts(): t: HairDryer
writeSorts(): t: HairRemoval
writeSorts(): t: Hammer
writeSorts(): t: Hammock
writeSorts(): t: Hamster
writeSorts(): t: Hand
writeSorts(): t: HandGesture
writeSorts(): t: HandGrenade
writeSorts(): t: HandgrenadeAttack
writeSorts(): t: HandicappedFriendly
writeSorts(): t: Handle
writeSorts(): t: Handstand
writeSorts(): t: Hanging
writeSorts(): t: Happiness
writeSorts(): t: Harmless
writeSorts(): t: Harvesting
writeSorts(): t: Hat
writeSorts(): t: Hay
writeSorts(): t: Head
writeSorts(): t: Headache
writeSorts(): t: Headlight
writeSorts(): t: Healthy
writeSorts(): t: Hearing
writeSorts(): t: Heart
writeSorts(): t: HeatedPool
writeSorts(): t: Heating
writeSorts(): t: HeatingDevice
writeSorts(): t: Helicopter
writeSorts(): t: Helium
writeSorts(): t: HemisphereFigure
writeSorts(): t: Hen
writeSorts(): t: Henry
writeSorts(): t: Herbivore
writeSorts(): t: Hertz
writeSorts(): t: HighRise
writeSorts(): t: HighSchool
writeSorts(): t: Hijacking
writeSorts(): t: Hinge
writeSorts(): t: HipJoint
writeSorts(): t: Hiring
writeSorts(): t: Historical
writeSorts(): t: HistoricalAccount
writeSorts(): t: History
writeSorts(): t: HoistingDevice
writeSorts(): t: Holder
writeSorts(): t: Hole
writeSorts(): t: HoleHostFn
writeRelationSort(): sig: [Object, Hole]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: HoleSkinFn
writeRelationSort(): sig: [Object, Hole]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Holiday
writeSorts(): t: HolidayCard
writeSorts(): t: Holmium
writeSorts(): t: Holster
writeSorts(): t: HomeAppliance
writeSorts(): t: Hominid
writeSorts(): t: Honey
writeSorts(): t: Hoof
writeSorts(): t: HoofedMammal
writeSorts(): t: Horizontal
writeSorts(): t: Hormone
writeSorts(): t: HormoneTSH
writeSorts(): t: Horn
writeSorts(): t: Horse
writeSorts(): t: HorseRiding
writeSorts(): t: Horsepower
writeSorts(): t: HospitalBuilding
writeSorts(): t: HospitalOrganization
writeSorts(): t: HostageTaking
writeSorts(): t: HotTemperature
writeSorts(): t: HotTub
writeSorts(): t: HotWaterHeater
writeSorts(): t: Hour
writeSorts(): t: HourDuration
writeSorts(): t: HourFn
writeRelationSort(): sig: [Hour+, NonnegativeInteger, Day+]
writeRelationSort(): sigstr:  $int * $i 
processRelationSort(): sig: [Hour+, NonnegativeInteger, Day+]
processRelationSort(): t,s,i: HourFn, Hour+, 0
processRelationSort(): t,s,i: HourFn, NonnegativeInteger, 1
processRelationSort(): t,s,i: HourFn, Day+, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding HourFn : [1Ra, 1Re, 1In]
writeSorts(): t: House
writeSorts(): t: Housewife
writeSorts(): t: Human
writeSorts(): t: HumanAdult
writeSorts(): t: HumanBaby
writeSorts(): t: HumanChild
writeSorts(): t: HumanCorpse
writeSorts(): t: HumanDoll
writeSorts(): t: HumanLanguage
writeSorts(): t: HumanSlave
writeSorts(): t: HumanYouth
writeSorts(): t: Humus
writeSorts(): t: Hungry
writeSorts(): t: Hunting
writeSorts(): t: Hydrocarbon
writeSorts(): t: Hydrogen
writeSorts(): t: Hypothalamus
writeSorts(): t: Ice
writeSorts(): t: IceMachine
writeSorts(): t: Icon
writeSorts(): t: Identifier
writeSorts(): t: IdentifierPart
writeSorts(): t: Illegal
writeSorts(): t: Illuminated
writeSorts(): t: Image
writeSorts(): t: ImaginaryNumber
writeSorts(): t: ImaginaryPartFn
writeRelationSort(): sig: [ImaginaryNumber, ComplexNumber]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [ImaginaryNumber, ComplexNumber]
processRelationSort(): t,s,i: ImaginaryPartFn, ImaginaryNumber, 0
processRelationSort(): t,s,i: ImaginaryPartFn, ComplexNumber, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding ImaginaryPartFn : []
writeSorts(): t: Imagining
writeSorts(): t: ImmediateFamilyFn
writeRelationSort(): sig: [FamilyGroup, Human]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: ImmediateFutureFn
writeRelationSort(): sig: [TimeInterval, TimePosition]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [TimeInterval, TimePosition]
processRelationSort(): t,s,i: ImmediateFutureFn, TimeInterval, 0
processRelationSort(): t,s,i: ImmediateFutureFn, TimePosition, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding ImmediateFutureFn : []
writeSorts(): t: ImmediatePastFn
writeRelationSort(): sig: [TimeInterval, TimePosition]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [TimeInterval, TimePosition]
processRelationSort(): t,s,i: ImmediatePastFn, TimeInterval, 0
processRelationSort(): t,s,i: ImmediatePastFn, TimePosition, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding ImmediatePastFn : []
writeSorts(): t: Immigrating
writeSorts(): t: Impacting
writeSorts(): t: Impelling
writeSorts(): t: Imprisoning
writeSorts(): t: Inaudible
writeSorts(): t: IncendiaryDeviceAttack
writeSorts(): t: Inch
writeSorts(): t: InchMercury
writeSorts(): t: Inclining
writeSorts(): t: Increasing
writeSorts(): t: IndependentState
writeSorts(): t: India
writeSorts(): t: Indicating
writeSorts(): t: Indium
writeSorts(): t: Indoors
writeSorts(): t: InductiveArgument
writeSorts(): t: IndustrialPlant
writeSorts(): t: Industry
writeSorts(): t: InfectiousDisease
writeSorts(): t: Infiltration
writeSorts(): t: InfiniteQuantity
writeSorts(): t: InformationMeasure
writeSorts(): t: Ingesting
writeSorts(): t: Inhabited
writeSorts(): t: Inhaling
writeSorts(): t: InheritableRelation
writeSorts(): t: Inheriting
writeSorts(): t: InitialNodeFn
writeRelationSort(): sig: [GraphNode, GraphArc]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Injecting
writeSorts(): t: Injuring
writeSorts(): t: Insect
writeSorts(): t: Inserting
writeSorts(): t: Inside
writeSorts(): t: Installing
writeSorts(): t: Insulin
writeSorts(): t: InsuranceCompany
writeSorts(): t: InsurancePolicy
writeSorts(): t: Integer
writeSorts(): t: IntegerSquareRootFn
writeRelationSort(): sig: [NonnegativeInteger, RealNumber]
writeRelationSort(): sigstr:  $real 
processRelationSort(): sig: [NonnegativeInteger, RealNumber]
processRelationSort(): t,s,i: IntegerSquareRootFn, NonnegativeInteger, 0
processRelationSort(): t,s,i: IntegerSquareRootFn, RealNumber, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding IntegerSquareRootFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: IntentionalProcess
writeSorts(): t: IntentionalPsychologicalProcess
writeSorts(): t: IntentionalRelation
writeSorts(): t: InteriorDesign
writeSorts(): t: InternalAttribute
writeSorts(): t: InternalChange
writeSorts(): t: InternalCombustionEngine
writeSorts(): t: International
writeSorts(): t: InternationalLaw
writeSorts(): t: Interpreting
writeSorts(): t: IntersectionFn
writeRelationSort(): sig: [SetOrClass, SetOrClass, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: IntervalFn
writeRelationSort(): sig: [ConstantQuantity+, ConstantQuantity, ConstantQuantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [ConstantQuantity+, ConstantQuantity, ConstantQuantity]
processRelationSort(): t,s,i: IntervalFn, ConstantQuantity+, 0
processRelationSort(): t,s,i: IntervalFn, ConstantQuantity, 1
processRelationSort(): t,s,i: IntervalFn, ConstantQuantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding IntervalFn : []
writeSorts(): t: Interviewing
writeSorts(): t: Intestine
writeSorts(): t: IntransitiveRelation
writeSorts(): t: InvalidDeductiveArgument
writeSorts(): t: Invertebrate
writeSorts(): t: Investigating
writeSorts(): t: Invoice
writeSorts(): t: InvoiceNumber
writeSorts(): t: Iodine
writeSorts(): t: Ion
writeSorts(): t: Iridium
writeSorts(): t: Iron
writeSorts(): t: Ironing
writeSorts(): t: IroningBoard
writeSorts(): t: IrrationalNumber
writeSorts(): t: IrreflexiveRelation
writeSorts(): t: Island
writeSorts(): t: Ivory
writeSorts(): t: Janitor
writeSorts(): t: January
writeSorts(): t: JoiningAnOrganization
writeSorts(): t: Joule
writeSorts(): t: Journalist
writeSorts(): t: JudgeAtLaw
writeSorts(): t: Judging
writeSorts(): t: JudicialOrganization
writeSorts(): t: JudicialProcess
writeSorts(): t: July
writeSorts(): t: Jumping
writeSorts(): t: June
writeSorts(): t: JuniorCollege
writeSorts(): t: Jury
writeSorts(): t: Kangaroo
writeSorts(): t: KappaFn
writeRelationSort(): sig: [Class, SymbolicString, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: Keeping
writeSorts(): t: KelvinDegree
writeSorts(): t: Kennel
writeSorts(): t: Key
writeSorts(): t: Kicking
writeSorts(): t: Kidnapping
writeSorts(): t: Kidney
writeSorts(): t: Killing
writeSorts(): t: KiloByte
writeSorts(): t: KiloFn
writeRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
processRelationSort(): t,s,i: KiloFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: KiloFn, UnitOfMeasure, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding KiloFn : []
writeSorts(): t: Kilogram
writeSorts(): t: Kilometer
writeSorts(): t: KingBed
writeSorts(): t: Kissing
writeSorts(): t: Kitchen
writeSorts(): t: KitchenArea
writeSorts(): t: Kitten
writeSorts(): t: Knee
writeSorts(): t: Kneeling
writeSorts(): t: KneelingDown
writeSorts(): t: Knife
writeSorts(): t: KnifeAttack
writeSorts(): t: Knight
writeSorts(): t: KnockLight
writeSorts(): t: Knuckle
writeSorts(): t: Krypton
writeSorts(): t: L2
writeSorts(): t: Label
writeSorts(): t: LaborStriking
writeSorts(): t: Laboratory
writeSorts(): t: Ladder
writeSorts(): t: Lamb
writeSorts(): t: Lanai
writeSorts(): t: LandArea
writeSorts(): t: LandTransitway
writeSorts(): t: LandTransportation
writeSorts(): t: LandVehicle
writeSorts(): t: Landing
writeSorts(): t: Language
writeSorts(): t: Lanthanum
writeSorts(): t: Laptop
writeSorts(): t: Larval
writeSorts(): t: LastFn
writeRelationSort(): sig: [Entity, List]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [Entity, List]
processRelationSort(): t,s,i: LastFn, Entity, 0
processRelationSort(): list operator: LastFn
processRelationSort(): t,s,i: LastFn, List, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding LastFn : [0Re, 0In, 0Ra]
writeSorts(): t: LatinLanguage
writeSorts(): t: Laughing
writeSorts(): t: Law
writeSorts(): t: LawEnforcement
writeSorts(): t: Lawn
writeSorts(): t: Lawrencium
writeSorts(): t: Lawyer
writeSorts(): t: LayingEggs
writeSorts(): t: Lead
writeSorts(): t: LeapYear
writeSorts(): t: Learning
writeSorts(): t: LeastCommonMultipleFn
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
processRelationSort(): sig: [Integer, Integer]
processRelationSort(): t,s,i: LeastCommonMultipleFn, Integer, 0
processRelationSort(): t,s,i: LeastCommonMultipleFn, Integer, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding LeastCommonMultipleFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: LeastConcernSpecies
writeSorts(): t: Leather
writeSorts(): t: Leaving
writeSorts(): t: LeavingAnOrganization
writeSorts(): t: Lecture
writeSorts(): t: Left
writeSorts(): t: Leg
writeSorts(): t: Legal
writeSorts(): t: LegalAcquittal
writeSorts(): t: LegalAction
writeSorts(): t: LegalAgent
writeSorts(): t: LegalAppeal
writeSorts(): t: LegalAward
writeSorts(): t: LegalCharge
writeSorts(): t: LegalConviction
writeSorts(): t: LegalDecision
writeSorts(): t: LegalDismissal
writeSorts(): t: LegalOpinion
writeSorts(): t: LegalSummons
writeSorts(): t: LegislativeBill
writeSorts(): t: Lemur
writeSorts(): t: Lending
writeSorts(): t: LengthMeasure
writeSorts(): t: Lengthening
writeSorts(): t: Lens
writeSorts(): t: Lesion
writeSorts(): t: Letter
writeSorts(): t: LetterBombAttack
writeSorts(): t: LevelShape
writeSorts(): t: Lever
writeSorts(): t: Library
writeSorts(): t: LibraryBuilding
writeSorts(): t: LibraryScience
writeSorts(): t: License
writeSorts(): t: Licking
writeSorts(): t: Lieutenant
writeSorts(): t: LightFixture
writeSorts(): t: Lightning
writeSorts(): t: Likely
writeSorts(): t: Lilac
writeSorts(): t: Limb
writeSorts(): t: LineFormation
writeSorts(): t: LinguisticAttribute
writeSorts(): t: LinguisticCommunication
writeSorts(): t: LinguisticExpression
writeSorts(): t: Linguistics
writeSorts(): t: Lion
writeSorts(): t: Lip
writeSorts(): t: LiquefiedPetroleumGas
writeSorts(): t: Liquid
writeSorts(): t: LiquidBodySubstance
writeSorts(): t: LiquidFood
writeSorts(): t: LiquidMixture
writeSorts(): t: LiquidMotion
writeSorts(): t: LiquorShot
writeSorts(): t: List
writeSorts(): t: ListConcatenateFn
writeRelationSort(): sig: [List, List, List]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [List, List, List]
processRelationSort(): t,s,i: ListConcatenateFn, List, 0
processRelationSort(): t,s,i: ListConcatenateFn, List, 1
processRelationSort(): t,s,i: ListConcatenateFn, List, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding ListConcatenateFn : []
writeSorts(): t: ListFn
writeRelationSort(): sig: [List, Entity]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [List, Entity]
processRelationSort(): t,s,i: ListFn, List, 0
processRelationSort(): t,s,i: ListFn, Entity, 1
processRelationSort(): list operator: ListFn
processRelationSort(): modsig: {0=[], 1=[, 1Ra, 1Re, 1In]}
processRelationSort(): adding ListFn : [1Ra, 1Re, 1In]
writeSorts(): t: ListLengthFn
writeRelationSort(): sig: [NonnegativeInteger, List]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [NonnegativeInteger, List]
processRelationSort(): t,s,i: ListLengthFn, NonnegativeInteger, 0
processRelationSort(): t,s,i: ListLengthFn, List, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding ListLengthFn : [0Re, 0In, 0Ra]
writeSorts(): t: ListOrderFn
writeRelationSort(): sig: [Entity, List, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [Entity, List, PositiveInteger]
processRelationSort(): t,s,i: ListOrderFn, Entity, 0
processRelationSort(): list operator: ListOrderFn
processRelationSort(): t,s,i: ListOrderFn, List, 1
processRelationSort(): t,s,i: ListOrderFn, PositiveInteger, 2
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding ListOrderFn : [2Ra, 0Ra2In, 0In2In, 0Re, 0Re2Ra, 2Re, 0In2Ra, 0Re2In, 0In2Re, 0In, 2In, 0Re2Re, 0Ra2Ra, 0Ra, 0Ra2Re]
writeSorts(): t: Listening
writeSorts(): t: Liter
writeSorts(): t: LiteracyAttribute
writeSorts(): t: Literature
writeSorts(): t: Lithium
writeSorts(): t: Liver
writeSorts(): t: Livestock
writeSorts(): t: LivestockPen
writeSorts(): t: Living
writeSorts(): t: Llama
writeSorts(): t: LoadingWeapon
writeSorts(): t: Local
writeSorts(): t: LocalizablePlace
writeSorts(): t: LocalizablePlaceID
writeSorts(): t: Lock
writeSorts(): t: Locked
writeSorts(): t: LogFn
writeRelationSort(): sig: [RealNumber, RealNumber, PositiveInteger]
writeRelationSort(): sigstr:  $real * $int 
processRelationSort(): sig: [RealNumber, RealNumber, PositiveInteger]
processRelationSort(): t,s,i: LogFn, RealNumber, 0
processRelationSort(): t,s,i: LogFn, RealNumber, 1
processRelationSort(): t,s,i: LogFn, PositiveInteger, 2
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding LogFn : [2Ra, 0In1In, 0Ra1Re2Re, 0Ra2In, 0Re, 0Re2Ra, 2Re, 1Ra2Re, 0In1In2Re, 0Ra1Ra2In, 0In1Ra, 1Ra2Ra, 0In1In2Ra, 0Re2In, 1Re2Re, 0In1Re, 0Re1Ra2Re, 0Re1Re2Ra, 0Re1Ra2Ra, 0Re1Re2Re, 0In1Ra2In, 0In1Re2In, 0In1Re2Re, 0In1Ra2Ra, 0In1Re2Ra, 1In, 0Re2Re, 0Ra2Ra, 0In1Ra2Re, 0Ra2Re, 1Ra, 0In2In, 1Re, 0Ra1In2In, 0Re1Ra, 0Ra1In2Re, 0Re1In, 0Ra1In2Ra, 0In2Ra, 0Re1In2Re, 0Ra1In, 0In2Re, 0Re1In2Ra, 1In2In, 0Re1In2In, 1In2Re, 1In2Ra, 0Re1Ra2In, 0Re1Re2In, 1Re2Ra, 0Ra1Re2In, 0In, 2In, 0Ra1Ra, 1Ra2In, 0In1In2In, 0Ra1Ra2Re, 0Re1Re, 1Re2In, 0Ra1Re, 0Ra1Re2Ra, 0Ra1Ra2Ra, 0Ra]
writeSorts(): t: LogicalOperator
writeSorts(): t: LongAndThin
writeSorts(): t: LongTon
writeSorts(): t: Looking
writeSorts(): t: LosingConsciousness
writeSorts(): t: Lost
writeSorts(): t: Lumen
writeSorts(): t: Lung
writeSorts(): t: Lutetium
writeSorts(): t: Lux
writeSorts(): t: LyingDown
writeSorts(): t: Lynching
writeSorts(): t: LyricalContent
writeSorts(): t: Lyrics
writeSorts(): t: Machine
writeSorts(): t: Madagascar
writeSorts(): t: Magazine
writeSorts(): t: Magnesium
writeSorts(): t: Magnetism
writeSorts(): t: MagnitudeFn
writeRelationSort(): sig: [RealNumber, PhysicalQuantity]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [RealNumber, PhysicalQuantity]
processRelationSort(): t,s,i: MagnitudeFn, RealNumber, 0
processRelationSort(): t,s,i: MagnitudeFn, PhysicalQuantity, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding MagnitudeFn : [0Re, 0In, 0Ra]
writeSorts(): t: Maid
writeSorts(): t: Mailbox
writeSorts(): t: Mailing
writeSorts(): t: Maintaining
writeSorts(): t: MaizeGrain
writeSorts(): t: Major
writeSorts(): t: MajorAppliance
writeSorts(): t: MajorGeneral
writeSorts(): t: Making
writeSorts(): t: MakingFn
writeRelationSort(): sig: [Object+, Making+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: MakingInstrumentalMusic
writeSorts(): t: MakingMusic
writeSorts(): t: MakingVocalMusic
writeSorts(): t: Male
writeSorts(): t: Malfunctioning
writeSorts(): t: Mammal
writeSorts(): t: MammalCub
writeSorts(): t: Man
writeSorts(): t: Managing
writeSorts(): t: Maneuver
writeSorts(): t: Manganese
writeSorts(): t: Manifold
writeSorts(): t: ManualHumanLanguage
writeSorts(): t: ManualLabor
writeSorts(): t: Manufacture
writeSorts(): t: Manufacturer
writeSorts(): t: Map
writeSorts(): t: March
writeSorts(): t: Marketplace
writeSorts(): t: MarriageContract
writeSorts(): t: Marshal
writeSorts(): t: Marsupial
writeSorts(): t: MassMeasure
writeSorts(): t: Massaging
writeSorts(): t: Mast
writeSorts(): t: MatchDevice
writeSorts(): t: MaterialHandlingEquipment
writeSorts(): t: Mathematics
writeSorts(): t: Mating
writeSorts(): t: Matriculation
writeSorts(): t: Mattress
writeSorts(): t: MaxFn
writeRelationSort(): sig: [Quantity, Quantity, Quantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [Quantity, Quantity, Quantity]
processRelationSort(): t,s,i: MaxFn, Quantity, 0
processRelationSort(): t,s,i: MaxFn, Quantity, 1
processRelationSort(): t,s,i: MaxFn, Quantity, 2
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding MaxFn : [2Ra, 0In1In, 0Ra1Re2Re, 0Ra2In, 0Re, 0Re2Ra, 2Re, 1Ra2Re, 0In1In2Re, 0Ra1Ra2In, 0In1Ra, 1Ra2Ra, 0In1In2Ra, 0Re2In, 1Re2Re, 0In1Re, 0Re1Ra2Re, 0Re1Re2Ra, 0Re1Ra2Ra, 0Re1Re2Re, 0In1Ra2In, 0In1Re2In, 0In1Re2Re, 0In1Ra2Ra, 0In1Re2Ra, 1In, 0Re2Re, 0Ra2Ra, 0In1Ra2Re, 0Ra2Re, 1Ra, 0In2In, 1Re, 0Ra1In2In, 0Re1Ra, 0Ra1In2Re, 0Re1In, 0Ra1In2Ra, 0In2Ra, 0Re1In2Re, 0Ra1In, 0In2Re, 0Re1In2Ra, 1In2In, 0Re1In2In, 1In2Re, 1In2Ra, 0Re1Ra2In, 0Re1Re2In, 1Re2Ra, 0Ra1Re2In, 0In, 2In, 0Ra1Ra, 1Ra2In, 0In1In2In, 0Ra1Ra2Re, 0Re1Re, 1Re2In, 0Ra1Re, 0Ra1Re2Ra, 0Ra1Ra2Ra, 0Ra]
writeSorts(): t: MaximalWeightedPathFn
writeRelationSort(): sig: [GraphPath, GraphNode, GraphNode]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: May
writeSorts(): t: Meal
writeSorts(): t: MeasureFn
writeRelationSort(): sig: [PhysicalQuantity, RealNumber, UnitOfMeasure]
writeRelationSort(): sigstr:  $real * $i 
processRelationSort(): sig: [PhysicalQuantity, RealNumber, UnitOfMeasure]
processRelationSort(): t,s,i: MeasureFn, PhysicalQuantity, 0
processRelationSort(): t,s,i: MeasureFn, RealNumber, 1
processRelationSort(): t,s,i: MeasureFn, UnitOfMeasure, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding MeasureFn : [1Ra, 1Re, 1In]
writeSorts(): t: Measuring
writeSorts(): t: MeasuringDevice
writeSorts(): t: Meat
writeSorts(): t: MediaOrganization
writeSorts(): t: MediaSystem
writeSorts(): t: MedicalClinic
writeSorts(): t: MedicalClinicBuilding
writeSorts(): t: MedicalDoctor
writeSorts(): t: MedicalSchool
writeSorts(): t: MedicalScience
writeSorts(): t: Medicine
writeSorts(): t: Meeting
writeSorts(): t: MegaByte
writeSorts(): t: MegaFn
writeRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
processRelationSort(): t,s,i: MegaFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: MegaFn, UnitOfMeasure, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding MegaFn : []
writeSorts(): t: Meitnerium
writeSorts(): t: Melting
writeSorts(): t: Memorizing
writeSorts(): t: Mendelevium
writeSorts(): t: Menstruation
writeSorts(): t: MercantileOrganization
writeSorts(): t: Mercury
writeSorts(): t: MereologicalDifferenceFn
writeRelationSort(): sig: [Object, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: MereologicalProductFn
writeRelationSort(): sig: [Object, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: MereologicalSumFn
writeRelationSort(): sig: [Object, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: Message
writeSorts(): t: Messaging
writeSorts(): t: Metal
writeSorts(): t: MetallicAlloy
writeSorts(): t: Meter
writeSorts(): t: MetricTon
writeSorts(): t: MicroFn
writeRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
processRelationSort(): t,s,i: MicroFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: MicroFn, UnitOfMeasure, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding MicroFn : []
writeSorts(): t: Microorganism
writeSorts(): t: Microphone
writeSorts(): t: Microscope
writeSorts(): t: Microwave
writeSorts(): t: Midnight
writeSorts(): t: Mile
writeSorts(): t: Militant
writeSorts(): t: MilitaryArtifact
writeSorts(): t: MilitaryCorps
writeSorts(): t: MilitaryForce
writeSorts(): t: MilitaryFront
writeSorts(): t: MilitaryGeneral
writeSorts(): t: MilitaryInfiltration
writeSorts(): t: MilitaryInstallation
writeSorts(): t: MilitaryManeuver
writeSorts(): t: MilitaryOfficer
writeSorts(): t: MilitaryOrganization
writeSorts(): t: MilitaryPerson
writeSorts(): t: MilitaryPrivate
writeSorts(): t: MilitaryProcess
writeSorts(): t: MilitaryReserveForce
writeSorts(): t: MilitaryScience
writeSorts(): t: MilitaryService
writeSorts(): t: MilitarySquad
writeSorts(): t: MilitarySurplus
writeSorts(): t: MilitaryUnit
writeSorts(): t: Milk
writeSorts(): t: MillenniumDuration
writeSorts(): t: MilliFn
writeRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
processRelationSort(): t,s,i: MilliFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: MilliFn, UnitOfMeasure, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding MilliFn : []
writeSorts(): t: Millimeter
writeSorts(): t: MinFn
writeRelationSort(): sig: [Quantity, Quantity, Quantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [Quantity, Quantity, Quantity]
processRelationSort(): t,s,i: MinFn, Quantity, 0
processRelationSort(): t,s,i: MinFn, Quantity, 1
processRelationSort(): t,s,i: MinFn, Quantity, 2
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding MinFn : [2Ra, 0In1In, 0Ra1Re2Re, 0Ra2In, 0Re, 0Re2Ra, 2Re, 1Ra2Re, 0In1In2Re, 0Ra1Ra2In, 0In1Ra, 1Ra2Ra, 0In1In2Ra, 0Re2In, 1Re2Re, 0In1Re, 0Re1Ra2Re, 0Re1Re2Ra, 0Re1Ra2Ra, 0Re1Re2Re, 0In1Ra2In, 0In1Re2In, 0In1Re2Re, 0In1Ra2Ra, 0In1Re2Ra, 1In, 0Re2Re, 0Ra2Ra, 0In1Ra2Re, 0Ra2Re, 1Ra, 0In2In, 1Re, 0Ra1In2In, 0Re1Ra, 0Ra1In2Re, 0Re1In, 0Ra1In2Ra, 0In2Ra, 0Re1In2Re, 0Ra1In, 0In2Re, 0Re1In2Ra, 1In2In, 0Re1In2In, 1In2Re, 1In2Ra, 0Re1Ra2In, 0Re1Re2In, 1Re2Ra, 0Ra1Re2In, 0In, 2In, 0Ra1Ra, 1Ra2In, 0In1In2In, 0Ra1Ra2Re, 0Re1Re, 1Re2In, 0Ra1Re, 0Ra1Re2Ra, 0Ra1Ra2Ra, 0Ra]
writeSorts(): t: Mine
writeSorts(): t: Mineral
writeSorts(): t: MinimalCutSetFn
writeRelationSort(): sig: [GraphPath+, Graph]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: MinimalWeightedPathFn
writeRelationSort(): sig: [GraphPath, GraphNode, GraphNode]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: Minute
writeSorts(): t: MinuteDuration
writeSorts(): t: MinuteFn
writeRelationSort(): sig: [Minute+, NonnegativeInteger, Hour+]
writeRelationSort(): sigstr:  $int * $i 
processRelationSort(): sig: [Minute+, NonnegativeInteger, Hour+]
processRelationSort(): t,s,i: MinuteFn, Minute+, 0
processRelationSort(): t,s,i: MinuteFn, NonnegativeInteger, 1
processRelationSort(): t,s,i: MinuteFn, Hour+, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding MinuteFn : [1Ra, 1Re, 1In]
writeSorts(): t: Mirror
writeSorts(): t: Missile
writeSorts(): t: MissionOrganization
writeSorts(): t: Mixture
writeSorts(): t: MmMercury
writeSorts(): t: MobileCellPhone
writeSorts(): t: MobileResidence
writeSorts(): t: ModellingPosition
writeSorts(): t: Mole
writeSorts(): t: Molecule
writeSorts(): t: Mollusk
writeSorts(): t: Molybdenum
writeSorts(): t: Monday
writeSorts(): t: Monkey
writeSorts(): t: Monochromatic
writeSorts(): t: MonophonicMusic
writeSorts(): t: Month
writeSorts(): t: MonthDuration
writeSorts(): t: MonthFn
writeRelationSort(): sig: [Month+, Month+, Year+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: Monument
writeSorts(): t: Morning
writeSorts(): t: MorningFn
writeRelationSort(): sig: [Morning+, Day+]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Morpheme
writeSorts(): t: Mortar
writeSorts(): t: MortarAttack
writeSorts(): t: MortarGun
writeSorts(): t: Moss
writeSorts(): t: Moth
writeSorts(): t: Motion
writeSorts(): t: MotionDownward
writeSorts(): t: MotionPicture
writeSorts(): t: MotionPictureScene
writeSorts(): t: MotionPictureShot
writeSorts(): t: MotionUpward
writeSorts(): t: Motionless
writeSorts(): t: MountainTimeZone
writeSorts(): t: Mounting
writeSorts(): t: Mouse
writeSorts(): t: Mouth
writeSorts(): t: MoveableHoliday
writeSorts(): t: MovingResidence
writeSorts(): t: Mule
writeSorts(): t: MultiGraph
writeSorts(): t: Multilingual
writeSorts(): t: MultimediaProjector
writeSorts(): t: MultiplicationFn
writeSorts(): t: MultiplicationFn__0In1In2InFn
writeSorts(): t: MultiplicationFn__0Ra1Ra2RaFn
writeSorts(): t: MultiplicationFn__0Re1Re2ReFn
writeSorts(): t: Murder
writeSorts(): t: MurphyBed
writeSorts(): t: Muscle
writeSorts(): t: Museum
writeSorts(): t: Music
writeSorts(): t: MusicRecording
writeSorts(): t: MusicText
writeSorts(): t: MusicalComposition
writeSorts(): t: MusicalConducting
writeSorts(): t: MusicalGroup
writeSorts(): t: MusicalInstrument
writeSorts(): t: MusicalPerformance
writeSorts(): t: MusicalTone
writeSorts(): t: Musician
writeSorts(): t: Mute
writeSorts(): t: MutuallyDisjointClass
writeSorts(): t: Myriapod
writeSorts(): t: MysteryStory
writeSorts(): t: Nail
writeSorts(): t: NailDigit
writeSorts(): t: Naked
writeSorts(): t: NakedPromise
writeSorts(): t: Name
writeSorts(): t: NamePart
writeSorts(): t: Naming
writeSorts(): t: NanoFn
writeRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
processRelationSort(): t,s,i: NanoFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: NanoFn, UnitOfMeasure, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding NanoFn : []
writeSorts(): t: Nanometer
writeSorts(): t: NarrativeText
writeSorts(): t: Nation
writeSorts(): t: NationalFlag
writeSorts(): t: NationalPerson
writeSorts(): t: NaturalLanguage
writeSorts(): t: NaturalProcess
writeSorts(): t: NaturalSubstance
writeSorts(): t: Near
writeSorts(): t: NearThreatenedSpecies
writeSorts(): t: Necessity
writeSorts(): t: Neck
writeSorts(): t: Nectar
writeSorts(): t: NegativeInfinity
writeSorts(): t: NegativeInteger
writeSorts(): t: NegativeRealNumber
writeSorts(): t: Negotiating
writeSorts(): t: Neighborhood
writeSorts(): t: Neodymium
writeSorts(): t: Neon
writeSorts(): t: Neptunium
writeSorts(): t: NerveCell
writeSorts(): t: NervousSystem
writeSorts(): t: Nest
writeSorts(): t: Neurosis
writeSorts(): t: Neutron
writeSorts(): t: NewTestament
writeSorts(): t: NewsProgram
writeSorts(): t: NewsReporter
writeSorts(): t: Newspaper
writeSorts(): t: Newton
writeSorts(): t: Nickel
writeSorts(): t: NightClub
writeSorts(): t: NightTime
writeSorts(): t: Niobium
writeSorts(): t: Nitrogen
writeSorts(): t: Nobelium
writeSorts(): t: Nodding
writeSorts(): t: NonCompositeUnitMeasure
writeSorts(): t: NonCompositeUnitOfMeasure
writeSorts(): t: NonFloweringPlant
writeSorts(): t: NonFullyFormed
writeSorts(): t: NonFullyformed
writeSorts(): t: NonNullSet
writeSorts(): t: NonnegativeInteger
writeSorts(): t: NonnegativeRealNumber
writeSorts(): t: NonprofitOrganization
writeSorts(): t: NonspecificDisease
writeSorts(): t: Noon
writeSorts(): t: NormativeAttribute
writeSorts(): t: North
writeSorts(): t: NorthAmerica
writeSorts(): t: Nose
writeSorts(): t: Nostril
writeSorts(): t: Noun
writeSorts(): t: NounPhrase
writeSorts(): t: Novel
writeSorts(): t: November
writeSorts(): t: NuclearFamily
writeSorts(): t: NullList
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: []
writeSorts(): t: NullSet
writeSorts(): t: Number
writeSorts(): t: NumberE
writeSorts(): t: NumeratorFn
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
processRelationSort(): sig: [Integer, RealNumber]
processRelationSort(): t,s,i: NumeratorFn, Integer, 0
processRelationSort(): t,s,i: NumeratorFn, RealNumber, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding NumeratorFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: Nursery
writeSorts(): t: Nutrient
writeSorts(): t: OakWood
writeSorts(): t: Oar
writeSorts(): t: Object
writeSorts(): t: ObjectAttitude
writeSorts(): t: ObjectiveNorm
writeSorts(): t: Obligation
writeSorts(): t: ObliqueAngle
writeSorts(): t: OccupationFn
writeRelationSort(): sig: [FinancialTransaction+, IntentionalProcess]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: OccupationalDomain
writeSorts(): t: OccupationalRole
writeSorts(): t: OccupationalTrade
writeSorts(): t: October
writeSorts(): t: Octopus
writeSorts(): t: OctopusMeat
writeSorts(): t: OddInteger
writeSorts(): t: Offering
writeSorts(): t: OfferingForSale
writeSorts(): t: OfferingToPurchase
writeSorts(): t: OfficeBuilding
writeSorts(): t: Ohm
writeSorts(): t: Oil
writeSorts(): t: OilPaint
writeSorts(): t: OilPicture
writeSorts(): t: OldTestament
writeSorts(): t: OlfactoryAttribute
writeSorts(): t: On
writeSorts(): t: OneDimensionalFigure
writeSorts(): t: OneToOneFunction
writeSorts(): t: Ontology
writeSorts(): t: OpenTwoDimensionalFigure
writeSorts(): t: Opening
writeSorts(): t: OpeningEyes
writeSorts(): t: Opera
writeSorts(): t: OperatingFn
writeRelationSort(): sig: [Process+, Device]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: OperatorAssistedTelephoneCommunication
writeSorts(): t: Opium
writeSorts(): t: OpticalDevice
writeSorts(): t: OrangeColor
writeSorts(): t: Orchestra
writeSorts(): t: OrchestralConducting
writeSorts(): t: Order
writeSorts(): t: Ordering
writeSorts(): t: Organ
writeSorts(): t: OrganOrTissueProcess
writeSorts(): t: OrganicCompound
writeSorts(): t: OrganicObject
writeSorts(): t: OrganicThing
writeSorts(): t: Organification
writeSorts(): t: Organism
writeSorts(): t: OrganismProcess
writeSorts(): t: OrganismRemains
writeSorts(): t: Organization
writeSorts(): t: OrganizationalBoard
writeSorts(): t: OrganizationalMerging
writeSorts(): t: OrganizationalProcess
writeSorts(): t: Orthography
writeSorts(): t: Osmium
writeSorts(): t: Ossification
writeSorts(): t: Ounce
writeSorts(): t: OunceMass
writeSorts(): t: OutdoorClothing
writeSorts(): t: Outdoors
writeSorts(): t: OuterSpaceRegion
writeSorts(): t: OutletAdapter
writeSorts(): t: Outside
writeSorts(): t: Oval
writeSorts(): t: Oven
writeSorts(): t: OverseasArea
writeSorts(): t: Owl
writeSorts(): t: Oxidation
writeSorts(): t: Oxygen
writeSorts(): t: PacificTimeZone
writeSorts(): t: Page
writeSorts(): t: Pain
writeSorts(): t: Paint
writeSorts(): t: PaintedPicture
writeSorts(): t: Painting
writeSorts(): t: PaintingDevice
writeSorts(): t: PairwiseDisjointClass
writeSorts(): t: Paleontology
writeSorts(): t: Palladium
writeSorts(): t: Pancreas
writeSorts(): t: Panda
writeSorts(): t: Paper
writeSorts(): t: PaperShredder
writeSorts(): t: Paragraph
writeSorts(): t: ParamilitaryOrganization
writeSorts(): t: Park
writeSorts(): t: Parrot
writeSorts(): t: PartTimePosition
writeSorts(): t: PartialOrderingRelation
writeSorts(): t: PartialValuedRelation
writeSorts(): t: ParticleWord
writeSorts(): t: Partnership
writeSorts(): t: Pascal
writeSorts(): t: PassCertificate
writeSorts(): t: PassingABill
writeSorts(): t: Passport
writeSorts(): t: PastFn
writeRelationSort(): sig: [TimeInterval, TimePosition]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [TimeInterval, TimePosition]
processRelationSort(): t,s,i: PastFn, TimeInterval, 0
processRelationSort(): t,s,i: PastFn, TimePosition, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding PastFn : []
writeSorts(): t: Patent
writeSorts(): t: PathWeightFn
writeRelationSort(): sig: [Quantity, GraphPath]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [Quantity, GraphPath]
processRelationSort(): t,s,i: PathWeightFn, Quantity, 0
processRelationSort(): t,s,i: PathWeightFn, GraphPath, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding PathWeightFn : [0Re, 0In, 0Ra]
writeSorts(): t: PathologicProcess
writeSorts(): t: Patio
writeSorts(): t: Paved
writeSorts(): t: Pea
writeSorts(): t: PeaceKeepingMission
writeSorts(): t: PearFruit
writeSorts(): t: Peeling
writeSorts(): t: Pencil
writeSorts(): t: PerCapitaFn
writeRelationSort(): sig: [Quantity, Quantity, GeopoliticalArea]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [Quantity, Quantity, GeopoliticalArea]
processRelationSort(): t,s,i: PerCapitaFn, Quantity, 0
processRelationSort(): t,s,i: PerCapitaFn, Quantity, 1
processRelationSort(): t,s,i: PerCapitaFn, GeopoliticalArea, 2
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding PerCapitaFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: PerFn
writeRelationSort(): sig: [FunctionQuantity, PhysicalQuantity, PhysicalQuantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [FunctionQuantity, PhysicalQuantity, PhysicalQuantity]
processRelationSort(): t,s,i: PerFn, FunctionQuantity, 0
processRelationSort(): t,s,i: PerFn, PhysicalQuantity, 1
processRelationSort(): t,s,i: PerFn, PhysicalQuantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding PerFn : []
writeSorts(): t: Perception
writeSorts(): t: PerceptualAttribute
writeSorts(): t: Performance
writeSorts(): t: PerformanceAct
writeSorts(): t: PerformanceProgram
writeSorts(): t: PerformanceStage
writeSorts(): t: PerformanceStageWing
writeSorts(): t: Performer
writeSorts(): t: Periodical
writeSorts(): t: PeriodicalIssueFn
writeRelationSort(): sig: [Periodical+, Periodical+, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [Periodical+, Periodical+, PositiveInteger]
processRelationSort(): t,s,i: PeriodicalIssueFn, Periodical+, 0
processRelationSort(): t,s,i: PeriodicalIssueFn, Periodical+, 1
processRelationSort(): t,s,i: PeriodicalIssueFn, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding PeriodicalIssueFn : [2Ra, 2Re, 2In]
writeSorts(): t: PeriodicalPublisher
writeSorts(): t: PermanentResidence
writeSorts(): t: Permission
writeSorts(): t: PetroleumProduct
writeSorts(): t: Pharmacist
writeSorts(): t: Philosophy
writeSorts(): t: Phosphorus
writeSorts(): t: Photocopier
writeSorts(): t: Photocopying
writeSorts(): t: Photograph
writeSorts(): t: PhotographicFilm
writeSorts(): t: Photographing
writeSorts(): t: Phrase
writeSorts(): t: Physical
writeSorts(): t: PhysicalAttribute
writeSorts(): t: PhysicalDisability
writeSorts(): t: PhysicalQuantity
writeSorts(): t: PhysicalState
writeSorts(): t: PhysicalSystem
writeSorts(): t: Physics
writeSorts(): t: PhysiologicProcess
writeSorts(): t: Physiology
writeSorts(): t: Pi
writeSorts(): t: PicoFn
writeRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
processRelationSort(): t,s,i: PicoFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: PicoFn, UnitOfMeasure, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding PicoFn : []
writeSorts(): t: PictureFrame
writeSorts(): t: Pig
writeSorts(): t: Pigeon
writeSorts(): t: Pillow
writeSorts(): t: Pink
writeSorts(): t: Pint
writeSorts(): t: Pistol
writeSorts(): t: Pitching
writeSorts(): t: PituitaryGland
writeSorts(): t: PlaceAddress
writeSorts(): t: PlaceDescriptor
writeSorts(): t: PlaceID
writeSorts(): t: PlaceOfCommerce
writeSorts(): t: PlaceOfWorship
writeSorts(): t: PlacingUnderArrest
writeSorts(): t: Plan
writeSorts(): t: PlaneAngleMeasure
writeSorts(): t: Planning
writeSorts(): t: Plant
writeSorts(): t: PlantAnatomicalStructure
writeSorts(): t: PlantBranch
writeSorts(): t: PlantLeaf
writeSorts(): t: PlantRoot
writeSorts(): t: PlantSubstance
writeSorts(): t: Plasma
writeSorts(): t: Plastic
writeSorts(): t: Platinum
writeSorts(): t: PlayingCard
writeSorts(): t: Pleading
writeSorts(): t: Pliable
writeSorts(): t: Plug
writeSorts(): t: Plumber
writeSorts(): t: Plutonium
writeSorts(): t: Pocket
writeSorts(): t: Poisoning
writeSorts(): t: Poking
writeSorts(): t: PoliceCaptain
writeSorts(): t: PoliceDetective
writeSorts(): t: PoliceFacility
writeSorts(): t: PoliceOfficer
writeSorts(): t: PoliceOrganization
writeSorts(): t: PoliceSergeant
writeSorts(): t: Policy
writeSorts(): t: PoliticalCrime
writeSorts(): t: PoliticalFigure
writeSorts(): t: PoliticalOrganization
writeSorts(): t: PoliticalProcess
writeSorts(): t: PoliticalRevolution
writeSorts(): t: PoliticalScience
writeSorts(): t: PoliticoEconomicAttribute
writeSorts(): t: Pollen
writeSorts(): t: Polling
writeSorts(): t: Polonium
writeSorts(): t: Polychromatic
writeSorts(): t: Polygon
writeSorts(): t: PolyphonicMusic
writeSorts(): t: Polypropylene
writeSorts(): t: Polystyrene
writeSorts(): t: Poodle
writeSorts(): t: Porch
writeSorts(): t: Pork
writeSorts(): t: PortableComputer
writeSorts(): t: Portrait
writeSorts(): t: Position
writeSorts(): t: PositionalAttribute
writeSorts(): t: PositiveInfinity
writeSorts(): t: PositiveInteger
writeSorts(): t: PositiveRealNumber
writeSorts(): t: Possibility
writeSorts(): t: PostMeridiem
writeSorts(): t: PostSecondarySchool
writeSorts(): t: PostalAddressText
writeSorts(): t: PostalPlace
writeSorts(): t: PostcodeArea
writeSorts(): t: PotOrPan
writeSorts(): t: Potassium
writeSorts(): t: Potter
writeSorts(): t: Pottery
writeSorts(): t: Poultry
writeSorts(): t: PoundForce
writeSorts(): t: PoundMass
writeSorts(): t: Pouring
writeSorts(): t: Powder
writeSorts(): t: PowerSetFn
writeRelationSort(): sig: [SetOrClass+, SetOrClass]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: PowerSource
writeSorts(): t: Praseodymium
writeSorts(): t: PrayerMat
writeSorts(): t: Praying
writeSorts(): t: Precipitation
writeSorts(): t: PredecessorFn
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
processRelationSort(): sig: [Integer, Integer]
processRelationSort(): t,s,i: PredecessorFn, Integer, 0
processRelationSort(): t,s,i: PredecessorFn, Integer, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding PredecessorFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: Predicate
writeSorts(): t: Predicting
writeSorts(): t: Pregnant
writeSorts(): t: PremisesFn
writeRelationSort(): sig: [Proposition, Argument]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: PreparedFood
writeSorts(): t: PrepositionalPhrase
writeSorts(): t: PressureControlValve
writeSorts(): t: PressureMeasuringDevice
writeSorts(): t: Pretending
writeSorts(): t: PrimaryColor
writeSorts(): t: Primate
writeSorts(): t: PrimeNumber
writeSorts(): t: PrintedSheet
writeSorts(): t: Prison
writeSorts(): t: PrivateAttribute
writeSorts(): t: PrivateDetective
writeSorts(): t: PrivateSchool
writeSorts(): t: ProbabilityAttribute
writeSorts(): t: ProbabilityFn
writeRelationSort(): sig: [RealNumber, Formula]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [RealNumber, Formula]
processRelationSort(): t,s,i: ProbabilityFn, RealNumber, 0
processRelationSort(): t,s,i: ProbabilityFn, Formula, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding ProbabilityFn : [0Re, 0In, 0Ra]
writeSorts(): t: ProbabilityRelation
writeSorts(): t: Procedure
writeSorts(): t: Process
writeSorts(): t: Proclaiming
writeSorts(): t: Product
writeSorts(): t: Profession
writeSorts(): t: Professor
writeSorts(): t: Prohibition
writeSorts(): t: Projectile
writeSorts(): t: ProjectileLauncher
writeSorts(): t: ProjectileShell
writeSorts(): t: ProjectionScreen
writeSorts(): t: Promethium
writeSorts(): t: Promise
writeSorts(): t: Prompting
writeSorts(): t: PropertyFn
writeRelationSort(): sig: [Set, Agent]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Proposition
writeSorts(): t: PropositionalAttitude
writeSorts(): t: Proprietorship
writeSorts(): t: Prostrate
writeSorts(): t: Protactinium
writeSorts(): t: Protecting
writeSorts(): t: Protein
writeSorts(): t: Proton
writeSorts(): t: Protozoa
writeSorts(): t: PseudoGraph
writeSorts(): t: PsychologicalAttribute
writeSorts(): t: PsychologicalDysfunction
writeSorts(): t: PsychologicalProcess
writeSorts(): t: Psychology
writeSorts(): t: Psychosis
writeSorts(): t: Puberty
writeSorts(): t: Public
writeSorts(): t: PublicAddressSystem
writeSorts(): t: PublicDefender
writeSorts(): t: PublicLibrary
writeSorts(): t: PublicPark
writeSorts(): t: PublicProsecutor
writeSorts(): t: PublicSchool
writeSorts(): t: Publication
writeSorts(): t: Publisher
writeSorts(): t: Pulling
writeSorts(): t: PulmonaryArtery
writeSorts(): t: PulmonaryVein
writeSorts(): t: Pump
writeSorts(): t: Punching
writeSorts(): t: Punishing
writeSorts(): t: Puppy
writeSorts(): t: PurchaseContract
writeSorts(): t: PurchaseOrder
writeSorts(): t: PurchaseOrderNumber
writeSorts(): t: PureSubstance
writeSorts(): t: Purple
writeSorts(): t: Pursuing
writeSorts(): t: Pushing
writeSorts(): t: Putting
writeSorts(): t: Quadrilateral
writeSorts(): t: Quantity
writeSorts(): t: QuantityChange
writeSorts(): t: Quart
writeSorts(): t: QuarterFn
writeRelationSort(): sig: [QuarterYear+, PositiveInteger, Year+]
writeRelationSort(): sigstr:  $int * $i 
processRelationSort(): sig: [QuarterYear+, PositiveInteger, Year+]
processRelationSort(): t,s,i: QuarterFn, QuarterYear+, 0
processRelationSort(): t,s,i: QuarterFn, PositiveInteger, 1
processRelationSort(): t,s,i: QuarterFn, Year+, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding QuarterFn : [1Ra, 1Re, 1In]
writeSorts(): t: QuarterYear
writeSorts(): t: QuaternaryFunction
writeSorts(): t: QuaternaryPredicate
writeSorts(): t: QuaternaryRelation
writeSorts(): t: QueenBed
writeSorts(): t: QueenInsect
writeSorts(): t: Question
writeSorts(): t: Questioning
writeSorts(): t: QuintaryPredicate
writeSorts(): t: QuintaryRelation
writeSorts(): t: Rabbit
writeSorts(): t: Racing
writeSorts(): t: Radar
writeSorts(): t: Radian
writeSorts(): t: Radiating
writeSorts(): t: RadiatingElectromagnetic
writeSorts(): t: RadiatingInfrared
writeSorts(): t: RadiatingLight
writeSorts(): t: RadiatingNuclear
writeSorts(): t: RadiatingSound
writeSorts(): t: RadiatingSoundUltrasonic
writeSorts(): t: RadiatingUltraviolet
writeSorts(): t: RadiatingVisibleLight
writeSorts(): t: RadiatingXRay
writeSorts(): t: RadioBroadcasting
writeSorts(): t: RadioEmission
writeSorts(): t: RadioReceiver
writeSorts(): t: Radium
writeSorts(): t: RadiusFn
writeRelationSort(): sig: [LengthMeasure, Circle]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [LengthMeasure, Circle]
processRelationSort(): t,s,i: RadiusFn, LengthMeasure, 0
processRelationSort(): t,s,i: RadiusFn, Circle, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding RadiusFn : []
writeSorts(): t: Radon
writeSorts(): t: RailTransportationSystem
writeSorts(): t: Ramp
writeSorts(): t: RankineDegree
writeSorts(): t: Raping
writeSorts(): t: Rat
writeSorts(): t: RationalNumber
writeSorts(): t: RationalNumberFn
writeRelationSort(): sig: [RationalNumber, Number]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [RationalNumber, Number]
processRelationSort(): t,s,i: RationalNumberFn, RationalNumber, 0
processRelationSort(): t,s,i: RationalNumberFn, Number, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding RationalNumberFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: Rattlesnake
writeSorts(): t: RawAttribute
writeSorts(): t: ReachingAgreement
writeSorts(): t: Reading
writeSorts(): t: RealNumber
writeSorts(): t: RealNumberFn
writeRelationSort(): sig: [RealNumber, Number]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [RealNumber, Number]
processRelationSort(): t,s,i: RealNumberFn, RealNumber, 0
processRelationSort(): t,s,i: RealNumberFn, Number, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding RealNumberFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: RearWindow
writeSorts(): t: Reasoning
writeSorts(): t: ReceiverDevice
writeSorts(): t: ReciprocalFn
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
processRelationSort(): sig: [RealNumber, RealNumber]
processRelationSort(): t,s,i: ReciprocalFn, RealNumber, 0
processRelationSort(): t,s,i: ReciprocalFn, RealNumber, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding ReciprocalFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: Reciting
writeSorts(): t: Recliner
writeSorts(): t: Recording
writeSorts(): t: RecoveringFromIllness
writeSorts(): t: RecreationOrExercise
writeSorts(): t: RecreationOrExerciseDevice
writeSorts(): t: RecreationalVehicle
writeSorts(): t: Rectangle
writeSorts(): t: RecurrentTimeIntervalFn
writeRelationSort(): sig: [TimeInterval+, TimeInterval+, TimeInterval+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: Red
writeSorts(): t: RedBloodCell
writeSorts(): t: ReferenceBook
writeSorts(): t: Reflecting
writeSorts(): t: ReflectingLight
writeSorts(): t: ReflexiveProcess
writeSorts(): t: ReflexiveRelation
writeSorts(): t: Refrigerator
writeSorts(): t: Region
writeSorts(): t: Registering
writeSorts(): t: RegistryTon
writeSorts(): t: Regretting
writeSorts(): t: RegulatoryProcess
writeSorts(): t: Reindeer
writeSorts(): t: Relation
writeSorts(): t: RelationExtendedToQuantities
writeSorts(): t: RelationalAttribute
writeSorts(): t: RelativeComplementFn
writeRelationSort(): sig: [SetOrClass, SetOrClass, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: RelativeTimeFn
writeRelationSort(): sig: [TimePosition, TimePosition, TimeZone]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [TimePosition, TimePosition, TimeZone]
processRelationSort(): t,s,i: RelativeTimeFn, TimePosition, 0
processRelationSort(): t,s,i: RelativeTimeFn, TimePosition, 1
processRelationSort(): t,s,i: RelativeTimeFn, TimeZone, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding RelativeTimeFn : []
writeSorts(): t: Releasing
writeSorts(): t: RelievingPain
writeSorts(): t: ReligiousBuilding
writeSorts(): t: ReligiousBurial
writeSorts(): t: ReligiousFigure
writeSorts(): t: ReligiousFuneral
writeSorts(): t: ReligiousOrganization
writeSorts(): t: ReligiousPosition
writeSorts(): t: ReligiousProcess
writeSorts(): t: ReligiousService
writeSorts(): t: RemainderFn
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
processRelationSort(): sig: [Integer, Integer, Integer]
processRelationSort(): t,s,i: RemainderFn, Integer, 0
processRelationSort(): t,s,i: RemainderFn, Integer, 1
processRelationSort(): t,s,i: RemainderFn, Integer, 2
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding RemainderFn : [2Ra, 0In1In, 0Ra1Re2Re, 0Ra2In, 0Re, 0Re2Ra, 2Re, 1Ra2Re, 0In1In2Re, 0Ra1Ra2In, 0In1Ra, 1Ra2Ra, 0In1In2Ra, 0Re2In, 1Re2Re, 0In1Re, 0Re1Ra2Re, 0Re1Re2Ra, 0Re1Ra2Ra, 0Re1Re2Re, 0In1Ra2In, 0In1Re2In, 0In1Re2Re, 0In1Ra2Ra, 0In1Re2Ra, 1In, 0Re2Re, 0Ra2Ra, 0In1Ra2Re, 0Ra2Re, 1Ra, 0In2In, 1Re, 0Ra1In2In, 0Re1Ra, 0Ra1In2Re, 0Re1In, 0Ra1In2Ra, 0In2Ra, 0Re1In2Re, 0Ra1In, 0In2Re, 0Re1In2Ra, 1In2In, 0Re1In2In, 1In2Re, 1In2Ra, 0Re1Ra2In, 0Re1Re2In, 1Re2Ra, 0Ra1Re2In, 0In, 2In, 0Ra1Ra, 1Ra2In, 0In1In2In, 0Ra1Ra2Re, 0Re1Re, 1Re2In, 0Ra1Re, 0Ra1Re2Ra, 0Ra1Ra2Ra, 0Ra]
writeSorts(): t: Remembering
writeSorts(): t: Reminding
writeSorts(): t: Removing
writeSorts(): t: RemovingClothing
writeSorts(): t: Renting
writeSorts(): t: Repairing
writeSorts(): t: Replication
writeSorts(): t: Report
writeSorts(): t: RepresentationalArtWork
writeSorts(): t: ReproductiveBody
writeSorts(): t: Reptile
writeSorts(): t: Request
writeSorts(): t: Requesting
writeSorts(): t: Researcher
writeSorts(): t: Residence
writeSorts(): t: ResidentFn
writeRelationSort(): sig: [GroupOfPeople, GeopoliticalArea]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: ResidentialBuilding
writeSorts(): t: Resigning
writeSorts(): t: Resolution
writeSorts(): t: Restating
writeSorts(): t: Restaurant
writeSorts(): t: RestaurantBuilding
writeSorts(): t: RetailStore
writeSorts(): t: Retina
writeSorts(): t: Retired
writeSorts(): t: Retiring
writeSorts(): t: Returning
writeSorts(): t: Reversing
writeSorts(): t: RevolverGun
writeSorts(): t: Rhenium
writeSorts(): t: Rhinoceros
writeSorts(): t: Rhodium
writeSorts(): t: RiceGrain
writeSorts(): t: Rifle
writeSorts(): t: Right
writeSorts(): t: RightAngle
writeSorts(): t: RightTriangle
writeSorts(): t: Rigid
writeSorts(): t: RingTorus
writeSorts(): t: Road
writeSorts(): t: RoadVehicle
writeSorts(): t: Roadway
writeSorts(): t: Robbing
writeSorts(): t: Rock
writeSorts(): t: Rocket
writeSorts(): t: RocketMissileAttack
writeSorts(): t: Rodent
writeSorts(): t: RollawayBed
writeSorts(): t: Roof
writeSorts(): t: Room
writeSorts(): t: RoomHeater
writeSorts(): t: Rooster
writeSorts(): t: Rotating
writeSorts(): t: Rough
writeSorts(): t: Roughening
writeSorts(): t: RoundFn
writeRelationSort(): sig: [Quantity, Quantity]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [Quantity, Quantity]
processRelationSort(): t,s,i: RoundFn, Quantity, 0
processRelationSort(): t,s,i: RoundFn, Quantity, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding RoundFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: RoundShape
writeSorts(): t: Rowing
writeSorts(): t: Rubber
writeSorts(): t: Rubidium
writeSorts(): t: Rug
writeSorts(): t: Running
writeSorts(): t: RunningTrack
writeSorts(): t: Rural
writeSorts(): t: RussianLanguage
writeSorts(): t: Ruthenium
writeSorts(): t: Saddle
writeSorts(): t: SafeContainer
writeSorts(): t: Sail
writeSorts(): t: Sailor
writeSorts(): t: Sales
writeSorts(): t: SalesPosition
writeSorts(): t: SalineSolution
writeSorts(): t: SaltWaterArea
writeSorts(): t: Samarium
writeSorts(): t: Sandal
writeSorts(): t: Sandwich
writeSorts(): t: Satisfaction
writeSorts(): t: SaturationAttribute
writeSorts(): t: Saturday
writeSorts(): t: Saving
writeSorts(): t: SavingsAndLoan
writeSorts(): t: Saw
writeSorts(): t: Scandium
writeSorts(): t: Scar
writeSorts(): t: Scholarship
writeSorts(): t: School
writeSorts(): t: Science
writeSorts(): t: Score
writeSorts(): t: Screw
writeSorts(): t: Screwdriver
writeSorts(): t: Script
writeSorts(): t: ScubaDiving
writeSorts(): t: Sculpting
writeSorts(): t: Sculpture
writeSorts(): t: Searching
writeSorts(): t: SeasonOfYear
writeSorts(): t: Seat
writeSorts(): t: Seating
writeSorts(): t: Second
writeSorts(): t: SecondDuration
writeSorts(): t: SecondFn
writeRelationSort(): sig: [Second+, PositiveInteger, Minute+]
writeRelationSort(): sigstr:  $int * $i 
processRelationSort(): sig: [Second+, PositiveInteger, Minute+]
processRelationSort(): t,s,i: SecondFn, Second+, 0
processRelationSort(): t,s,i: SecondFn, PositiveInteger, 1
processRelationSort(): t,s,i: SecondFn, Minute+, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding SecondFn : [1Ra, 1Re, 1In]
writeSorts(): t: SecondaryColor
writeSorts(): t: SecondarySchool
writeSorts(): t: SecretaryOfTheInterior
writeSorts(): t: SecretaryOfTheTreasury
writeSorts(): t: SecurityAlarm
writeSorts(): t: SecurityDevice
writeSorts(): t: SecurityUnit
writeSorts(): t: Seed
writeSorts(): t: Seeing
writeSorts(): t: SeizingProperty
writeSorts(): t: Selecting
writeSorts(): t: Selenium
writeSorts(): t: SelfConnectedObject
writeSorts(): t: SelfPoweredDevice
writeSorts(): t: SelfServiceLaundry
writeSorts(): t: Seller
writeSorts(): t: Selling
writeSorts(): t: SensoryDisability
writeSorts(): t: Sentence
writeSorts(): t: Sentencing
writeSorts(): t: SentientAgent
writeSorts(): t: Separating
writeSorts(): t: September
writeSorts(): t: SequenceFunction
writeSorts(): t: Sergeant
writeSorts(): t: Series
writeSorts(): t: SeriesVolumeFn
writeRelationSort(): sig: [Text+, Series+, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [Text+, Series+, PositiveInteger]
processRelationSort(): t,s,i: SeriesVolumeFn, Text+, 0
processRelationSort(): t,s,i: SeriesVolumeFn, Series+, 1
processRelationSort(): t,s,i: SeriesVolumeFn, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding SeriesVolumeFn : [2Ra, 2Re, 2In]
writeSorts(): t: Sermon
writeSorts(): t: Serum
writeSorts(): t: ServiceContract
writeSorts(): t: ServiceOrganization
writeSorts(): t: ServicePosition
writeSorts(): t: ServiceProcess
writeSorts(): t: Serving
writeSorts(): t: Set
writeSorts(): t: SetOrClass
writeSorts(): t: Sewage
writeSorts(): t: Sewing
writeSorts(): t: SexAttribute
writeSorts(): t: SexualReproduction
writeSorts(): t: ShapeAttribute
writeSorts(): t: ShapeChange
writeSorts(): t: Sharing
writeSorts(): t: Sheep
writeSorts(): t: Sheepdog
writeSorts(): t: SheetMusic
writeSorts(): t: Shelf
writeSorts(): t: Sheriff
writeSorts(): t: Shield
writeSorts(): t: Ship
writeSorts(): t: ShipCaptain
writeSorts(): t: ShipMate
writeSorts(): t: ShipOfficer
writeSorts(): t: Shipping
writeSorts(): t: Shirt
writeSorts(): t: Shoe
writeSorts(): t: ShoeSole
writeSorts(): t: Shooting
writeSorts(): t: ShoppingMall
writeSorts(): t: ShoreArea
writeSorts(): t: ShortStory
writeSorts(): t: Shortening
writeSorts(): t: ShotBall
writeSorts(): t: Shoulder
writeSorts(): t: Shower
writeSorts(): t: Shrugging
writeSorts(): t: Sidewalk
writeSorts(): t: Siemens
writeSorts(): t: Sievert
writeSorts(): t: Sign
writeSorts(): t: Signalling
writeSorts(): t: SignumFn
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
processRelationSort(): sig: [Integer, RealNumber]
processRelationSort(): t,s,i: SignumFn, Integer, 0
processRelationSort(): t,s,i: SignumFn, RealNumber, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding SignumFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: Silicon
writeSorts(): t: Silk
writeSorts(): t: Silver
writeSorts(): t: SineFn
writeRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
processRelationSort(): t,s,i: SineFn, RealNumber, 0
processRelationSort(): t,s,i: SineFn, PlaneAngleMeasure, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding SineFn : [0Re, 0In, 0Ra]
writeSorts(): t: Singing
writeSorts(): t: SingleAgentProcess
writeSorts(): t: SingleBed
writeSorts(): t: SingleFamilyResidence
writeSorts(): t: SinglePhasePowerSource
writeSorts(): t: SingleValuedRelation
writeSorts(): t: Sinking
writeSorts(): t: Sitting
writeSorts(): t: SittingArea
writeSorts(): t: SittingDown
writeSorts(): t: SizeAttribute
writeSorts(): t: Skeleton
writeSorts(): t: Sketch
writeSorts(): t: SkilledOccupation
writeSorts(): t: Skin
writeSorts(): t: Skull
writeSorts(): t: Skunk
writeSorts(): t: Skylight
writeSorts(): t: Sleeve
writeSorts(): t: Slicing
writeSorts(): t: Slug
writeSorts(): t: SmartPhone
writeSorts(): t: Smelling
writeSorts(): t: Smiling
writeSorts(): t: Smoke
writeSorts(): t: SmokeDetector
writeSorts(): t: Smoking
writeSorts(): t: SmokingDevice
writeSorts(): t: SmokingPipe
writeSorts(): t: Smooth
writeSorts(): t: Smoothing
writeSorts(): t: Smuggling
writeSorts(): t: Snake
writeSorts(): t: Soaking
writeSorts(): t: Sober
writeSorts(): t: SoberingUp
writeSorts(): t: SocialInteraction
writeSorts(): t: SocialParty
writeSorts(): t: SocialRole
writeSorts(): t: SocialScience
writeSorts(): t: SocialUnit
writeSorts(): t: Sociology
writeSorts(): t: Sock
writeSorts(): t: Sodium
writeSorts(): t: SodiumChloride
writeSorts(): t: Sofa
writeSorts(): t: SofaBed
writeSorts(): t: Soil
writeSorts(): t: Solarium
writeSorts(): t: Soldering
writeSorts(): t: SolderingIron
writeSorts(): t: Soldier
writeSorts(): t: Solely
writeSorts(): t: Solid
writeSorts(): t: SolidAngleMeasure
writeSorts(): t: SolidFood
writeSorts(): t: Solution
writeSorts(): t: Somersaulting
writeSorts(): t: Sonar
writeSorts(): t: Song
writeSorts(): t: SoundAttribute
writeSorts(): t: SoupStock
writeSorts(): t: South
writeSorts(): t: SouthAmerica
writeSorts(): t: SpaceRegion
writeSorts(): t: SpaceTransportation
writeSorts(): t: Spacecraft
writeSorts(): t: SpanishLanguage
writeSorts(): t: SpatialRelation
writeSorts(): t: SpeakerDevice
writeSorts(): t: Speaking
writeSorts(): t: Spear
writeSorts(): t: SpectralColor
writeSorts(): t: SpeedFn
writeRelationSort(): sig: [FunctionQuantity, LengthMeasure, TimeDuration]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [FunctionQuantity, LengthMeasure, TimeDuration]
processRelationSort(): t,s,i: SpeedFn, FunctionQuantity, 0
processRelationSort(): t,s,i: SpeedFn, LengthMeasure, 1
processRelationSort(): t,s,i: SpeedFn, TimeDuration, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding SpeedFn : []
writeSorts(): t: Sphere
writeSorts(): t: SpinalColumn
writeSorts(): t: SpinalCord
writeSorts(): t: Spitting
writeSorts(): t: Spleen
writeSorts(): t: Splitting
writeSorts(): t: SpokenHumanLanguage
writeSorts(): t: Spore
writeSorts(): t: Sport
writeSorts(): t: SportServe
writeSorts(): t: SportsAttribute
writeSorts(): t: SportsFacility
writeSorts(): t: SportsGround
writeSorts(): t: SportsLeague
writeSorts(): t: SportsOut
writeSorts(): t: SportsPlay
writeSorts(): t: SportsPosition
writeSorts(): t: SportsTeam
writeSorts(): t: Spraying
writeSorts(): t: SpringSeason
writeSorts(): t: Sprinkler
writeSorts(): t: Square
writeSorts(): t: SquareMile
writeSorts(): t: SquareRootFn
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
processRelationSort(): sig: [RealNumber, RealNumber]
processRelationSort(): t,s,i: SquareRootFn, RealNumber, 0
processRelationSort(): t,s,i: SquareRootFn, RealNumber, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding SquareRootFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: SquareYard
writeSorts(): t: Squatting
writeSorts(): t: Squirrel
writeSorts(): t: Stairway
writeSorts(): t: Standing
writeSorts(): t: StandingUp
writeSorts(): t: Starch
writeSorts(): t: StartFn
writeRelationSort(): sig: [IntentionalProcess+, Process]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Starving
writeSorts(): t: StateChange
writeSorts(): t: StateGovernment
writeSorts(): t: StateOfMind
writeSorts(): t: StateOrProvince
writeSorts(): t: Statement
writeSorts(): t: StaticWaterArea
writeSorts(): t: Stating
writeSorts(): t: StationaryArtifact
writeSorts(): t: Statistics
writeSorts(): t: Stealing
writeSorts(): t: Steam
writeSorts(): t: SteamBath
writeSorts(): t: SteamEngine
writeSorts(): t: Steel
writeSorts(): t: Steeple
writeSorts(): t: SteeringWheel
writeSorts(): t: Stepping
writeSorts(): t: Steps
writeSorts(): t: Steradian
writeSorts(): t: Steroid
writeSorts(): t: Stimulant
writeSorts(): t: Stirring
writeSorts(): t: Stomach
writeSorts(): t: Stoning
writeSorts(): t: StopFn
writeRelationSort(): sig: [IntentionalProcess+, Process]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: Store
writeSorts(): t: StoreOwner
writeSorts(): t: StormFront
writeSorts(): t: Stove
writeSorts(): t: Strangling
writeSorts(): t: StreamWaterArea
writeSorts(): t: StreetAddressFn
writeRelationSort(): sig: [Agent, StationaryArtifact, Roadway, City, Nation]
writeRelationSort(): sigstr:  $i * $i * $i * $i 
writeSorts(): t: Stressed
writeSorts(): t: Stretching
writeSorts(): t: String
writeSorts(): t: StringConcatenateFn
writeRelationSort(): sig: [SymbolicString, SymbolicString, SymbolicString]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: StringLengthFn
writeRelationSort(): sig: [NonnegativeInteger, SymbolicString]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [NonnegativeInteger, SymbolicString]
processRelationSort(): t,s,i: StringLengthFn, NonnegativeInteger, 0
processRelationSort(): t,s,i: StringLengthFn, SymbolicString, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding StringLengthFn : [0Re, 0In, 0Ra]
writeSorts(): t: Strontium
writeSorts(): t: StructureAttribute
writeSorts(): t: Student
writeSorts(): t: SubatomicParticle
writeSorts(): t: SubjectiveAssessmentAttribute
writeSorts(): t: SubjectiveStrongNegativeAttribute
writeSorts(): t: SubjectiveStrongPositiveAttribute
writeSorts(): t: SubjectiveWeakNegativeAttribute
writeSorts(): t: SubjectiveWeakPositiveAttribute
writeSorts(): t: Submarine
writeSorts(): t: Substance
writeSorts(): t: Substituting
writeSorts(): t: SubstringFn
writeRelationSort(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
writeRelationSort(): sigstr:  $i * $int * $int 
processRelationSort(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
processRelationSort(): t,s,i: SubstringFn, SymbolicString, 0
processRelationSort(): t,s,i: SubstringFn, SymbolicString, 1
processRelationSort(): t,s,i: SubstringFn, NonnegativeInteger, 2
processRelationSort(): t,s,i: SubstringFn, NonnegativeInteger, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In], 3=[, 3Ra, 3Re, 3In]}
processRelationSort(): adding SubstringFn : [2Ra, 3Ra, 2In3Ra, 2Ra3Ra, 2Re, 2Re3Re, 3Re, 2In3Re, 2Ra3Re, 2In3In, 2Ra3In, 2Re3In, 2In, 3In, 2Re3Ra]
writeSorts(): t: SubtractionFn
writeSorts(): t: SubtractionFn__0In1In2InFn
writeSorts(): t: SubtractionFn__0Ra1Ra2RaFn
writeSorts(): t: SubtractionFn__0Re1Re2ReFn
writeSorts(): t: Suburban
writeSorts(): t: SubwaySystem
writeSorts(): t: SuccessorFn
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
processRelationSort(): sig: [Integer, Integer]
processRelationSort(): t,s,i: SuccessorFn, Integer, 0
processRelationSort(): t,s,i: SuccessorFn, Integer, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding SuccessorFn : [1Ra, 0In1In, 0Re, 1Re, 0Re1Ra, 0Re1In, 0In1Ra, 0In1Re, 0Ra1In, 0In, 1In, 0Ra1Ra, 0Re1Re, 0Ra1Re, 0Ra]
writeSorts(): t: Suffocating
writeSorts(): t: Sugar
writeSorts(): t: Suicide
writeSorts(): t: SuicideBombing
writeSorts(): t: Sulphur
writeSorts(): t: Summary
writeSorts(): t: SummerSeason
writeSorts(): t: Sunday
writeSorts(): t: Sunlight
writeSorts(): t: Sunrise
writeSorts(): t: Sunset
writeSorts(): t: Supposing
writeSorts(): t: Supposition
writeSorts(): t: SurfaceChange
writeSorts(): t: Surfactant
writeSorts(): t: Surgeon
writeSorts(): t: Surgery
writeSorts(): t: Surprise
writeSorts(): t: Surrounded
writeSorts(): t: SurveillanceSystem
writeSorts(): t: Suspension
writeSorts(): t: Sweat
writeSorts(): t: Sweeping
writeSorts(): t: Swimming
writeSorts(): t: SwimmingPool
writeSorts(): t: SwitchDevice
writeSorts(): t: Sword
writeSorts(): t: Syllable
writeSorts(): t: SymbolicString
writeSorts(): t: SymmetricPositionalAttribute
writeSorts(): t: SymmetricRelation
writeSorts(): t: SymmetricShape
writeSorts(): t: SyntheticSubstance
writeSorts(): t: SystemeInternationalUnit
writeSorts(): t: TDDPhone
writeSorts(): t: Table
writeSorts(): t: TabletComputer
writeSorts(): t: Tableware
writeSorts(): t: TactilePerception
writeSorts(): t: Tail
writeSorts(): t: Taillight
writeSorts(): t: TakingIll
writeSorts(): t: TakingOff
writeSorts(): t: TangentFn
writeRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
processRelationSort(): t,s,i: TangentFn, RealNumber, 0
processRelationSort(): t,s,i: TangentFn, PlaneAngleMeasure, 1
processRelationSort(): modsig: {0=[, 0Re, 0In, 0Ra], 1=[]}
processRelationSort(): adding TangentFn : [0Re, 0In, 0Ra]
writeSorts(): t: Tantalum
writeSorts(): t: Tape
writeSorts(): t: TasteAttribute
writeSorts(): t: Tasting
writeSorts(): t: Tavern
writeSorts(): t: Taxonomy
writeSorts(): t: Tea
writeSorts(): t: Teacher
writeSorts(): t: TeamSport
writeSorts(): t: TearSubstance
writeSorts(): t: Technetium
writeSorts(): t: Teenager
writeSorts(): t: TelecomNumber
writeSorts(): t: Telegraph
writeSorts(): t: Telephone
writeSorts(): t: TelephoneCommunication
writeSorts(): t: TelephoneHandset
writeSorts(): t: TelephoneLine
writeSorts(): t: Telephoning
writeSorts(): t: TelephonyDevice
writeSorts(): t: TelevisionBroadcasting
writeSorts(): t: TellingALie
writeSorts(): t: Tellurium
writeSorts(): t: TemperatureAttribute
writeSorts(): t: TemperatureMeasure
writeSorts(): t: TemporalCompositionFn
writeRelationSort(): sig: [TimeInterval+, TimeInterval, TimeInterval+]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [TimeInterval+, TimeInterval, TimeInterval+]
processRelationSort(): t,s,i: TemporalCompositionFn, TimeInterval+, 0
processRelationSort(): t,s,i: TemporalCompositionFn, TimeInterval, 1
processRelationSort(): t,s,i: TemporalCompositionFn, TimeInterval+, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding TemporalCompositionFn : []
writeSorts(): t: TemporalRelation
writeSorts(): t: TemporaryResidence
writeSorts(): t: Tendon
writeSorts(): t: Tent
writeSorts(): t: TeraFn
writeRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, UnitOfMeasure]
processRelationSort(): t,s,i: TeraFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: TeraFn, UnitOfMeasure, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding TeraFn : []
writeSorts(): t: Terbium
writeSorts(): t: TerminalNodeFn
writeRelationSort(): sig: [GraphNode, GraphArc]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: TerminatingEmployment
writeSorts(): t: TernaryFunction
writeSorts(): t: TernaryPredicate
writeSorts(): t: TernaryRelation
writeSorts(): t: TerroristOrganization
writeSorts(): t: Tesla
writeSorts(): t: TestForm
writeSorts(): t: Testament
writeSorts(): t: Testifying
writeSorts(): t: Text
writeSorts(): t: TextureAttribute
writeSorts(): t: Thallium
writeSorts(): t: Thanking
writeSorts(): t: TheaterProfession
writeSorts(): t: Theology
writeSorts(): t: TherapeuticProcess
writeSorts(): t: Thermometer
writeSorts(): t: Thirsty
writeSorts(): t: Thorium
writeSorts(): t: Threatening
writeSorts(): t: ThreeDimensionalFigure
writeSorts(): t: ThreePhasePowerSource
writeSorts(): t: Throat
writeSorts(): t: Throwing
writeSorts(): t: Thulium
writeSorts(): t: Thumb
writeSorts(): t: Thunder
writeSorts(): t: Thursday
writeSorts(): t: ThyroidGland
writeSorts(): t: ThyroidHormone
writeSorts(): t: Ticket
writeSorts(): t: TieClothing
writeSorts(): t: TieScore
writeSorts(): t: Tiger
writeSorts(): t: Tilling
writeSorts(): t: TimeDependentQuantity
writeSorts(): t: TimeDuration
writeSorts(): t: TimeInterval
writeSorts(): t: TimeIntervalFn
writeRelationSort(): sig: [TimeInterval, TimePoint, TimePoint]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [TimeInterval, TimePoint, TimePoint]
processRelationSort(): t,s,i: TimeIntervalFn, TimeInterval, 0
processRelationSort(): t,s,i: TimeIntervalFn, TimePoint, 1
processRelationSort(): t,s,i: TimeIntervalFn, TimePoint, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding TimeIntervalFn : []
writeSorts(): t: TimeMeasure
writeSorts(): t: TimePeriodFn
writeRelationSort(): sig: [TimeInterval, TimePoint, TimeDuration]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [TimeInterval, TimePoint, TimeDuration]
processRelationSort(): t,s,i: TimePeriodFn, TimeInterval, 0
processRelationSort(): t,s,i: TimePeriodFn, TimePoint, 1
processRelationSort(): t,s,i: TimePeriodFn, TimeDuration, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding TimePeriodFn : []
writeSorts(): t: TimePoint
writeSorts(): t: TimePosition
writeSorts(): t: TimeZone
writeSorts(): t: Tin
writeSorts(): t: Tissue
writeSorts(): t: Titanium
writeSorts(): t: Toad
writeSorts(): t: Tobacco
writeSorts(): t: Toe
writeSorts(): t: Toilet
writeSorts(): t: Tomb
writeSorts(): t: TonMass
writeSorts(): t: TonalLanguage
writeSorts(): t: Tongue
writeSorts(): t: Tooth
writeSorts(): t: Toothbrush
writeSorts(): t: Torso
writeSorts(): t: TotalOrderingRelation
writeSorts(): t: TotalValuedRelation
writeSorts(): t: Touching
writeSorts(): t: Tourist
writeSorts(): t: TouristSite
writeSorts(): t: Towel
writeSorts(): t: Toy
writeSorts(): t: ToyHouse
writeSorts(): t: Tracing
writeSorts(): t: TradingCard
writeSorts(): t: TraitAttribute
writeSorts(): t: Tranquility
writeSorts(): t: Transaction
writeSorts(): t: Transducer
writeSorts(): t: Transfer
writeSorts(): t: TransferringPosition
writeSorts(): t: TransitiveRelation
writeSorts(): t: Transitway
writeSorts(): t: TransitwayObstacle
writeSorts(): t: Translating
writeSorts(): t: Translocation
writeSorts(): t: Translucent
writeSorts(): t: Transparent
writeSorts(): t: TransportViaRoadVehicle
writeSorts(): t: Transportation
writeSorts(): t: TransportationCompany
writeSorts(): t: TransportationDevice
writeSorts(): t: TrapOrCage
writeSorts(): t: TravelContainer
writeSorts(): t: Tray
writeSorts(): t: Treasurer
writeSorts(): t: Treaty
writeSorts(): t: Tree
writeSorts(): t: TreeBranch
writeSorts(): t: Trembling
writeSorts(): t: Tremor
writeSorts(): t: Trespassing
writeSorts(): t: Triangle
writeSorts(): t: TrichotomizingRelation
writeSorts(): t: Tripod
writeSorts(): t: Trousers
writeSorts(): t: True
writeSorts(): t: TruthValue
writeSorts(): t: Tube
writeSorts(): t: Tuberculosis
writeSorts(): t: Tuesday
writeSorts(): t: Tumor
writeSorts(): t: Tungsten
writeSorts(): t: Tunnel
writeSorts(): t: Turbine
writeSorts(): t: TurningOffDevice
writeSorts(): t: TurningOnDevice
writeSorts(): t: TwoDimensionalAngle
writeSorts(): t: TwoDimensionalFigure
writeSorts(): t: TwoDimensionalObject
writeSorts(): t: Tying
writeSorts(): t: USFEMA
writeSorts(): t: UnaryConstantFunctionQuantity
writeSorts(): t: UnaryFunction
writeSorts(): t: Unbreakable
writeSorts(): t: Unconscious
writeSorts(): t: Uncovering
writeSorts(): t: Undamaged
writeSorts(): t: Unemployed
writeSorts(): t: Ungrasping
writeSorts(): t: Unhappiness
writeSorts(): t: UniformClothing
writeSorts(): t: UnilateralGetting
writeSorts(): t: UnilateralGiving
writeSorts(): t: Unilluminated
writeSorts(): t: Uninhabited
writeSorts(): t: UnionFn
writeRelationSort(): sig: [SetOrClass, SetOrClass, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: UnionOrganization
writeSorts(): t: UniqueList
writeSorts(): t: UnitFn
writeRelationSort(): sig: [UnitOfMeasure, PhysicalQuantity]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [UnitOfMeasure, PhysicalQuantity]
processRelationSort(): t,s,i: UnitFn, UnitOfMeasure, 0
processRelationSort(): t,s,i: UnitFn, PhysicalQuantity, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding UnitFn : []
writeSorts(): t: UnitOfAngularMeasure
writeSorts(): t: UnitOfArea
writeSorts(): t: UnitOfAtmosphericPressure
writeSorts(): t: UnitOfCurrency
writeSorts(): t: UnitOfDuration
writeSorts(): t: UnitOfFrequency
writeSorts(): t: UnitOfInformation
writeSorts(): t: UnitOfLength
writeSorts(): t: UnitOfMass
writeSorts(): t: UnitOfMeasure
writeSorts(): t: UnitOfMeasureMultiplier
writeSorts(): t: UnitOfTemperature
writeSorts(): t: UnitOfVolume
writeSorts(): t: UnitedKingdomGallon
writeSorts(): t: UnitedStates
writeSorts(): t: UnitedStatesCent
writeSorts(): t: UnitedStatesDollar
writeSorts(): t: UnitedStatesGallon
writeSorts(): t: University
writeSorts(): t: Unlikely
writeSorts(): t: Unnildecium
writeSorts(): t: Unnilhexium
writeSorts(): t: Unniloctium
writeSorts(): t: Unnilpentium
writeSorts(): t: Unnilquadium
writeSorts(): t: Unnilseptium
writeSorts(): t: Unpaved
writeSorts(): t: UnskilledOccupation
writeSorts(): t: Untying
writeSorts(): t: Upstairs
writeSorts(): t: Upstream
writeSorts(): t: Upwind
writeSorts(): t: Uranium
writeSorts(): t: Urban
writeSorts(): t: Urea
writeSorts(): t: Urination
writeSorts(): t: Urine
writeSorts(): t: Vacationing
writeSorts(): t: ValidDeductiveArgument
writeSorts(): t: Vanadium
writeSorts(): t: Vandalism
writeSorts(): t: VariableArityRelation
writeSorts(): t: Vehicle
writeSorts(): t: VehicleAttack
writeSorts(): t: VehicleBrake
writeSorts(): t: VehicleController
writeSorts(): t: VehicleDoor
writeSorts(): t: VehicleLight
writeSorts(): t: VehicleThrottle
writeSorts(): t: VehicleTire
writeSorts(): t: VehicleWheel
writeSorts(): t: VehicleWindow
writeSorts(): t: Veil
writeSorts(): t: Vein
writeSorts(): t: VelocityFn
writeRelationSort(): sig: [FunctionQuantity, LengthMeasure, TimeDuration, Region, DirectionalAttribute]
writeRelationSort(): sigstr:  $i * $i * $i * $i 
processRelationSort(): sig: [FunctionQuantity, LengthMeasure, TimeDuration, Region, DirectionalAttribute]
processRelationSort(): t,s,i: VelocityFn, FunctionQuantity, 0
processRelationSort(): t,s,i: VelocityFn, LengthMeasure, 1
processRelationSort(): t,s,i: VelocityFn, TimeDuration, 2
processRelationSort(): t,s,i: VelocityFn, Region, 3
processRelationSort(): t,s,i: VelocityFn, DirectionalAttribute, 4
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[], 4=[]}
processRelationSort(): adding VelocityFn : []
writeSorts(): t: Vending
writeSorts(): t: VendingMachine
writeSorts(): t: Veneer
writeSorts(): t: Verb
writeSorts(): t: VerbPhrase
writeSorts(): t: Vertebrate
writeSorts(): t: Vertical
writeSorts(): t: Veteran
writeSorts(): t: VeterinaryScience
writeSorts(): t: VideoDisplay
writeSorts(): t: VideoGame
writeSorts(): t: VideoGamePlayer
writeSorts(): t: VideoRecording
writeSorts(): t: ViolentContest
writeSorts(): t: VioletColor
writeSorts(): t: ViralDisease
writeSorts(): t: VirtualAddress
writeSorts(): t: VirtualPlaceID
writeSorts(): t: Virus
writeSorts(): t: VisualAcuityAttribute
writeSorts(): t: VisualAttribute
writeSorts(): t: VisualContentBearingObject
writeSorts(): t: VisualContentBearingPhysical
writeSorts(): t: Vitamin
writeSorts(): t: VocalCords
writeSorts(): t: Vocalizing
writeSorts(): t: VocationalSchool
writeSorts(): t: VoiceMail
writeSorts(): t: Volt
writeSorts(): t: VolumeMeasure
writeSorts(): t: Vomit
writeSorts(): t: Vomiting
writeSorts(): t: Voting
writeSorts(): t: VotingPoll
writeSorts(): t: Vowel
writeSorts(): t: VulnerableSpecies
writeSorts(): t: Vulture
writeSorts(): t: Wading
writeSorts(): t: Waist
writeSorts(): t: Waiter
writeSorts(): t: WakingUp
writeSorts(): t: Walking
writeSorts(): t: WalkingCane
writeSorts(): t: Wall
writeSorts(): t: Wallpaper
writeSorts(): t: War
writeSorts(): t: Warehouse
writeSorts(): t: WarmBloodedVertebrate
writeSorts(): t: WarmTemperature
writeSorts(): t: Warranty
writeSorts(): t: WashBasin
writeSorts(): t: WasherForBolt
writeSorts(): t: Washing
writeSorts(): t: WashingDevice
writeSorts(): t: Wastebasket
writeSorts(): t: WatchClock
writeSorts(): t: Water
writeSorts(): t: WaterArea
writeSorts(): t: WaterBed
writeSorts(): t: WaterCloud
writeSorts(): t: WaterHeater
writeSorts(): t: WaterMotion
writeSorts(): t: WaterSprinkler
writeSorts(): t: WaterTransportation
writeSorts(): t: WaterVehicle
writeSorts(): t: WaterWave
writeSorts(): t: WatercolorPaint
writeSorts(): t: WatercolorPicture
writeSorts(): t: Watt
writeSorts(): t: Waving
writeSorts(): t: Wax
writeSorts(): t: WealthFn
writeRelationSort(): sig: [CurrencyMeasure, Agent]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [CurrencyMeasure, Agent]
processRelationSort(): t,s,i: WealthFn, CurrencyMeasure, 0
processRelationSort(): t,s,i: WealthFn, Agent, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding WealthFn : []
writeSorts(): t: Weapon
writeSorts(): t: WeaponOfMassDestruction
writeSorts(): t: WearableItem
writeSorts(): t: WeatherProcess
writeSorts(): t: Weber
writeSorts(): t: Wedding
writeSorts(): t: Wednesday
writeSorts(): t: Week
writeSorts(): t: WeekDuration
writeSorts(): t: WeekFn
writeRelationSort(): sig: [Week+, PositiveInteger, Year+]
writeRelationSort(): sigstr:  $int * $i 
processRelationSort(): sig: [Week+, PositiveInteger, Year+]
processRelationSort(): t,s,i: WeekFn, Week+, 0
processRelationSort(): t,s,i: WeekFn, PositiveInteger, 1
processRelationSort(): t,s,i: WeekFn, Year+, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding WeekFn : [1Ra, 1Re, 1In]
writeSorts(): t: Weekend
writeSorts(): t: Weeping
writeSorts(): t: Welfare
writeSorts(): t: West
writeSorts(): t: Wet
writeSorts(): t: WetBar
writeSorts(): t: Wetting
writeSorts(): t: WheatGrain
writeSorts(): t: Wheel
writeSorts(): t: Wheelchair
writeSorts(): t: WheelchairAccessible
writeSorts(): t: WhenFn
writeRelationSort(): sig: [TimeInterval, Physical]
writeRelationSort(): sigstr:  $i 
processRelationSort(): sig: [TimeInterval, Physical]
processRelationSort(): t,s,i: WhenFn, TimeInterval, 0
processRelationSort(): t,s,i: WhenFn, Physical, 1
processRelationSort(): modsig: {0=[], 1=[]}
processRelationSort(): adding WhenFn : []
writeSorts(): t: WhereFn
writeRelationSort(): sig: [Region, Physical, TimePoint]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [Region, Physical, TimePoint]
processRelationSort(): t,s,i: WhereFn, Region, 0
processRelationSort(): t,s,i: WhereFn, Physical, 1
processRelationSort(): t,s,i: WhereFn, TimePoint, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding WhereFn : []
writeSorts(): t: Whip
writeSorts(): t: WhirlpoolTub
writeSorts(): t: White
writeSorts(): t: WhiteBloodCell
writeSorts(): t: Whiteboard
writeSorts(): t: WholesaleStore
writeSorts(): t: Widowed
writeSorts(): t: WillowTree
writeSorts(): t: Wind
writeSorts(): t: Windmill
writeSorts(): t: Window
writeSorts(): t: WindowCovering
writeSorts(): t: Windshield
writeSorts(): t: Wine
writeSorts(): t: Wing
writeSorts(): t: WingDevice
writeSorts(): t: Winking
writeSorts(): t: WinterSeason
writeSorts(): t: Wire
writeSorts(): t: WireLine
writeSorts(): t: WireSpring
writeSorts(): t: Woman
writeSorts(): t: Won
writeSorts(): t: Wood
writeSorts(): t: WoodArtifact
writeSorts(): t: Wool
writeSorts(): t: Word
writeSorts(): t: WorkerInsect
writeSorts(): t: Working
writeSorts(): t: Workshop
writeSorts(): t: Worm
writeSorts(): t: Wrist
writeSorts(): t: Writing
writeSorts(): t: WritingDevice
writeSorts(): t: WrittenCommunication
writeSorts(): t: Xenon
writeSorts(): t: YardLength
writeSorts(): t: Year
writeSorts(): t: YearDuration
writeSorts(): t: YearFn
writeRelationSort(): sig: [Year+, Integer]
writeRelationSort(): sigstr:  $int 
processRelationSort(): sig: [Year+, Integer]
processRelationSort(): t,s,i: YearFn, Year+, 0
processRelationSort(): t,s,i: YearFn, Integer, 1
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In]}
processRelationSort(): adding YearFn : [1Ra, 1Re, 1In]
writeSorts(): t: Yellow
writeSorts(): t: Ytterbium
writeSorts(): t: Yttrium
writeSorts(): t: Zinc
writeSorts(): t: Zirconium
writeSorts(): t: Zoology
writeSorts(): t: abbreviation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: abstractCounterpart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Abstract, Physical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: abstractPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Abstract, Abstract]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: acquaintance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: actedIn
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, ContentBearingPhysical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: affiliatedOrganization
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Organization]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: age
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, TimeDuration]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object, TimeDuration]
processRelationSort(): t,s,i: age, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: age, Object, 1
processRelationSort(): t,s,i: age, TimeDuration, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding age : []
writeSorts(): t: agent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: agreementClause
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Proposition, DeonticAttribute, Agreement, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i * $i * $i 
writeSorts(): t: agreementEffectiveDate
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agreement, TimePoint]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Agreement, TimePoint]
processRelationSort(): t,s,i: agreementEffectiveDate, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: agreementEffectiveDate, Agreement, 1
processRelationSort(): t,s,i: agreementEffectiveDate, TimePoint, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding agreementEffectiveDate : []
writeSorts(): t: agreementExpirationDate
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agreement, TimePoint]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Agreement, TimePoint]
processRelationSort(): t,s,i: agreementExpirationDate, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: agreementExpirationDate, Agreement, 1
processRelationSort(): t,s,i: agreementExpirationDate, TimePoint, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding agreementExpirationDate : []
writeSorts(): t: agreementPeriod
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agreement, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Agreement, TimeInterval]
processRelationSort(): t,s,i: agreementPeriod, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: agreementPeriod, Agreement, 1
processRelationSort(): t,s,i: agreementPeriod, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding agreementPeriod : []
writeSorts(): t: airTemperature
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, TemperatureMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object, TemperatureMeasure]
processRelationSort(): t,s,i: airTemperature, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: airTemperature, Object, 1
processRelationSort(): t,s,i: airTemperature, TemperatureMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding airTemperature : []
writeSorts(): t: alias
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: allegiance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: almaMater
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, PostSecondarySchool]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: altitude
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: []
writeSorts(): t: ancestor
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: ancestorOrganization
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Organization]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: and
writeSorts(): t: angleOfFigure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TwoDimensionalAngle, GeometricFigure]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: angularMeasure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TwoDimensionalAngle, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TwoDimensionalAngle, PlaneAngleMeasure]
processRelationSort(): t,s,i: angularMeasure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: angularMeasure, TwoDimensionalAngle, 1
processRelationSort(): t,s,i: angularMeasure, PlaneAngleMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding angularMeasure : []
writeSorts(): t: anniversary
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Physical, TimeInterval]
processRelationSort(): t,s,i: anniversary, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: anniversary, Physical, 1
processRelationSort(): t,s,i: anniversary, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding anniversary : []
writeSorts(): t: approves
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: approximateDiameter
writeSorts(): t: approximateValue
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
processRelationSort(): sig: [, RealNumber, RealNumber]
processRelationSort(): t,s,i: approximateValue, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: approximateValue, RealNumber, 1
processRelationSort(): t,s,i: approximateValue, RealNumber, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding approximateValue : [1Ra, 2Ra, 1Re, 2Re, 1Ra2Re, 1Ra2Ra, 1Re2Re, 1Re2Ra, 1In2In, 1In, 2In, 1Ra2In, 1In2Re, 1Re2In, 1In2Ra]
writeSorts(): t: arcWeight
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GraphArc, Quantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, GraphArc, Quantity]
processRelationSort(): t,s,i: arcWeight, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: arcWeight, GraphArc, 1
processRelationSort(): t,s,i: arcWeight, Quantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding arcWeight : [2Ra, 2Re, 2In]
writeSorts(): t: areaOfResponsibility
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Process+, GeographicArea]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: arrested
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PlacingUnderArrest, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: atomicNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ElementalSubstance+, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, ElementalSubstance+, PositiveInteger]
processRelationSort(): t,s,i: atomicNumber, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: atomicNumber, ElementalSubstance+, 1
processRelationSort(): t,s,i: atomicNumber, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding atomicNumber : [2Ra, 2Re, 2In]
writeSorts(): t: attends
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Demonstrating, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: attribute
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: aunt
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Woman, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: authors
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, ContentBearingObject+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: average
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, List, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
processRelationSort(): sig: [, List, RealNumber]
processRelationSort(): t,s,i: average, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: average, List, 1
processRelationSort(): t,s,i: average, RealNumber, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding average : [2Ra, 2Re, 2In]
writeSorts(): t: axis
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: barometricPressure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, UnitOfAtmosphericPressure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object, UnitOfAtmosphericPressure]
processRelationSort(): t,s,i: barometricPressure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: barometricPressure, Object, 1
processRelationSort(): t,s,i: barometricPressure, UnitOfAtmosphericPressure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding barometricPressure : []
writeSorts(): t: before
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimePoint, TimePoint]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimePoint, TimePoint]
processRelationSort(): t,s,i: before, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: before, TimePoint, 1
processRelationSort(): t,s,i: before, TimePoint, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding before : []
writeSorts(): t: beforeOnPath
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object, Object, Transfer]
writeRelationSort(): sigstr:  $i * $i * $i * $i 
writeSorts(): t: beforeOrEqual
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimePoint, TimePoint]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimePoint, TimePoint]
processRelationSort(): t,s,i: beforeOrEqual, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: beforeOrEqual, TimePoint, 1
processRelationSort(): t,s,i: beforeOrEqual, TimePoint, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding beforeOrEqual : []
writeSorts(): t: believes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: benefits
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: between
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object, Object]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: betweenOnPath
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object, Object, Object]
writeRelationSort(): sigstr:  $i * $i * $i * $i 
writeSorts(): t: birthdate
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Day]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Human, Day]
processRelationSort(): t,s,i: birthdate, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: birthdate, Human, 1
processRelationSort(): t,s,i: birthdate, Day, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding birthdate : []
writeSorts(): t: birthday
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Day]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Human, Day]
processRelationSort(): t,s,i: birthday, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: birthday, Human, 1
processRelationSort(): t,s,i: birthday, Day, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding birthday : []
writeSorts(): t: birthplace
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Animal, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: boilingPoint
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PureSubstance+, TemperatureMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, PureSubstance+, TemperatureMeasure]
processRelationSort(): t,s,i: boilingPoint, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: boilingPoint, PureSubstance+, 1
processRelationSort(): t,s,i: boilingPoint, TemperatureMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding boilingPoint : []
writeSorts(): t: bottom
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, SelfConnectedObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: brother
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Man, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: buys
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, CognitiveAgent, Entity]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: canonicalPlaceName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Region, Language, SymbolicString]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: capability
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process+, CaseRole, Object]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: capacity
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, ConstantQuantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, SelfConnectedObject, ConstantQuantity]
processRelationSort(): t,s,i: capacity, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: capacity, SelfConnectedObject, 1
processRelationSort(): t,s,i: capacity, ConstantQuantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding capacity : []
writeSorts(): t: cargo
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Shipping, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: carries
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: causes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Process]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: causesProposition
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: causesSubclass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process+, Process+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: changesLocation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Translocation, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: citizen
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Nation]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: closedOn
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Function, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: cohabitant
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: color
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, ColorAttribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: comment
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, SymbolicString, SymbolicString]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: commentator
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Process]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: completelyFills
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: component
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CorpuscularObject, CorpuscularObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: conclusion
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Argument, Proposition]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: conditionalProbability
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Formula, RealNumber]
writeRelationSort(): sigstr:  $i * $i * $real 
processRelationSort(): sig: [, Formula, Formula, RealNumber]
processRelationSort(): t,s,i: conditionalProbability, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: conditionalProbability, Formula, 1
processRelationSort(): t,s,i: conditionalProbability, Formula, 2
processRelationSort(): t,s,i: conditionalProbability, RealNumber, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[, 3Ra, 3Re, 3In]}
processRelationSort(): adding conditionalProbability : [3Ra, 3Re, 3In]
writeSorts(): t: confersNorm
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Formula, ObjectiveNorm]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: confersObligation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Entity, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: confersRight
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Entity, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: conforms
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Proposition]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: conjugate
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CompoundSubstance, CompoundSubstance]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: connected
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: connectedEngineeringComponents
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, EngineeringComponent, EngineeringComponent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: connects
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object, Object]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: connectsEngineeringComponents
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, EngineeringConnection, EngineeringComponent, EngineeringComponent]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: considers
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: consistent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Proposition, Proposition]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: constructionPeriod
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, StationaryArtifact, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, StationaryArtifact, TimeInterval]
processRelationSort(): t,s,i: constructionPeriod, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: constructionPeriod, StationaryArtifact, 1
processRelationSort(): t,s,i: constructionPeriod, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding constructionPeriod : []
writeSorts(): t: contains
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: containsInformation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingPhysical, Proposition]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: contestParticipant
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Contest, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: contractor
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, StationaryArtifact, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: contraryAttribute
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Attribute]
writeRelationSort(): sigstr:  $i 
writeSorts(): t: controlled
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, AchievingControl, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: conventionalLongName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: conventionalShortName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: conveyance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Transportation, TransportationDevice]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: cooccur
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Physical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: copy
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: cousin
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: covers
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: coworker
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: creator
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: crosses
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: customer
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: date
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Day]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Physical, Day]
processRelationSort(): t,s,i: date, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: date, Physical, 1
processRelationSort(): t,s,i: date, Day, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding date : []
writeSorts(): t: dateEstablished
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, TimePosition+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: dateUsed
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, TimePoint, Agent]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, Object, TimePoint, Agent]
processRelationSort(): t,s,i: dateUsed, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: dateUsed, Object, 1
processRelationSort(): t,s,i: dateUsed, TimePoint, 2
processRelationSort(): t,s,i: dateUsed, Agent, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[]}
processRelationSort(): adding dateUsed : []
writeSorts(): t: daughter
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: deathdate
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Day]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Human, Day]
processRelationSort(): t,s,i: deathdate, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: deathdate, Human, 1
processRelationSort(): t,s,i: deathdate, Day, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding deathdate : []
writeSorts(): t: deathplace
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Animal, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: deceptiveIdentifier
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingObject, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: decreasesLikelihood
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: defaultMaxValue
writeSorts(): t: defaultMaximumHeight
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, LengthMeasure]
processRelationSort(): t,s,i: defaultMaximumHeight, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMaximumHeight, Object+, 1
processRelationSort(): t,s,i: defaultMaximumHeight, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding defaultMaximumHeight : []
writeSorts(): t: defaultMaximumLength
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, LengthMeasure]
processRelationSort(): t,s,i: defaultMaximumLength, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMaximumLength, Object+, 1
processRelationSort(): t,s,i: defaultMaximumLength, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding defaultMaximumLength : []
writeSorts(): t: defaultMaximumMeasure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Quantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, Quantity]
processRelationSort(): t,s,i: defaultMaximumMeasure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMaximumMeasure, Object+, 1
processRelationSort(): t,s,i: defaultMaximumMeasure, Quantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding defaultMaximumMeasure : [2Ra, 2Re, 2In]
writeSorts(): t: defaultMaximumSphereRadius
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, LengthMeasure]
processRelationSort(): t,s,i: defaultMaximumSphereRadius, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMaximumSphereRadius, Object+, 1
processRelationSort(): t,s,i: defaultMaximumSphereRadius, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding defaultMaximumSphereRadius : []
writeSorts(): t: defaultMaximumWidth
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, LengthMeasure]
processRelationSort(): t,s,i: defaultMaximumWidth, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMaximumWidth, Object+, 1
processRelationSort(): t,s,i: defaultMaximumWidth, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding defaultMaximumWidth : []
writeSorts(): t: defaultMeasure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Quantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, Quantity]
processRelationSort(): t,s,i: defaultMeasure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMeasure, Object+, 1
processRelationSort(): t,s,i: defaultMeasure, Quantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding defaultMeasure : [2Ra, 2Re, 2In]
writeSorts(): t: defaultMinValue
writeSorts(): t: defaultMinimumHeight
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, LengthMeasure]
processRelationSort(): t,s,i: defaultMinimumHeight, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMinimumHeight, Object+, 1
processRelationSort(): t,s,i: defaultMinimumHeight, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding defaultMinimumHeight : []
writeSorts(): t: defaultMinimumLength
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, LengthMeasure]
processRelationSort(): t,s,i: defaultMinimumLength, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMinimumLength, Object+, 1
processRelationSort(): t,s,i: defaultMinimumLength, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding defaultMinimumLength : []
writeSorts(): t: defaultMinimumMeasure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Quantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, Quantity]
processRelationSort(): t,s,i: defaultMinimumMeasure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMinimumMeasure, Object+, 1
processRelationSort(): t,s,i: defaultMinimumMeasure, Quantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding defaultMinimumMeasure : [2Ra, 2Re, 2In]
writeSorts(): t: defaultMinimumSphereRadius
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, LengthMeasure]
processRelationSort(): t,s,i: defaultMinimumSphereRadius, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMinimumSphereRadius, Object+, 1
processRelationSort(): t,s,i: defaultMinimumSphereRadius, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding defaultMinimumSphereRadius : []
writeSorts(): t: defaultMinimumWidth
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object+, LengthMeasure]
processRelationSort(): t,s,i: defaultMinimumWidth, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: defaultMinimumWidth, Object+, 1
processRelationSort(): t,s,i: defaultMinimumWidth, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding defaultMinimumWidth : []
writeSorts(): t: defaultValue
writeSorts(): t: defendant
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, LegalAction, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: deprivesNorm
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Formula, ObjectiveNorm]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: depth
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Physical, Entity]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: describes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: desires
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: destination
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: detainee
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Confining, Animal]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: developmentalForm
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OrganicObject, DevelopmentalAttribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: deviceState
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, DeviceStateAttribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: deviceTelecomNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TelecomNumber, TelephonyDevice]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: diameter
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Circle, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Circle, LengthMeasure]
processRelationSort(): t,s,i: diameter, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: diameter, Circle, 1
processRelationSort(): t,s,i: diameter, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding diameter : []
writeSorts(): t: directed
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, MotionPicture]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: direction
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, PositionalAttribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: disapproves
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: discovers
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: disjoint
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SetOrClass, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: disjointDecomposition
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: disjointRelation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Relation, Relation]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: dislikes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: distance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Physical, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, Physical, Physical, LengthMeasure]
processRelationSort(): t,s,i: distance, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: distance, Physical, 1
processRelationSort(): t,s,i: distance, Physical, 2
processRelationSort(): t,s,i: distance, LengthMeasure, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[]}
processRelationSort(): adding distance : []
writeSorts(): t: distanceOnPath
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ConstantQuantity, Transitway]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, ConstantQuantity, Transitway]
processRelationSort(): t,s,i: distanceOnPath, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: distanceOnPath, ConstantQuantity, 1
processRelationSort(): t,s,i: distanceOnPath, Transitway, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding distanceOnPath : []
writeSorts(): t: distributes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryFunction, BinaryFunction]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: documentation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, HumanLanguage, SymbolicString]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: domain
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Relation, PositiveInteger, SetOrClass]
writeRelationSort(): sigstr:  $i * $int * $i 
processRelationSort(): sig: [, Relation, PositiveInteger, SetOrClass]
processRelationSort(): t,s,i: domain, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: domain, Relation, 1
processRelationSort(): t,s,i: domain, PositiveInteger, 2
processRelationSort(): t,s,i: domain, SetOrClass, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In], 3=[]}
processRelationSort(): adding domain : [2Ra, 2Re, 2In]
writeSorts(): t: domainSubclass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Relation, PositiveInteger, SetOrClass]
writeRelationSort(): sigstr:  $i * $int * $i 
processRelationSort(): sig: [, Relation, PositiveInteger, SetOrClass]
processRelationSort(): t,s,i: domainSubclass, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: domainSubclass, Relation, 1
processRelationSort(): t,s,i: domainSubclass, PositiveInteger, 2
processRelationSort(): t,s,i: domainSubclass, SetOrClass, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In], 3=[]}
processRelationSort(): adding domainSubclass : [2Ra, 2Re, 2In]
writeSorts(): t: domesticPartner
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: doubts
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: duration
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimeInterval, TimeDuration]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimeInterval, TimeDuration]
processRelationSort(): t,s,i: duration, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: duration, TimeInterval, 1
processRelationSort(): t,s,i: duration, TimeDuration, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding duration : []
writeSorts(): t: during
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimeInterval, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimeInterval, TimeInterval]
processRelationSort(): t,s,i: during, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: during, TimeInterval, 1
processRelationSort(): t,s,i: during, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding during : []
writeSorts(): t: earlier
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimeInterval, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimeInterval, TimeInterval]
processRelationSort(): t,s,i: earlier, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: earlier, TimeInterval, 1
processRelationSort(): t,s,i: earlier, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding earlier : []
writeSorts(): t: editor
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Text+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: effectiveRange
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Device, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Device, LengthMeasure]
processRelationSort(): t,s,i: effectiveRange, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: effectiveRange, Device, 1
processRelationSort(): t,s,i: effectiveRange, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding effectiveRange : []
writeSorts(): t: electronNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PureSubstance, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, PureSubstance, PositiveInteger]
processRelationSort(): t,s,i: electronNumber, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: electronNumber, PureSubstance, 1
processRelationSort(): t,s,i: electronNumber, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding electronNumber : [2Ra, 2Re, 2In]
writeSorts(): t: element
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Set]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: emailAddress
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: employs
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: engineeringSubcomponent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, EngineeringComponent, EngineeringComponent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: enjoys
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, IntentionalProcess+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: entails
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: equal
writeSorts(): t: equal__1In2In
writeSorts(): t: equal__1Ra2Ra
writeSorts(): t: equal__1Re2Re
writeSorts(): t: equipmentCount
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Device+, Quantity]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, Object, Device+, Quantity]
processRelationSort(): t,s,i: equipmentCount, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: equipmentCount, Object, 1
processRelationSort(): t,s,i: equipmentCount, Device+, 2
processRelationSort(): t,s,i: equipmentCount, Quantity, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[, 3Ra, 3Re, 3In]}
processRelationSort(): adding equipmentCount : [3Ra, 3Re, 3In]
writeSorts(): t: equipmentType
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Artifact, Device]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: equivalenceRelationOn
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryRelation, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: equivalentContentClass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingPhysical+, ContentBearingPhysical+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: equivalentContentInstance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingPhysical, ContentBearingPhysical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: eventLocated
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: eventPartlyLocated
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: exactlyLocated
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: exhaustiveAttribute
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Attribute+, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: exhaustiveDecomposition
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: exists
writeSorts(): t: expects
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: experiencer
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: experimentalControl
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Experimenting, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: exploits
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: expressedInLanguage
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, LinguisticExpression, Language]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: externalImage
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, SymbolicString]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: faces
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, DirectionalAttribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: familyName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: familyRelation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: father
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: faxNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TelecomNumber, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: fears
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: fills
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Hole]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: financialAsset
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: finishes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimeInterval, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimeInterval, TimeInterval]
processRelationSort(): t,s,i: finishes, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: finishes, TimeInterval, 1
processRelationSort(): t,s,i: finishes, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding finishes : []
writeSorts(): t: firstInstanceCreated
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical+, TimePoint]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Physical+, TimePoint]
processRelationSort(): t,s,i: firstInstanceCreated, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: firstInstanceCreated, Physical+, 1
processRelationSort(): t,s,i: firstInstanceCreated, TimePoint, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding firstInstanceCreated : []
writeSorts(): t: fleetSize
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Integer]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, Agent, Integer]
processRelationSort(): t,s,i: fleetSize, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: fleetSize, Agent, 1
processRelationSort(): t,s,i: fleetSize, Integer, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding fleetSize : [2Ra, 2Re, 2In]
writeSorts(): t: floorCode
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, PostalPlace]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: forall
writeSorts(): t: format
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Language, Entity, SymbolicString]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: formerName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: frequency
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process+, TimeDuration]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Process+, TimeDuration]
processRelationSort(): t,s,i: frequency, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: frequency, Process+, 1
processRelationSort(): t,s,i: frequency, TimeDuration, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding frequency : []
writeSorts(): t: friend
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: gainsControl
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, AchievingControl, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: geographicSubregion
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GeographicArea, GeographicArea]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: geometricDistance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GeometricPoint, GeometricPoint, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, GeometricPoint, GeometricPoint, LengthMeasure]
processRelationSort(): t,s,i: geometricDistance, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: geometricDistance, GeometricPoint, 1
processRelationSort(): t,s,i: geometricDistance, GeometricPoint, 2
processRelationSort(): t,s,i: geometricDistance, LengthMeasure, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[]}
processRelationSort(): adding geometricDistance : []
writeSorts(): t: geometricPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GeometricFigure, GeometricFigure]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: geopoliticalSubdivision
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GeopoliticalArea, GeopoliticalArea]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: givenName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: grammaticalRelation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Phrase, Sentence]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: grandfather
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Man]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: grandmother
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Woman]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: grandparent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: graphMeasure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Graph, UnitOfMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Graph, UnitOfMeasure]
processRelationSort(): t,s,i: graphMeasure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: graphMeasure, Graph, 1
processRelationSort(): t,s,i: graphMeasure, UnitOfMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding graphMeasure : []
writeSorts(): t: graphPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GraphElement, Graph]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: grasps
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Animal, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: greaterThan
writeSorts(): t: greaterThanByQuality
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Entity, Attribute]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: greaterThanOrEqualTo
writeSorts(): t: greaterThanOrEqualTo__1In2In
writeSorts(): t: greaterThanOrEqualTo__1Ra2Ra
writeSorts(): t: greaterThanOrEqualTo__1Re2Re
writeSorts(): t: greaterThan__1In2In
writeSorts(): t: greaterThan__1Ra2Ra
writeSorts(): t: greaterThan__1Re2Re
writeSorts(): t: groupMember
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, GroupOfPeople]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: habitatOfOrganism
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism+, GeographicArea]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: half
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hasAward
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hasExpertise
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, FieldOfStudy]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hasOccupation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, IntentionalProcess+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hasPurpose
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hasPurposeForAgent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Formula, Agent]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: hasSkill
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process+, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hasUniform
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Group, UniformClothing+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: havePartTypes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Object+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: headquartersOfOrganization
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, GeopoliticalArea]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: height
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, SelfConnectedObject, LengthMeasure]
processRelationSort(): t,s,i: height, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: height, SelfConnectedObject, 1
processRelationSort(): t,s,i: height, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding height : []
writeSorts(): t: hinders
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Process+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hindersSubclass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process+, Process+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: holdsDuring
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimePosition, Formula]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimePosition, Formula]
processRelationSort(): t,s,i: holdsDuring, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: holdsDuring, TimePosition, 1
processRelationSort(): t,s,i: holdsDuring, Formula, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding holdsDuring : []
writeSorts(): t: holdsObligation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: holdsRight
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hole
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Hole, SelfConnectedObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: home
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, PermanentResidence]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: homeAddress
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PermanentResidence, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: homePhoneNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TelecomNumber, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hopes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: hostileForces
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, MilitaryUnit, MilitaryUnit]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: humanCapacity
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, StationaryArtifact, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, StationaryArtifact, PositiveInteger]
processRelationSort(): t,s,i: humanCapacity, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: humanCapacity, StationaryArtifact, 1
processRelationSort(): t,s,i: humanCapacity, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding humanCapacity : [2Ra, 2Re, 2In]
writeSorts(): t: husband
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Man, Woman]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: identicalListItems
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, List, List]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, List, List]
processRelationSort(): t,s,i: identicalListItems, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: identicalListItems, List, 1
processRelationSort(): t,s,i: identicalListItems, List, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding identicalListItems : []
writeSorts(): t: identityElement
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryFunction, Integer]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, BinaryFunction, Integer]
processRelationSort(): t,s,i: identityElement, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: identityElement, BinaryFunction, 1
processRelationSort(): t,s,i: identityElement, Integer, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding identityElement : [2Ra, 2Re, 2In]
writeSorts(): t: ideologicalAffiliationOfOrganization
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, FormOfGovernment]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: immediateInstance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: immediateSubclass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SetOrClass, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: inList
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, List]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Entity, List]
processRelationSort(): t,s,i: inList, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: inList, Entity, 1
processRelationSort(): list operator: inList
processRelationSort(): t,s,i: inList, List, 2
processRelationSort(): modsig: {0=[], 1=[, 1Ra, 1Re, 1In], 2=[]}
processRelationSort(): adding inList : [1Ra, 1Re, 1In]
writeSorts(): t: inScopeOfInterest
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: inString
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Character, SymbolicString]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: increasesLikelihood
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: independentProbability
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: inhabits
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: initialList
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, List, Entity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, List, Entity]
processRelationSort(): t,s,i: initialList, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: initialList, List, 1
processRelationSort(): t,s,i: initialList, Entity, 2
processRelationSort(): list operator: initialList
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding initialList : [2Ra, 2Re, 2In]
writeSorts(): t: initialPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Object+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: initiallyContainsPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Object+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: instance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: instrument
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: insured
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Proposition, Organization]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: intelligenceQuotient
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
processRelationSort(): sig: [, Human, RationalNumber]
processRelationSort(): t,s,i: intelligenceQuotient, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: intelligenceQuotient, Human, 1
processRelationSort(): t,s,i: intelligenceQuotient, RationalNumber, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding intelligenceQuotient : [2Ra, 2Re, 2In]
writeSorts(): t: interiorPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: inventory
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingObject, Collection]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: inverse
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryRelation, BinaryRelation]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: involvedInEvent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: irreflexiveOn
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryRelation, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: issuedBy
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Certificate, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: knows
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Formula]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: lacks
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: landlord
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, PermanentResidence]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: larger
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: leader
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: legalGuardian
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: legalRelation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: length
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: lessThan
writeSorts(): t: lessThanOrEqualTo
writeSorts(): t: lessThanOrEqualTo__1In2In
writeSorts(): t: lessThanOrEqualTo__1Ra2Ra
writeSorts(): t: lessThanOrEqualTo__1Re2Re
writeSorts(): t: lessThan__1In2In
writeSorts(): t: lessThan__1Ra2Ra
writeSorts(): t: lessThan__1Re2Re
writeSorts(): t: lineMeasure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OneDimensionalFigure, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, OneDimensionalFigure, LengthMeasure]
processRelationSort(): t,s,i: lineMeasure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: lineMeasure, OneDimensionalFigure, 1
processRelationSort(): t,s,i: lineMeasure, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding lineMeasure : []
writeSorts(): t: linearExtent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object, LengthMeasure]
processRelationSort(): t,s,i: linearExtent, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: linearExtent, Object, 1
processRelationSort(): t,s,i: linearExtent, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding linearExtent : []
writeSorts(): t: links
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GraphNode, GraphNode, GraphArc]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: localLongName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: localShortName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: located
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: locatedAtTime
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, TimePosition, Object]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, Object, TimePosition, Object]
processRelationSort(): t,s,i: locatedAtTime, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: locatedAtTime, Object, 1
processRelationSort(): t,s,i: locatedAtTime, TimePosition, 2
processRelationSort(): t,s,i: locatedAtTime, Object, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[]}
processRelationSort(): adding locatedAtTime : []
writeSorts(): t: losesControl
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ChangeOfControl, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: loss
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, FinancialTransaction, CurrencyMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, FinancialTransaction, CurrencyMeasure]
processRelationSort(): t,s,i: loss, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: loss, FinancialTransaction, 1
processRelationSort(): t,s,i: loss, CurrencyMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding loss : []
writeSorts(): t: manner
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: material
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Substance+, CorpuscularObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: maxValue
writeSorts(): t: measure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, PhysicalQuantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object, PhysicalQuantity]
processRelationSort(): t,s,i: measure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: measure, Object, 1
processRelationSort(): t,s,i: measure, PhysicalQuantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding measure : []
writeSorts(): t: measurementReading
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, MeasuringDevice, ConstantQuantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, MeasuringDevice, ConstantQuantity]
processRelationSort(): t,s,i: measurementReading, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: measurementReading, MeasuringDevice, 1
processRelationSort(): t,s,i: measurementReading, ConstantQuantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding measurementReading : []
writeSorts(): t: meatOfAnimal
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OrganicObject+, Animal+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: medicalPatient
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, CareOrganization]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: meetsSpatially
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: meetsTemporally
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimeInterval, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimeInterval, TimeInterval]
processRelationSort(): t,s,i: meetsTemporally, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: meetsTemporally, TimeInterval, 1
processRelationSort(): t,s,i: meetsTemporally, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding meetsTemporally : []
writeSorts(): t: meltingPoint
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PureSubstance+, TemperatureMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, PureSubstance+, TemperatureMeasure]
processRelationSort(): t,s,i: meltingPoint, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: meltingPoint, PureSubstance+, 1
processRelationSort(): t,s,i: meltingPoint, TemperatureMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding meltingPoint : []
writeSorts(): t: member
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Collection]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: memberAtTime
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, Collection, TimePosition]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, SelfConnectedObject, Collection, TimePosition]
processRelationSort(): t,s,i: memberAtTime, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: memberAtTime, SelfConnectedObject, 1
processRelationSort(): t,s,i: memberAtTime, Collection, 2
processRelationSort(): t,s,i: memberAtTime, TimePosition, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[]}
processRelationSort(): adding memberAtTime : []
writeSorts(): t: memberCount
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Collection, Integer]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, Collection, Integer]
processRelationSort(): t,s,i: memberCount, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: memberCount, Collection, 1
processRelationSort(): t,s,i: memberCount, Integer, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding memberCount : [2Ra, 2Re, 2In]
writeSorts(): t: memberType
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Collection, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: memberTypeCount
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Collection, SetOrClass, NonnegativeInteger]
writeRelationSort(): sigstr:  $i * $i * $int 
processRelationSort(): sig: [, Collection, SetOrClass, NonnegativeInteger]
processRelationSort(): t,s,i: memberTypeCount, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: memberTypeCount, Collection, 1
processRelationSort(): t,s,i: memberTypeCount, SetOrClass, 2
processRelationSort(): t,s,i: memberTypeCount, NonnegativeInteger, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[, 3Ra, 3Re, 3In]}
processRelationSort(): adding memberTypeCount : [3Ra, 3Re, 3In]
writeSorts(): t: middleName
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: minValue
writeSorts(): t: mobilePhoneNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TelecomNumber, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: modalAttribute
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Formula, NormativeAttribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: monetaryValue
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, CurrencyMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Physical, CurrencyMeasure]
processRelationSort(): t,s,i: monetaryValue, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: monetaryValue, Physical, 1
processRelationSort(): t,s,i: monetaryValue, CurrencyMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding monetaryValue : []
writeSorts(): t: monetaryWage
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Human, TimeDuration, CurrencyMeasure]
writeRelationSort(): sigstr:  $i * $i * $i * $i 
processRelationSort(): sig: [, Organization, Human, TimeDuration, CurrencyMeasure]
processRelationSort(): t,s,i: monetaryWage, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: monetaryWage, Organization, 1
processRelationSort(): t,s,i: monetaryWage, Human, 2
processRelationSort(): t,s,i: monetaryWage, TimeDuration, 3
processRelationSort(): t,s,i: monetaryWage, CurrencyMeasure, 4
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[], 4=[]}
processRelationSort(): adding monetaryWage : []
writeSorts(): t: most
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: mother
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: moves
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Motion, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: multiplicativeFactor
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
processRelationSort(): sig: [, Integer, Integer]
processRelationSort(): t,s,i: multiplicativeFactor, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: multiplicativeFactor, Integer, 1
processRelationSort(): t,s,i: multiplicativeFactor, Integer, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding multiplicativeFactor : [1Ra, 2Ra, 1Re, 2Re, 1Ra2Re, 1Ra2Ra, 1Re2Re, 1Re2Ra, 1In2In, 1In, 2In, 1Ra2In, 1In2Re, 1Re2In, 1In2Ra]
writeSorts(): t: mutualAcquaintance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: mutualStranger
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: names
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: needs
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Physical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: neighbor
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: nephew
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Man, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: niece
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Woman, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: not
writeSorts(): t: objectTransferred
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Transfer, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: occupation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, FinancialTransaction]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: occupiesPosition
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Position, Organization]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: older
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: onboard
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, Vehicle]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: operator
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: oppositeDirection
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PositionalAttribute, PositionalAttribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: or
writeSorts(): t: orientation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object, PositionalAttribute]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: origin
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: overlapsPartially
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: overlapsSpatially
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: overlapsTemporally
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimeInterval, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimeInterval, TimeInterval]
processRelationSort(): t,s,i: overlapsTemporally, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: overlapsTemporally, TimeInterval, 1
processRelationSort(): t,s,i: overlapsTemporally, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding overlapsTemporally : []
writeSorts(): t: parallel
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OneDimensionalFigure, OneDimensionalFigure]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: parasite
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: parent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: part
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: partTypes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Object+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: partialOrderingOn
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryRelation, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: partiallyFills
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Hole]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: partition
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: partlyLocated
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: partyToAgreement
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Agreement]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: path
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Motion, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: pathLength
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GraphPath, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, GraphPath, PositiveInteger]
processRelationSort(): t,s,i: pathLength, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: pathLength, GraphPath, 1
processRelationSort(): t,s,i: pathLength, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding pathLength : [2Ra, 2Re, 2In]
writeSorts(): t: patient
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: patientMedical
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: penetrates
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: personalPhoneNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TelecomNumber, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: physicalEnd
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: piece
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Substance, Substance]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: plaintiff
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, LegalAction, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: playsRoleInEvent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, CaseRole, Process]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: playsRoleInEventOfType
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, CaseRole, Process+, TimePosition, Object]
writeRelationSort(): sigstr:  $i * $i * $i * $i * $i 
processRelationSort(): sig: [, Object, CaseRole, Process+, TimePosition, Object]
processRelationSort(): t,s,i: playsRoleInEventOfType, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: playsRoleInEventOfType, Object, 1
processRelationSort(): t,s,i: playsRoleInEventOfType, CaseRole, 2
processRelationSort(): t,s,i: playsRoleInEventOfType, Process+, 3
processRelationSort(): t,s,i: playsRoleInEventOfType, TimePosition, 4
processRelationSort(): t,s,i: playsRoleInEventOfType, Object, 5
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[], 4=[], 5=[]}
processRelationSort(): adding playsRoleInEventOfType : []
writeSorts(): t: pointOfFigure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, GeometricPoint, GeometricFigure]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: pointOfIntersection
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OneDimensionalFigure, OneDimensionalFigure, GeometricPoint]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: policyOwner
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Policy]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: possesses
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postAddressText
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalAddressText, PostalPlace]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postCity
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalPlace, City]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postContactSite
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalPlace, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postCountry
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalPlace, GeopoliticalArea]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postDistrict
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalPlace, StateOrProvince]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postNeighborhood
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalPlace, Neighborhood]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postPostOfficeBox
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, PostalPlace]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postPostcodeArea
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalPlace, PostcodeArea]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postStreet
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalPlace, Roadway]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: postStreetNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, PostalPlace]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: potentialOfHydrogen
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Solution, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
processRelationSort(): sig: [, Solution, RealNumber]
processRelationSort(): t,s,i: potentialOfHydrogen, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: potentialOfHydrogen, Solution, 1
processRelationSort(): t,s,i: potentialOfHydrogen, RealNumber, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding potentialOfHydrogen : [2Ra, 2Re, 2In]
writeSorts(): t: powerComponent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CorpuscularObject, CorpuscularObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: precedesInString
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, SymbolicString, SymbolicString]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: precondition
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process+, Process+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: prefers
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Formula, Formula]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: premise
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Argument, Proposition]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: prevents
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Process+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: preventsSubclass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process+, Process+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: price
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, CurrencyMeasure, Agent]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, Physical, CurrencyMeasure, Agent]
processRelationSort(): t,s,i: price, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: price, Physical, 1
processRelationSort(): t,s,i: price, CurrencyMeasure, 2
processRelationSort(): t,s,i: price, Agent, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[]}
processRelationSort(): adding price : []
writeSorts(): t: produced
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Recording]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: productOfAnimal
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OrganicObject+, Animal+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: profit
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, FinancialTransaction, CurrencyMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, FinancialTransaction, CurrencyMeasure]
processRelationSort(): t,s,i: profit, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: profit, FinancialTransaction, 1
processRelationSort(): t,s,i: profit, CurrencyMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding profit : []
writeSorts(): t: properPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: properlyFills
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Hole]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: property
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: protonNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PureSubstance, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, PureSubstance, PositiveInteger]
processRelationSort(): t,s,i: protonNumber, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: protonNumber, PureSubstance, 1
processRelationSort(): t,s,i: protonNumber, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding protonNumber : [2Ra, 2Re, 2In]
writeSorts(): t: publishes
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Text+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: quarter
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: radius
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Circle, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Circle, LengthMeasure]
processRelationSort(): t,s,i: radius, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: radius, Circle, 1
processRelationSort(): t,s,i: radius, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding radius : []
writeSorts(): t: range
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Function, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: rangeSubclass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Function, SetOrClass+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: reactant
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ChemicalProcess, Substance]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: reagent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ChemicalProcess, Substance]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: realization
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Proposition]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: record
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingObject, Physical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: refers
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: reflexiveOn
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryRelation, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: registeredItem
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Text, Physical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: relatedEvent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Process]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: relatedExternalConcept
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity, Language]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: relatedInternalConcept
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: relative
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: religiousAffiliationOfOrganization
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, BeliefGroup]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: rents
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, CognitiveAgent, Object, TimeInterval]
writeRelationSort(): sigstr:  $i * $i * $i * $i 
processRelationSort(): sig: [, CognitiveAgent, CognitiveAgent, Object, TimeInterval]
processRelationSort(): t,s,i: rents, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: rents, CognitiveAgent, 1
processRelationSort(): t,s,i: rents, CognitiveAgent, 2
processRelationSort(): t,s,i: rents, Object, 3
processRelationSort(): t,s,i: rents, TimeInterval, 4
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[], 4=[]}
processRelationSort(): adding rents : []
writeSorts(): t: represents
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: representsForAgent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Entity, Entity, Agent]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: representsInLanguage
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, LinguisticExpression, Entity, Language]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: resource
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: resourceExhausted
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: result
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: routeInSystem
writeSorts(): t: secretesSubstance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OrganicObject+, NaturalSubstance+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: sententialObject
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, NounPhrase, Sentence]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: sententialSubject
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, NounPhrase, Sentence]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: serviceProvider
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ServiceProcess, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: serviceRecipient
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ServiceProcess, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: shape
writeSorts(): t: sibling
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: side
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, SelfConnectedObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: sideOfFigure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OneDimensionalFigure, GeometricFigure]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: sister
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Woman, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: siteForContact
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContactSite, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: sliceOfFigure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TwoDimensionalObject, CorpuscularObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: smaller
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: son
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organism, Organism]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: soundFrequency
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, MusicalTone, FunctionQuantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, MusicalTone, FunctionQuantity]
processRelationSort(): t,s,i: soundFrequency, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: soundFrequency, MusicalTone, 1
processRelationSort(): t,s,i: soundFrequency, FunctionQuantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding soundFrequency : []
writeSorts(): t: source
writeSorts(): t: speaksLanguage
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SentientAgent, Language]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: sphereRadius
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Object, LengthMeasure]
processRelationSort(): t,s,i: sphereRadius, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: sphereRadius, Object, 1
processRelationSort(): t,s,i: sphereRadius, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding sphereRadius : []
writeSorts(): t: spouse
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: starts
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimeInterval, TimeInterval]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimeInterval, TimeInterval]
processRelationSort(): t,s,i: starts, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: starts, TimeInterval, 1
processRelationSort(): t,s,i: starts, TimeInterval, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding starts : []
writeSorts(): t: stays
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, TemporaryResidence]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: stepfather
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Man]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: stepmother
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Woman]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: stored
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingObject, DataStorageDevice]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: stranger
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: stringConcatenation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, SymbolicString, SymbolicString]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: stringLength
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, NonnegativeInteger, SymbolicString]
writeRelationSort(): sigstr:  $int * $i 
processRelationSort(): sig: [, NonnegativeInteger, SymbolicString]
processRelationSort(): t,s,i: stringLength, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: stringLength, NonnegativeInteger, 1
processRelationSort(): t,s,i: stringLength, SymbolicString, 2
processRelationSort(): modsig: {0=[], 1=[1Ra, , 1Re, 1In], 2=[]}
processRelationSort(): adding stringLength : [1Ra, 1Re, 1In]
writeSorts(): t: student
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, EducationalOrganization]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subAttribute
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Attribute, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subCollection
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Collection, Collection]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subField
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, FieldOfStudy, FieldOfStudy]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subGraph
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Graph, Graph]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subList
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, List, List]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, List, List]
processRelationSort(): t,s,i: subList, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: subList, List, 1
processRelationSort(): t,s,i: subList, List, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding subList : []
writeSorts(): t: subOrganization
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Organization]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subPlan
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Plan, Plan]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subProcess
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Process]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subProposition
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Proposition, Proposition]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subString
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, SymbolicString]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subSystem
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PhysicalSystem, PhysicalSystem]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subclass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SetOrClass, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subordinateInOrganization
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Human, Human]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: subordinatePosition
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Position, Position]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: subrelation
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Relation, Relation]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subset
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Set, Set]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subsumedExternalConcept
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity, Entity]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: subsumesContentClass
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingPhysical+, ContentBearingPhysical+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subsumesContentInstance
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, ContentBearingPhysical, ContentBearingPhysical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: subsumingExternalConcept
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity, Entity]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: successorAttribute
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Attribute, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: successorAttributeClosure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Attribute, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: suffers
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: superficialPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: []
writeSorts(): t: surface
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, SelfConnectedObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: synonymousExternalConcept
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity, Entity]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: systemPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, PhysicalSystem]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: tangent
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, OneDimensionalFigure, TwoDimensionalObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: targetInAttack
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: teacher
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Human, EducationalOrganization]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: telecomAreaCode
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, TelecomNumber]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: telecomCode2
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, TelecomNumber]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: telecomContactDevice
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TelephonyDevice, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: telecomCoreNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, TelecomNumber]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: telecomCountryCode
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, TelecomNumber]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: telecomExtension
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, TelecomNumber]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: telephoneNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TelecomNumber, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: temporalPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimePosition, TimePosition]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, TimePosition, TimePosition]
processRelationSort(): t,s,i: temporalPart, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: temporalPart, TimePosition, 1
processRelationSort(): t,s,i: temporalPart, TimePosition, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding temporalPart : []
writeSorts(): t: temporallyBetween
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimePoint, TimePoint, TimePoint]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, TimePoint, TimePoint, TimePoint]
processRelationSort(): t,s,i: temporallyBetween, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: temporallyBetween, TimePoint, 1
processRelationSort(): t,s,i: temporallyBetween, TimePoint, 2
processRelationSort(): t,s,i: temporallyBetween, TimePoint, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[]}
processRelationSort(): adding temporallyBetween : []
writeSorts(): t: temporallyBetweenOrEqual
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TimePoint, TimePoint, TimePoint]
writeRelationSort(): sigstr:  $i * $i * $i 
processRelationSort(): sig: [, TimePoint, TimePoint, TimePoint]
processRelationSort(): t,s,i: temporallyBetweenOrEqual, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: temporallyBetweenOrEqual, TimePoint, 1
processRelationSort(): t,s,i: temporallyBetweenOrEqual, TimePoint, 2
processRelationSort(): t,s,i: temporallyBetweenOrEqual, TimePoint, 3
processRelationSort(): modsig: {0=[], 1=[], 2=[], 3=[]}
processRelationSort(): adding temporallyBetweenOrEqual : []
writeSorts(): t: tenant
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Agent, Residence]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: termFormat
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Language, Entity, SymbolicString]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: termporallyOverlaps
writeSorts(): t: third
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: time
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, TimePosition]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Physical, TimePosition]
processRelationSort(): t,s,i: time, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: time, Physical, 1
processRelationSort(): t,s,i: time, TimePosition, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding time : []
writeSorts(): t: titles
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, ContentBearingPhysical+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: top
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, SelfConnectedObject]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: totalOrderingOn
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryRelation, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: transactionAmount
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, FinancialTransaction, CurrencyMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, FinancialTransaction, CurrencyMeasure]
processRelationSort(): t,s,i: transactionAmount, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: transactionAmount, FinancialTransaction, 1
processRelationSort(): t,s,i: transactionAmount, CurrencyMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding transactionAmount : []
writeSorts(): t: transported
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Transportation, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: traverses
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Object]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: trichotomizingOn
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, BinaryRelation, SetOrClass]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: truth
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Sentence, TruthValue]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: typicalAction
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Process+, Agent+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: typicalPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Object+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: typicallyContainsPart
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object+, Object+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: typicallyContainsTemporalPart
writeSorts(): t: uncle
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Man, Human]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: uniqueIdWithRespectTo
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Physical, Physical, SymbolicString]
writeRelationSort(): sigstr:  $i * $i * $i 
writeSorts(): t: uniqueIdentifier
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: unitNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SymbolicString, PostalPlace]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: uses
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: valence
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Relation, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, Relation, PositiveInteger]
processRelationSort(): t,s,i: valence, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: valence, Relation, 1
processRelationSort(): t,s,i: valence, PositiveInteger, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding valence : [2Ra, 2Re, 2In]
writeSorts(): t: version
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Artifact+, Artifact+]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: voltageMeasure
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PowerSource, PhysicalQuantity]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, PowerSource, PhysicalQuantity]
processRelationSort(): t,s,i: voltageMeasure, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: voltageMeasure, PowerSource, 1
processRelationSort(): t,s,i: voltageMeasure, PhysicalQuantity, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding voltageMeasure : []
writeSorts(): t: wants
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, CognitiveAgent, Physical]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: waterDepth
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, WaterArea, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, WaterArea, LengthMeasure]
processRelationSort(): t,s,i: waterDepth, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: waterDepth, WaterArea, 1
processRelationSort(): t,s,i: waterDepth, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding waterDepth : []
writeSorts(): t: wavelength
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Radiating, LengthMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, Radiating, LengthMeasure]
processRelationSort(): t,s,i: wavelength, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: wavelength, Radiating, 1
processRelationSort(): t,s,i: wavelength, LengthMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding wavelength : []
writeSorts(): t: wears
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Animal, WearableItem]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: weight
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, SelfConnectedObject, MassMeasure]
writeRelationSort(): sigstr:  $i * $i 
processRelationSort(): sig: [, SelfConnectedObject, MassMeasure]
processRelationSort(): t,s,i: weight, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: weight, SelfConnectedObject, 1
processRelationSort(): t,s,i: weight, MassMeasure, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[]}
processRelationSort(): adding weight : []
writeSorts(): t: width
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Object, Entity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: wife
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Woman, Man]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: workAddress
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, PostalPlace, CognitiveAgent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: workPhoneNumber
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, TelecomNumber, Agent]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): t: yearOfFounding
Error in KB.isSubclass(): empty c1
writeRelationSort(): sig: [, Organization, Integer]
writeRelationSort(): sigstr:  $i * $int 
processRelationSort(): sig: [, Organization, Integer]
processRelationSort(): t,s,i: yearOfFounding, , 0
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty c1
processRelationSort(): t,s,i: yearOfFounding, Organization, 1
processRelationSort(): t,s,i: yearOfFounding, Integer, 2
processRelationSort(): modsig: {0=[], 1=[], 2=[, 2Ra, 2Re, 2In]}
processRelationSort(): adding yearOfFounding : [2Ra, 2Re, 2In]
writeSorts(): k: defaultMinimumWidth
writeSorts(): k: birthdate
writeSorts(): k: ListOrderFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__2RaFn
extendRelationSig(): t,e: ListOrderFn, 2Ra
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [Entity, List, RationalNumber]
writeRelationSort(): sig: [Entity, List, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0Ra2InFn
extendRelationSig(): t,e: ListOrderFn, 0Ra2In
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, List, Integer]
writeRelationSort(): sig: [RationalNumber, List, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0In2InFn
extendRelationSig(): t,e: ListOrderFn, 0In2In
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [Integer, List, Integer]
writeRelationSort(): sig: [Integer, List, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): newTerm: ListOrderFn__0ReFn
extendRelationSig(): t,e: ListOrderFn, 0Re
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, List, PositiveInteger]
writeRelationSort(): sig: [RealNumber, List, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0Re2RaFn
extendRelationSig(): t,e: ListOrderFn, 0Re2Ra
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, List, RationalNumber]
writeRelationSort(): sig: [RealNumber, List, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__2ReFn
extendRelationSig(): t,e: ListOrderFn, 2Re
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [Entity, List, RealNumber]
writeRelationSort(): sig: [Entity, List, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0In2RaFn
extendRelationSig(): t,e: ListOrderFn, 0In2Ra
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [Integer, List, RationalNumber]
writeRelationSort(): sig: [Integer, List, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0Re2InFn
extendRelationSig(): t,e: ListOrderFn, 0Re2In
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, List, Integer]
writeRelationSort(): sig: [RealNumber, List, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0In2ReFn
extendRelationSig(): t,e: ListOrderFn, 0In2Re
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [Integer, List, RealNumber]
writeRelationSort(): sig: [Integer, List, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
writeSorts(): newTerm: ListOrderFn__0InFn
extendRelationSig(): t,e: ListOrderFn, 0In
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [Integer, List, PositiveInteger]
writeRelationSort(): sig: [Integer, List, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__2InFn
extendRelationSig(): t,e: ListOrderFn, 2In
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [Entity, List, Integer]
writeRelationSort(): sig: [Entity, List, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0Re2ReFn
extendRelationSig(): t,e: ListOrderFn, 0Re2Re
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, List, RealNumber]
writeRelationSort(): sig: [RealNumber, List, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0Ra2RaFn
extendRelationSig(): t,e: ListOrderFn, 0Ra2Ra
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, List, RationalNumber]
writeRelationSort(): sig: [RationalNumber, List, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
writeSorts(): newTerm: ListOrderFn__0RaFn
extendRelationSig(): t,e: ListOrderFn, 0Ra
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, List, PositiveInteger]
writeRelationSort(): sig: [RationalNumber, List, PositiveInteger]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListOrderFn__0Ra2ReFn
extendRelationSig(): t,e: ListOrderFn, 0Ra2Re
extendRelationSig(): sig: [Entity, List, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, List, RealNumber]
writeRelationSort(): sig: [RationalNumber, List, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
writeSorts(): k: constructionPeriod
writeSorts(): k: defaultMinimumLength
writeSorts(): k: during
writeSorts(): k: ReciprocalFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ReciprocalFn__1RaFn
extendRelationSig(): t,e: ReciprocalFn, 1Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: ReciprocalFn__0In1InFn
extendRelationSig(): t,e: ReciprocalFn, 0In1In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: ReciprocalFn__0ReFn
extendRelationSig(): t,e: ReciprocalFn, 0Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ReciprocalFn__1ReFn
extendRelationSig(): t,e: ReciprocalFn, 1Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: ReciprocalFn__0Re1RaFn
extendRelationSig(): t,e: ReciprocalFn, 0Re1Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: ReciprocalFn__0Re1InFn
extendRelationSig(): t,e: ReciprocalFn, 0Re1In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: ReciprocalFn__0In1RaFn
extendRelationSig(): t,e: ReciprocalFn, 0In1Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: ReciprocalFn__0In1ReFn
extendRelationSig(): t,e: ReciprocalFn, 0In1Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: ReciprocalFn__0Ra1InFn
extendRelationSig(): t,e: ReciprocalFn, 0Ra1In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: ReciprocalFn__0InFn
extendRelationSig(): t,e: ReciprocalFn, 0In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ReciprocalFn__1InFn
extendRelationSig(): t,e: ReciprocalFn, 1In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: ReciprocalFn__0Ra1RaFn
extendRelationSig(): t,e: ReciprocalFn, 0Ra1Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: ReciprocalFn__0Re1ReFn
extendRelationSig(): t,e: ReciprocalFn, 0Re1Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: ReciprocalFn__0Ra1ReFn
extendRelationSig(): t,e: ReciprocalFn, 0Ra1Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: ReciprocalFn__0RaFn
extendRelationSig(): t,e: ReciprocalFn, 0Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: defaultMaximumSphereRadius
writeSorts(): k: distanceOnPath
writeSorts(): k: loss
writeSorts(): k: StringLengthFn
writeSorts(): newTerm: StringLengthFn__0ReFn
extendRelationSig(): t,e: StringLengthFn, 0Re
extendRelationSig(): sig: [NonnegativeInteger, SymbolicString]
extendRelationSig(): combined sig: [RealNumber, SymbolicString]
writeRelationSort(): sig: [RealNumber, SymbolicString]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: StringLengthFn__0InFn
extendRelationSig(): t,e: StringLengthFn, 0In
extendRelationSig(): sig: [NonnegativeInteger, SymbolicString]
extendRelationSig(): combined sig: [Integer, SymbolicString]
writeRelationSort(): sig: [Integer, SymbolicString]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: StringLengthFn__0RaFn
extendRelationSig(): t,e: StringLengthFn, 0Ra
extendRelationSig(): sig: [NonnegativeInteger, SymbolicString]
extendRelationSig(): combined sig: [RationalNumber, SymbolicString]
writeRelationSort(): sig: [RationalNumber, SymbolicString]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: equipmentCount
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: equipmentCount__3Ra
extendRelationSig(): t,e: equipmentCount, 3Ra
extendRelationSig(): sig: [, Object, Device+, Quantity]
extendRelationSig(): combined sig: [, Object, Device+, RationalNumber]
writeRelationSort(): sig: [, Object, Device+, RationalNumber]
writeRelationSort(): sigstr:  $i * $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: equipmentCount__3Re
extendRelationSig(): t,e: equipmentCount, 3Re
extendRelationSig(): sig: [, Object, Device+, Quantity]
extendRelationSig(): combined sig: [, Object, Device+, RealNumber]
writeRelationSort(): sig: [, Object, Device+, RealNumber]
writeRelationSort(): sigstr:  $i * $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: equipmentCount__3In
extendRelationSig(): t,e: equipmentCount, 3In
extendRelationSig(): sig: [, Object, Device+, Quantity]
extendRelationSig(): combined sig: [, Object, Device+, Integer]
writeRelationSort(): sig: [, Object, Device+, Integer]
writeRelationSort(): sigstr:  $i * $i * $int 
writeSorts(): k: price
writeSorts(): k: defaultMinimumHeight
writeSorts(): k: NanoFn
writeSorts(): k: arcWeight
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: arcWeight__2Ra
extendRelationSig(): t,e: arcWeight, 2Ra
extendRelationSig(): sig: [, GraphArc, Quantity]
extendRelationSig(): combined sig: [, GraphArc, RationalNumber]
writeRelationSort(): sig: [, GraphArc, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: arcWeight__2Re
extendRelationSig(): t,e: arcWeight, 2Re
extendRelationSig(): sig: [, GraphArc, Quantity]
extendRelationSig(): combined sig: [, GraphArc, RealNumber]
writeRelationSort(): sig: [, GraphArc, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: arcWeight__2In
extendRelationSig(): t,e: arcWeight, 2In
extendRelationSig(): sig: [, GraphArc, Quantity]
extendRelationSig(): combined sig: [, GraphArc, Integer]
writeRelationSort(): sig: [, GraphArc, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: disjointDecomposition
writeSorts(): newTerm: disjointDecomposition__1
extendRelationSig(): t,e: disjointDecomposition, 1
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: disjointDecomposition__2
extendRelationSig(): t,e: disjointDecomposition, 2
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: disjointDecomposition__3
extendRelationSig(): t,e: disjointDecomposition, 3
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: disjointDecomposition__4
extendRelationSig(): t,e: disjointDecomposition, 4
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: disjointDecomposition__5
extendRelationSig(): t,e: disjointDecomposition, 5
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: disjointDecomposition__6
extendRelationSig(): t,e: disjointDecomposition, 6
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): k: linearExtent
writeSorts(): k: RoundFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RoundFn__1RaFn
extendRelationSig(): t,e: RoundFn, 1Ra
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber]
writeRelationSort(): sig: [Quantity, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RoundFn__0In1InFn
extendRelationSig(): t,e: RoundFn, 0In1In
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RoundFn__0ReFn
extendRelationSig(): t,e: RoundFn, 0Re
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity]
writeRelationSort(): sig: [RealNumber, Quantity]
writeRelationSort(): sigstr:  $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RoundFn__1ReFn
extendRelationSig(): t,e: RoundFn, 1Re
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber]
writeRelationSort(): sig: [Quantity, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RoundFn__0Re1RaFn
extendRelationSig(): t,e: RoundFn, 0Re1Ra
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RoundFn__0Re1InFn
extendRelationSig(): t,e: RoundFn, 0Re1In
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RoundFn__0In1RaFn
extendRelationSig(): t,e: RoundFn, 0In1Ra
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RoundFn__0In1ReFn
extendRelationSig(): t,e: RoundFn, 0In1Re
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RoundFn__0Ra1InFn
extendRelationSig(): t,e: RoundFn, 0Ra1In
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RoundFn__0InFn
extendRelationSig(): t,e: RoundFn, 0In
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity]
writeRelationSort(): sig: [Integer, Quantity]
writeRelationSort(): sigstr:  $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RoundFn__1InFn
extendRelationSig(): t,e: RoundFn, 1In
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer]
writeRelationSort(): sig: [Quantity, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RoundFn__0Ra1RaFn
extendRelationSig(): t,e: RoundFn, 0Ra1Ra
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RoundFn__0Re1ReFn
extendRelationSig(): t,e: RoundFn, 0Re1Re
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RoundFn__0Ra1ReFn
extendRelationSig(): t,e: RoundFn, 0Ra1Re
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RoundFn__0RaFn
extendRelationSig(): t,e: RoundFn, 0Ra
extendRelationSig(): sig: [Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity]
writeRelationSort(): sig: [RationalNumber, Quantity]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: EndFn
writeSorts(): k: measurementReading
writeSorts(): k: lessThanOrEqualTo
Error in KBcache.extendInstance(): term already exists: lessThanOrEqualTo__1In2In
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: lessThanOrEqualTo__1In2In
extendRelationSig(): t,e: lessThanOrEqualTo, 1In2In
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: lessThanOrEqualTo__1Ra2Ra
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: lessThanOrEqualTo__1Ra2Ra
extendRelationSig(): t,e: lessThanOrEqualTo, 1Ra2Ra
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
Error in KBcache.extendInstance(): term already exists: lessThanOrEqualTo__1Re2Re
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: lessThanOrEqualTo__1Re2Re
extendRelationSig(): t,e: lessThanOrEqualTo, 1Re2Re
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): k: GreatestCommonDivisorFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: GreatestCommonDivisorFn__1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: GreatestCommonDivisorFn__0In1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_1__0Re1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 1__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_1__0Ra1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 1__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: GreatestCommonDivisorFn__1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: GreatestCommonDivisorFn_2__0Ra1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 2__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0Re1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0Re1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: GreatestCommonDivisorFn_3__0Re1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 3__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0Re1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0Re1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_1__0In1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 1__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_4__0Ra1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 4__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0In1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0In1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: GreatestCommonDivisorFn_2__0Re1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 2__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_2__0In1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 2__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_3__0Ra1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 3__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0In1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0In1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: GreatestCommonDivisorFn__0Ra1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0Ra1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_4__0In1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 4__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_5__0Re1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 5__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_4__0Re1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 4__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_3__0In1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 3__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_5__0Ra1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 5__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: GreatestCommonDivisorFn__1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_6__0In1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 6__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0Ra1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: GreatestCommonDivisorFn__0Re1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: GreatestCommonDivisorFn_5__0In1InFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 5__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0Ra1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0Ra1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: GreatestCommonDivisorFn_6__0Re1ReFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 6__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn__0RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 0Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: GreatestCommonDivisorFn_6__0Ra1RaFn
extendRelationSig(): t,e: GreatestCommonDivisorFn, 6__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): k: height
writeSorts(): k: RelativeTimeFn
writeSorts(): k: LastFn
writeSorts(): newTerm: LastFn__0ReFn
extendRelationSig(): t,e: LastFn, 0Re
extendRelationSig(): sig: [Entity, List]
extendRelationSig(): combined sig: [RealNumber, List]
writeRelationSort(): sig: [RealNumber, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: LastFn__0InFn
extendRelationSig(): t,e: LastFn, 0In
extendRelationSig(): sig: [Entity, List]
extendRelationSig(): combined sig: [Integer, List]
writeRelationSort(): sig: [Integer, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: LastFn__0RaFn
extendRelationSig(): t,e: LastFn, 0Ra
extendRelationSig(): sig: [Entity, List]
extendRelationSig(): combined sig: [RationalNumber, List]
writeRelationSort(): sig: [RationalNumber, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: DenominatorFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: DenominatorFn__1RaFn
extendRelationSig(): t,e: DenominatorFn, 1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: DenominatorFn__0In1InFn
extendRelationSig(): t,e: DenominatorFn, 0In1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: DenominatorFn__0ReFn
extendRelationSig(): t,e: DenominatorFn, 0Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: DenominatorFn__1ReFn
extendRelationSig(): t,e: DenominatorFn, 1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: DenominatorFn__0Re1RaFn
extendRelationSig(): t,e: DenominatorFn, 0Re1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: DenominatorFn__0Re1InFn
extendRelationSig(): t,e: DenominatorFn, 0Re1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: DenominatorFn__0In1RaFn
extendRelationSig(): t,e: DenominatorFn, 0In1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: DenominatorFn__0In1ReFn
extendRelationSig(): t,e: DenominatorFn, 0In1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: DenominatorFn__0Ra1InFn
extendRelationSig(): t,e: DenominatorFn, 0Ra1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: DenominatorFn__0InFn
extendRelationSig(): t,e: DenominatorFn, 0In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: DenominatorFn__1InFn
extendRelationSig(): t,e: DenominatorFn, 1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: DenominatorFn__0Ra1RaFn
extendRelationSig(): t,e: DenominatorFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: DenominatorFn__0Re1ReFn
extendRelationSig(): t,e: DenominatorFn, 0Re1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: DenominatorFn__0Ra1ReFn
extendRelationSig(): t,e: DenominatorFn, 0Ra1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: DenominatorFn__0RaFn
extendRelationSig(): t,e: DenominatorFn, 0Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: RemainderFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__2RaFn
extendRelationSig(): t,e: RemainderFn, 2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): newTerm: RemainderFn__0In1InFn
extendRelationSig(): t,e: RemainderFn, 0In1In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: RemainderFn__0Ra1Re2ReFn
extendRelationSig(): t,e: RemainderFn, 0Ra1Re2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0Ra2InFn
extendRelationSig(): t,e: RemainderFn, 0Ra2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: RemainderFn__0ReFn
extendRelationSig(): t,e: RemainderFn, 0Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0Re2RaFn
extendRelationSig(): t,e: RemainderFn, 0Re2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__2ReFn
extendRelationSig(): t,e: RemainderFn, 2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RealNumber]
writeRelationSort(): sig: [Integer, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1Ra2ReFn
extendRelationSig(): t,e: RemainderFn, 1Ra2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: RemainderFn__0In1In2ReFn
extendRelationSig(): t,e: RemainderFn, 0In1In2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RealNumber]
writeRelationSort(): sig: [Integer, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: RemainderFn__0Ra1Ra2InFn
extendRelationSig(): t,e: RemainderFn, 0Ra1Ra2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: RemainderFn__0In1RaFn
extendRelationSig(): t,e: RemainderFn, 0In1Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1Ra2RaFn
extendRelationSig(): t,e: RemainderFn, 1Ra2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: RemainderFn__0In1In2RaFn
extendRelationSig(): t,e: RemainderFn, 0In1In2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0Re2InFn
extendRelationSig(): t,e: RemainderFn, 0Re2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1Re2ReFn
extendRelationSig(): t,e: RemainderFn, 1Re2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: RemainderFn__0In1ReFn
extendRelationSig(): t,e: RemainderFn, 0In1Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: RemainderFn__0Re1Ra2ReFn
extendRelationSig(): t,e: RemainderFn, 0Re1Ra2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: RemainderFn__0Re1Re2RaFn
extendRelationSig(): t,e: RemainderFn, 0Re1Re2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: RemainderFn__0Re1Ra2RaFn
extendRelationSig(): t,e: RemainderFn, 0Re1Ra2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: RemainderFn__0Re1Re2ReFn
extendRelationSig(): t,e: RemainderFn, 0Re1Re2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: RemainderFn__0In1Ra2InFn
extendRelationSig(): t,e: RemainderFn, 0In1Ra2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: RemainderFn__0In1Re2InFn
extendRelationSig(): t,e: RemainderFn, 0In1Re2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: RemainderFn__0In1Re2ReFn
extendRelationSig(): t,e: RemainderFn, 0In1Re2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: RemainderFn__0In1Ra2RaFn
extendRelationSig(): t,e: RemainderFn, 0In1Ra2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: RemainderFn__0In1Re2RaFn
extendRelationSig(): t,e: RemainderFn, 0In1Re2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1InFn
extendRelationSig(): t,e: RemainderFn, 1In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0Re2ReFn
extendRelationSig(): t,e: RemainderFn, 0Re2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0Ra2RaFn
extendRelationSig(): t,e: RemainderFn, 0Ra2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): newTerm: RemainderFn__0In1Ra2ReFn
extendRelationSig(): t,e: RemainderFn, 0In1Ra2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0Ra2ReFn
extendRelationSig(): t,e: RemainderFn, 0Ra2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1RaFn
extendRelationSig(): t,e: RemainderFn, 1Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0In2InFn
extendRelationSig(): t,e: RemainderFn, 0In2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1ReFn
extendRelationSig(): t,e: RemainderFn, 1Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: RemainderFn__0Ra1In2InFn
extendRelationSig(): t,e: RemainderFn, 0Ra1In2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: RemainderFn__0Re1RaFn
extendRelationSig(): t,e: RemainderFn, 0Re1Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: RemainderFn__0Ra1In2ReFn
extendRelationSig(): t,e: RemainderFn, 0Ra1In2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: RemainderFn__0Re1InFn
extendRelationSig(): t,e: RemainderFn, 0Re1In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: RemainderFn__0Ra1In2RaFn
extendRelationSig(): t,e: RemainderFn, 0Ra1In2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0In2RaFn
extendRelationSig(): t,e: RemainderFn, 0In2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): newTerm: RemainderFn__0Re1In2ReFn
extendRelationSig(): t,e: RemainderFn, 0Re1In2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: RemainderFn__0Ra1InFn
extendRelationSig(): t,e: RemainderFn, 0Ra1In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__0In2ReFn
extendRelationSig(): t,e: RemainderFn, 0In2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RealNumber]
writeRelationSort(): sig: [Integer, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: RemainderFn__0Re1In2RaFn
extendRelationSig(): t,e: RemainderFn, 0Re1In2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1In2InFn
extendRelationSig(): t,e: RemainderFn, 1In2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: RemainderFn__0Re1In2InFn
extendRelationSig(): t,e: RemainderFn, 0Re1In2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1In2ReFn
extendRelationSig(): t,e: RemainderFn, 1In2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RealNumber]
writeRelationSort(): sig: [Integer, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1In2RaFn
extendRelationSig(): t,e: RemainderFn, 1In2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): newTerm: RemainderFn__0Re1Ra2InFn
extendRelationSig(): t,e: RemainderFn, 0Re1Ra2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: RemainderFn__0Re1Re2InFn
extendRelationSig(): t,e: RemainderFn, 0Re1Re2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1Re2RaFn
extendRelationSig(): t,e: RemainderFn, 1Re2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: RemainderFn__0Ra1Re2InFn
extendRelationSig(): t,e: RemainderFn, 0Ra1Re2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: RemainderFn__0InFn
extendRelationSig(): t,e: RemainderFn, 0In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__2InFn
extendRelationSig(): t,e: RemainderFn, 2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: RemainderFn__0Ra1RaFn
extendRelationSig(): t,e: RemainderFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1Ra2InFn
extendRelationSig(): t,e: RemainderFn, 1Ra2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: RemainderFn__0In1In2InFn
extendRelationSig(): t,e: RemainderFn, 0In1In2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: RemainderFn__0Ra1Ra2ReFn
extendRelationSig(): t,e: RemainderFn, 0Ra1Ra2Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: RemainderFn__0Re1ReFn
extendRelationSig(): t,e: RemainderFn, 0Re1Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RemainderFn__1Re2InFn
extendRelationSig(): t,e: RemainderFn, 1Re2In
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: RemainderFn__0Ra1ReFn
extendRelationSig(): t,e: RemainderFn, 0Ra1Re
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: RemainderFn__0Ra1Re2RaFn
extendRelationSig(): t,e: RemainderFn, 0Ra1Re2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: RemainderFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: RemainderFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: RemainderFn__0RaFn
extendRelationSig(): t,e: RemainderFn, 0Ra
extendRelationSig(): sig: [Integer, Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): k: rents
writeSorts(): k: MeasureFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MeasureFn__1RaFn
extendRelationSig(): t,e: MeasureFn, 1Ra
extendRelationSig(): sig: [PhysicalQuantity, RealNumber, UnitOfMeasure]
extendRelationSig(): combined sig: [PhysicalQuantity, RationalNumber, UnitOfMeasure]
writeRelationSort(): sig: [PhysicalQuantity, RationalNumber, UnitOfMeasure]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MeasureFn__1ReFn
extendRelationSig(): t,e: MeasureFn, 1Re
extendRelationSig(): sig: [PhysicalQuantity, RealNumber, UnitOfMeasure]
extendRelationSig(): combined sig: [PhysicalQuantity, RealNumber, UnitOfMeasure]
writeRelationSort(): sig: [PhysicalQuantity, RealNumber, UnitOfMeasure]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MeasureFn__1InFn
extendRelationSig(): t,e: MeasureFn, 1In
extendRelationSig(): sig: [PhysicalQuantity, RealNumber, UnitOfMeasure]
extendRelationSig(): combined sig: [PhysicalQuantity, Integer, UnitOfMeasure]
writeRelationSort(): sig: [PhysicalQuantity, Integer, UnitOfMeasure]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: boilingPoint
writeSorts(): k: defaultMinimumSphereRadius
writeSorts(): k: CeilingFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: CeilingFn__1RaFn
extendRelationSig(): t,e: CeilingFn, 1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: CeilingFn__0In1InFn
extendRelationSig(): t,e: CeilingFn, 0In1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: CeilingFn__0ReFn
extendRelationSig(): t,e: CeilingFn, 0Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: CeilingFn__1ReFn
extendRelationSig(): t,e: CeilingFn, 1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: CeilingFn__0Re1RaFn
extendRelationSig(): t,e: CeilingFn, 0Re1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: CeilingFn__0Re1InFn
extendRelationSig(): t,e: CeilingFn, 0Re1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: CeilingFn__0In1RaFn
extendRelationSig(): t,e: CeilingFn, 0In1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: CeilingFn__0In1ReFn
extendRelationSig(): t,e: CeilingFn, 0In1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: CeilingFn__0Ra1InFn
extendRelationSig(): t,e: CeilingFn, 0Ra1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: CeilingFn__0InFn
extendRelationSig(): t,e: CeilingFn, 0In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: CeilingFn__1InFn
extendRelationSig(): t,e: CeilingFn, 1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: CeilingFn__0Ra1RaFn
extendRelationSig(): t,e: CeilingFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: CeilingFn__0Re1ReFn
extendRelationSig(): t,e: CeilingFn, 0Re1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: CeilingFn__0Ra1ReFn
extendRelationSig(): t,e: CeilingFn, 0Ra1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: CeilingFn__0RaFn
extendRelationSig(): t,e: CeilingFn, 0Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: meetsTemporally
writeSorts(): k: PerFn
writeSorts(): k: lineMeasure
writeSorts(): k: PredecessorFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PredecessorFn__1RaFn
extendRelationSig(): t,e: PredecessorFn, 1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: PredecessorFn__0In1InFn
extendRelationSig(): t,e: PredecessorFn, 0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: PredecessorFn__0ReFn
extendRelationSig(): t,e: PredecessorFn, 0Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PredecessorFn__1ReFn
extendRelationSig(): t,e: PredecessorFn, 1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: PredecessorFn__0Re1RaFn
extendRelationSig(): t,e: PredecessorFn, 0Re1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: PredecessorFn__0Re1InFn
extendRelationSig(): t,e: PredecessorFn, 0Re1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: PredecessorFn__0In1RaFn
extendRelationSig(): t,e: PredecessorFn, 0In1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: PredecessorFn__0In1ReFn
extendRelationSig(): t,e: PredecessorFn, 0In1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: PredecessorFn__0Ra1InFn
extendRelationSig(): t,e: PredecessorFn, 0Ra1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: PredecessorFn__0InFn
extendRelationSig(): t,e: PredecessorFn, 0In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PredecessorFn__1InFn
extendRelationSig(): t,e: PredecessorFn, 1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: PredecessorFn__0Ra1RaFn
extendRelationSig(): t,e: PredecessorFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: PredecessorFn__0Re1ReFn
extendRelationSig(): t,e: PredecessorFn, 0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: PredecessorFn__0Ra1ReFn
extendRelationSig(): t,e: PredecessorFn, 0Ra1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: PredecessorFn__0RaFn
extendRelationSig(): t,e: PredecessorFn, 0Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): k: domain
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: domain__2Ra
extendRelationSig(): t,e: domain, 2Ra
extendRelationSig(): sig: [, Relation, PositiveInteger, SetOrClass]
extendRelationSig(): combined sig: [, Relation, RationalNumber, SetOrClass]
writeRelationSort(): sig: [, Relation, RationalNumber, SetOrClass]
writeRelationSort(): sigstr:  $i * $rat * $i 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: domain__2Re
extendRelationSig(): t,e: domain, 2Re
extendRelationSig(): sig: [, Relation, PositiveInteger, SetOrClass]
extendRelationSig(): combined sig: [, Relation, RealNumber, SetOrClass]
writeRelationSort(): sig: [, Relation, RealNumber, SetOrClass]
writeRelationSort(): sigstr:  $i * $real * $i 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: domain__2In
extendRelationSig(): t,e: domain, 2In
extendRelationSig(): sig: [, Relation, PositiveInteger, SetOrClass]
extendRelationSig(): combined sig: [, Relation, Integer, SetOrClass]
writeRelationSort(): sig: [, Relation, Integer, SetOrClass]
writeRelationSort(): sigstr:  $i * $int * $i 
writeSorts(): k: CosineFn
writeSorts(): newTerm: CosineFn__0ReFn
extendRelationSig(): t,e: CosineFn, 0Re
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: CosineFn__0InFn
extendRelationSig(): t,e: CosineFn, 0In
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [Integer, PlaneAngleMeasure]
writeRelationSort(): sig: [Integer, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: CosineFn__0RaFn
extendRelationSig(): t,e: CosineFn, 0Ra
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [RationalNumber, PlaneAngleMeasure]
writeRelationSort(): sig: [RationalNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: firstInstanceCreated
writeSorts(): k: inList
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: inList__1Ra
extendRelationSig(): t,e: inList, 1Ra
extendRelationSig(): sig: [, Entity, List]
extendRelationSig(): combined sig: [, RationalNumber, List]
writeRelationSort(): sig: [, RationalNumber, List]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: inList__1Re
extendRelationSig(): t,e: inList, 1Re
extendRelationSig(): sig: [, Entity, List]
extendRelationSig(): combined sig: [, RealNumber, List]
writeRelationSort(): sig: [, RealNumber, List]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: inList__1In
extendRelationSig(): t,e: inList, 1In
extendRelationSig(): sig: [, Entity, List]
extendRelationSig(): combined sig: [, Integer, List]
writeRelationSort(): sig: [, Integer, List]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: MagnitudeFn
writeSorts(): newTerm: MagnitudeFn__0ReFn
extendRelationSig(): t,e: MagnitudeFn, 0Re
extendRelationSig(): sig: [RealNumber, PhysicalQuantity]
extendRelationSig(): combined sig: [RealNumber, PhysicalQuantity]
writeRelationSort(): sig: [RealNumber, PhysicalQuantity]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: MagnitudeFn__0InFn
extendRelationSig(): t,e: MagnitudeFn, 0In
extendRelationSig(): sig: [RealNumber, PhysicalQuantity]
extendRelationSig(): combined sig: [Integer, PhysicalQuantity]
writeRelationSort(): sig: [Integer, PhysicalQuantity]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: MagnitudeFn__0RaFn
extendRelationSig(): t,e: MagnitudeFn, 0Ra
extendRelationSig(): sig: [RealNumber, PhysicalQuantity]
extendRelationSig(): combined sig: [RationalNumber, PhysicalQuantity]
writeRelationSort(): sig: [RationalNumber, PhysicalQuantity]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: SubstringFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2RaFn
extendRelationSig(): t,e: SubstringFn, 2Ra
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, RationalNumber, NonnegativeInteger]
writeRelationSort(): sig: [SymbolicString, SymbolicString, RationalNumber, NonnegativeInteger]
writeRelationSort(): sigstr:  $i * $rat * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__3RaFn
extendRelationSig(): t,e: SubstringFn, 3Ra
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, NonnegativeInteger, RationalNumber]
writeRelationSort(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, RationalNumber]
writeRelationSort(): sigstr:  $i * $int * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2In3RaFn
extendRelationSig(): t,e: SubstringFn, 2In3Ra
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, Integer, RationalNumber]
writeRelationSort(): sig: [SymbolicString, SymbolicString, Integer, RationalNumber]
writeRelationSort(): sigstr:  $i * $int * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2Ra3RaFn
extendRelationSig(): t,e: SubstringFn, 2Ra3Ra
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, RationalNumber, RationalNumber]
writeRelationSort(): sig: [SymbolicString, SymbolicString, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2ReFn
extendRelationSig(): t,e: SubstringFn, 2Re
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, RealNumber, NonnegativeInteger]
writeRelationSort(): sig: [SymbolicString, SymbolicString, RealNumber, NonnegativeInteger]
writeRelationSort(): sigstr:  $i * $real * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2Re3ReFn
extendRelationSig(): t,e: SubstringFn, 2Re3Re
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, RealNumber, RealNumber]
writeRelationSort(): sig: [SymbolicString, SymbolicString, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $i * $real * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__3ReFn
extendRelationSig(): t,e: SubstringFn, 3Re
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, NonnegativeInteger, RealNumber]
writeRelationSort(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, RealNumber]
writeRelationSort(): sigstr:  $i * $int * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2In3ReFn
extendRelationSig(): t,e: SubstringFn, 2In3Re
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, Integer, RealNumber]
writeRelationSort(): sig: [SymbolicString, SymbolicString, Integer, RealNumber]
writeRelationSort(): sigstr:  $i * $int * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2Ra3ReFn
extendRelationSig(): t,e: SubstringFn, 2Ra3Re
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, RationalNumber, RealNumber]
writeRelationSort(): sig: [SymbolicString, SymbolicString, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $i * $rat * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2In3InFn
extendRelationSig(): t,e: SubstringFn, 2In3In
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, Integer, Integer]
writeRelationSort(): sig: [SymbolicString, SymbolicString, Integer, Integer]
writeRelationSort(): sigstr:  $i * $int * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2Ra3InFn
extendRelationSig(): t,e: SubstringFn, 2Ra3In
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, RationalNumber, Integer]
writeRelationSort(): sig: [SymbolicString, SymbolicString, RationalNumber, Integer]
writeRelationSort(): sigstr:  $i * $rat * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2Re3InFn
extendRelationSig(): t,e: SubstringFn, 2Re3In
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, RealNumber, Integer]
writeRelationSort(): sig: [SymbolicString, SymbolicString, RealNumber, Integer]
writeRelationSort(): sigstr:  $i * $real * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2InFn
extendRelationSig(): t,e: SubstringFn, 2In
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, Integer, NonnegativeInteger]
writeRelationSort(): sig: [SymbolicString, SymbolicString, Integer, NonnegativeInteger]
writeRelationSort(): sigstr:  $i * $int * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__3InFn
extendRelationSig(): t,e: SubstringFn, 3In
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, NonnegativeInteger, Integer]
writeRelationSort(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, Integer]
writeRelationSort(): sigstr:  $i * $int * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SubstringFn__2Re3RaFn
extendRelationSig(): t,e: SubstringFn, 2Re3Ra
extendRelationSig(): sig: [SymbolicString, SymbolicString, NonnegativeInteger, NonnegativeInteger]
extendRelationSig(): combined sig: [SymbolicString, SymbolicString, RealNumber, RationalNumber]
writeRelationSort(): sig: [SymbolicString, SymbolicString, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $i * $real * $rat 
writeSorts(): k: MultiplicationFn
Error in KBcache.extendInstance(): term already exists: MultiplicationFn__0In1In2InFn
writeSorts(): newTerm: MultiplicationFn__0In1In2InFn
extendRelationSig(): t,e: MultiplicationFn, 0In1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: MultiplicationFn__0Re1Re2ReFn
writeSorts(): newTerm: MultiplicationFn__0Re1Re2ReFn
extendRelationSig(): t,e: MultiplicationFn, 0Re1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KBcache.extendInstance(): term already exists: MultiplicationFn__0Ra1Ra2RaFn
writeSorts(): newTerm: MultiplicationFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: MultiplicationFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): k: average
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: average__2Ra
extendRelationSig(): t,e: average, 2Ra
extendRelationSig(): sig: [, List, RealNumber]
extendRelationSig(): combined sig: [, List, RationalNumber]
writeRelationSort(): sig: [, List, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: average__2Re
extendRelationSig(): t,e: average, 2Re
extendRelationSig(): sig: [, List, RealNumber]
extendRelationSig(): combined sig: [, List, RealNumber]
writeRelationSort(): sig: [, List, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: average__2In
extendRelationSig(): t,e: average, 2In
extendRelationSig(): sig: [, List, RealNumber]
extendRelationSig(): combined sig: [, List, Integer]
writeRelationSort(): sig: [, List, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: locatedAtTime
writeSorts(): k: holdsDuring
writeSorts(): k: MaxFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__2RaFn
extendRelationSig(): t,e: MaxFn, 2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Quantity, RationalNumber]
writeRelationSort(): sig: [Quantity, Quantity, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
writeSorts(): newTerm: MaxFn__0In1InFn
extendRelationSig(): t,e: MaxFn, 0In1In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, Quantity]
writeRelationSort(): sig: [Integer, Integer, Quantity]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): newTerm: MaxFn__0Ra1Re2ReFn
extendRelationSig(): t,e: MaxFn, 0Ra1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0Ra2InFn
extendRelationSig(): t,e: MaxFn, 0Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity, Integer]
writeRelationSort(): sig: [RationalNumber, Quantity, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): newTerm: MaxFn__0ReFn
extendRelationSig(): t,e: MaxFn, 0Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity, Quantity]
writeRelationSort(): sig: [RealNumber, Quantity, Quantity]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0Re2RaFn
extendRelationSig(): t,e: MaxFn, 0Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity, RationalNumber]
writeRelationSort(): sig: [RealNumber, Quantity, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__2ReFn
extendRelationSig(): t,e: MaxFn, 2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Quantity, RealNumber]
writeRelationSort(): sig: [Quantity, Quantity, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1Ra2ReFn
extendRelationSig(): t,e: MaxFn, 1Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber, RealNumber]
writeRelationSort(): sig: [Quantity, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: MaxFn__0In1In2ReFn
extendRelationSig(): t,e: MaxFn, 0In1In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, RealNumber]
writeRelationSort(): sig: [Integer, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: MaxFn__0Ra1Ra2InFn
extendRelationSig(): t,e: MaxFn, 0Ra1Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: MaxFn__0In1RaFn
extendRelationSig(): t,e: MaxFn, 0In1Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber, Quantity]
writeRelationSort(): sig: [Integer, RationalNumber, Quantity]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1Ra2RaFn
extendRelationSig(): t,e: MaxFn, 1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber, RationalNumber]
writeRelationSort(): sig: [Quantity, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: MaxFn__0In1In2RaFn
extendRelationSig(): t,e: MaxFn, 0In1In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0Re2InFn
extendRelationSig(): t,e: MaxFn, 0Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity, Integer]
writeRelationSort(): sig: [RealNumber, Quantity, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1Re2ReFn
extendRelationSig(): t,e: MaxFn, 1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber, RealNumber]
writeRelationSort(): sig: [Quantity, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: MaxFn__0In1ReFn
extendRelationSig(): t,e: MaxFn, 0In1Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber, Quantity]
writeRelationSort(): sig: [Integer, RealNumber, Quantity]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: MaxFn__0Re1Ra2ReFn
extendRelationSig(): t,e: MaxFn, 0Re1Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: MaxFn__0Re1Re2RaFn
extendRelationSig(): t,e: MaxFn, 0Re1Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: MaxFn__0Re1Ra2RaFn
extendRelationSig(): t,e: MaxFn, 0Re1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: MaxFn__0Re1Re2ReFn
extendRelationSig(): t,e: MaxFn, 0Re1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: MaxFn__0In1Ra2InFn
extendRelationSig(): t,e: MaxFn, 0In1Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: MaxFn__0In1Re2InFn
extendRelationSig(): t,e: MaxFn, 0In1Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: MaxFn__0In1Re2ReFn
extendRelationSig(): t,e: MaxFn, 0In1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: MaxFn__0In1Ra2RaFn
extendRelationSig(): t,e: MaxFn, 0In1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: MaxFn__0In1Re2RaFn
extendRelationSig(): t,e: MaxFn, 0In1Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1InFn
extendRelationSig(): t,e: MaxFn, 1In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer, Quantity]
writeRelationSort(): sig: [Quantity, Integer, Quantity]
writeRelationSort(): sigstr:  $int * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0Re2ReFn
extendRelationSig(): t,e: MaxFn, 0Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity, RealNumber]
writeRelationSort(): sig: [RealNumber, Quantity, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0Ra2RaFn
extendRelationSig(): t,e: MaxFn, 0Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Quantity, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
writeSorts(): newTerm: MaxFn__0In1Ra2ReFn
extendRelationSig(): t,e: MaxFn, 0In1Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0Ra2ReFn
extendRelationSig(): t,e: MaxFn, 0Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity, RealNumber]
writeRelationSort(): sig: [RationalNumber, Quantity, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1RaFn
extendRelationSig(): t,e: MaxFn, 1Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber, Quantity]
writeRelationSort(): sig: [Quantity, RationalNumber, Quantity]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0In2InFn
extendRelationSig(): t,e: MaxFn, 0In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity, Integer]
writeRelationSort(): sig: [Integer, Quantity, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1ReFn
extendRelationSig(): t,e: MaxFn, 1Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber, Quantity]
writeRelationSort(): sig: [Quantity, RealNumber, Quantity]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: MaxFn__0Ra1In2InFn
extendRelationSig(): t,e: MaxFn, 0Ra1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: MaxFn__0Re1RaFn
extendRelationSig(): t,e: MaxFn, 0Re1Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Quantity]
writeRelationSort(): sig: [RealNumber, RationalNumber, Quantity]
writeRelationSort(): sigstr:  $rat * $i 
writeSorts(): newTerm: MaxFn__0Ra1In2ReFn
extendRelationSig(): t,e: MaxFn, 0Ra1In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: MaxFn__0Re1InFn
extendRelationSig(): t,e: MaxFn, 0Re1In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer, Quantity]
writeRelationSort(): sig: [RealNumber, Integer, Quantity]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): newTerm: MaxFn__0Ra1In2RaFn
extendRelationSig(): t,e: MaxFn, 0Ra1In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0In2RaFn
extendRelationSig(): t,e: MaxFn, 0In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity, RationalNumber]
writeRelationSort(): sig: [Integer, Quantity, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
writeSorts(): newTerm: MaxFn__0Re1In2ReFn
extendRelationSig(): t,e: MaxFn, 0Re1In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: MaxFn__0Ra1InFn
extendRelationSig(): t,e: MaxFn, 0Ra1In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer, Quantity]
writeRelationSort(): sig: [RationalNumber, Integer, Quantity]
writeRelationSort(): sigstr:  $int * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__0In2ReFn
extendRelationSig(): t,e: MaxFn, 0In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity, RealNumber]
writeRelationSort(): sig: [Integer, Quantity, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
writeSorts(): newTerm: MaxFn__0Re1In2RaFn
extendRelationSig(): t,e: MaxFn, 0Re1In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1In2InFn
extendRelationSig(): t,e: MaxFn, 1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer, Integer]
writeRelationSort(): sig: [Quantity, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: MaxFn__0Re1In2InFn
extendRelationSig(): t,e: MaxFn, 0Re1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1In2ReFn
extendRelationSig(): t,e: MaxFn, 1In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer, RealNumber]
writeRelationSort(): sig: [Quantity, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1In2RaFn
extendRelationSig(): t,e: MaxFn, 1In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer, RationalNumber]
writeRelationSort(): sig: [Quantity, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): newTerm: MaxFn__0Re1Ra2InFn
extendRelationSig(): t,e: MaxFn, 0Re1Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: MaxFn__0Re1Re2InFn
extendRelationSig(): t,e: MaxFn, 0Re1Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1Re2RaFn
extendRelationSig(): t,e: MaxFn, 1Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber, RationalNumber]
writeRelationSort(): sig: [Quantity, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: MaxFn__0Ra1Re2InFn
extendRelationSig(): t,e: MaxFn, 0Ra1Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: MaxFn__0InFn
extendRelationSig(): t,e: MaxFn, 0In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity, Quantity]
writeRelationSort(): sig: [Integer, Quantity, Quantity]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__2InFn
extendRelationSig(): t,e: MaxFn, 2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Quantity, Integer]
writeRelationSort(): sig: [Quantity, Quantity, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): newTerm: MaxFn__0Ra1RaFn
extendRelationSig(): t,e: MaxFn, 0Ra1Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Quantity]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Quantity]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1Ra2InFn
extendRelationSig(): t,e: MaxFn, 1Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber, Integer]
writeRelationSort(): sig: [Quantity, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: MaxFn__0In1In2InFn
extendRelationSig(): t,e: MaxFn, 0In1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: MaxFn__0Ra1Ra2ReFn
extendRelationSig(): t,e: MaxFn, 0Ra1Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: MaxFn__0Re1ReFn
extendRelationSig(): t,e: MaxFn, 0Re1Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Quantity]
writeRelationSort(): sig: [RealNumber, RealNumber, Quantity]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MaxFn__1Re2InFn
extendRelationSig(): t,e: MaxFn, 1Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber, Integer]
writeRelationSort(): sig: [Quantity, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: MaxFn__0Ra1ReFn
extendRelationSig(): t,e: MaxFn, 0Ra1Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Quantity]
writeRelationSort(): sig: [RationalNumber, RealNumber, Quantity]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: MaxFn__0Ra1Re2RaFn
extendRelationSig(): t,e: MaxFn, 0Ra1Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: MaxFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: MaxFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: MaxFn__0RaFn
extendRelationSig(): t,e: MaxFn, 0Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity, Quantity]
writeRelationSort(): sig: [RationalNumber, Quantity, Quantity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): k: ImmediateFutureFn
writeSorts(): k: ExponentiationFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__2RaFn
extendRelationSig(): t,e: ExponentiationFn, 2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: ExponentiationFn__0In1InFn
extendRelationSig(): t,e: ExponentiationFn, 0In1In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: ExponentiationFn__0Ra1Re2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0Ra2InFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: ExponentiationFn__0ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0Re2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__2ReFn
extendRelationSig(): t,e: ExponentiationFn, 2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1Ra2ReFn
extendRelationSig(): t,e: ExponentiationFn, 1Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: ExponentiationFn__0In1In2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0In1In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RealNumber]
writeRelationSort(): sig: [Integer, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: ExponentiationFn__0Ra1Ra2InFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: ExponentiationFn__0In1RaFn
extendRelationSig(): t,e: ExponentiationFn, 0In1Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1Ra2RaFn
extendRelationSig(): t,e: ExponentiationFn, 1Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: ExponentiationFn__0In1In2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0In1In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0Re2InFn
extendRelationSig(): t,e: ExponentiationFn, 0Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1Re2ReFn
extendRelationSig(): t,e: ExponentiationFn, 1Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: ExponentiationFn__0In1ReFn
extendRelationSig(): t,e: ExponentiationFn, 0In1Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: ExponentiationFn__0Re1Ra2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: ExponentiationFn__0Re1Re2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: ExponentiationFn__0Re1Ra2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: ExponentiationFn__0Re1Re2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: ExponentiationFn__0In1Ra2InFn
extendRelationSig(): t,e: ExponentiationFn, 0In1Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: ExponentiationFn__0In1Re2InFn
extendRelationSig(): t,e: ExponentiationFn, 0In1Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: ExponentiationFn__0In1Re2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0In1Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: ExponentiationFn__0In1Ra2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0In1Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: ExponentiationFn__0In1Re2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0In1Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1InFn
extendRelationSig(): t,e: ExponentiationFn, 1In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0Re2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0Ra2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: ExponentiationFn__0In1Ra2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0In1Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0Ra2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1RaFn
extendRelationSig(): t,e: ExponentiationFn, 1Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0In2InFn
extendRelationSig(): t,e: ExponentiationFn, 0In2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1ReFn
extendRelationSig(): t,e: ExponentiationFn, 1Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: ExponentiationFn__0Ra1In2InFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1In2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: ExponentiationFn__0Re1RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: ExponentiationFn__0Ra1In2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: ExponentiationFn__0Re1InFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: ExponentiationFn__0Ra1In2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0In2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: ExponentiationFn__0Re1In2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: ExponentiationFn__0Ra1InFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__0In2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: ExponentiationFn__0Re1In2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1In2InFn
extendRelationSig(): t,e: ExponentiationFn, 1In2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: ExponentiationFn__0Re1In2InFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1In2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1In2ReFn
extendRelationSig(): t,e: ExponentiationFn, 1In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1In2RaFn
extendRelationSig(): t,e: ExponentiationFn, 1In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): newTerm: ExponentiationFn__0Re1Ra2InFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: ExponentiationFn__0Re1Re2InFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1Re2RaFn
extendRelationSig(): t,e: ExponentiationFn, 1Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: ExponentiationFn__0Ra1Re2InFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: ExponentiationFn__0InFn
extendRelationSig(): t,e: ExponentiationFn, 0In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__2InFn
extendRelationSig(): t,e: ExponentiationFn, 2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: ExponentiationFn__0Ra1RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1Ra2InFn
extendRelationSig(): t,e: ExponentiationFn, 1Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: ExponentiationFn__0In1In2InFn
extendRelationSig(): t,e: ExponentiationFn, 0In1In2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: ExponentiationFn__0Ra1Ra2ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: ExponentiationFn__0Re1ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Re1Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ExponentiationFn__1Re2InFn
extendRelationSig(): t,e: ExponentiationFn, 1Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: ExponentiationFn__0Ra1ReFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1Re
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: ExponentiationFn__0Ra1Re2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: ExponentiationFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: ExponentiationFn__0RaFn
extendRelationSig(): t,e: ExponentiationFn, 0Ra
extendRelationSig(): sig: [RealNumber, RealNumber, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): k: IntegerSquareRootFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: IntegerSquareRootFn__1RaFn
extendRelationSig(): t,e: IntegerSquareRootFn, 1Ra
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [NonnegativeInteger, RationalNumber]
writeRelationSort(): sig: [NonnegativeInteger, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: IntegerSquareRootFn__0In1InFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0In1In
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: IntegerSquareRootFn__0ReFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0Re
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: IntegerSquareRootFn__1ReFn
extendRelationSig(): t,e: IntegerSquareRootFn, 1Re
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [NonnegativeInteger, RealNumber]
writeRelationSort(): sig: [NonnegativeInteger, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: IntegerSquareRootFn__0Re1RaFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0Re1Ra
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: IntegerSquareRootFn__0Re1InFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0Re1In
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: IntegerSquareRootFn__0In1RaFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0In1Ra
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: IntegerSquareRootFn__0In1ReFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0In1Re
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: IntegerSquareRootFn__0Ra1InFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0Ra1In
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: IntegerSquareRootFn__0InFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0In
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: IntegerSquareRootFn__1InFn
extendRelationSig(): t,e: IntegerSquareRootFn, 1In
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [NonnegativeInteger, Integer]
writeRelationSort(): sig: [NonnegativeInteger, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: IntegerSquareRootFn__0Ra1RaFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0Ra1Ra
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: IntegerSquareRootFn__0Re1ReFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0Re1Re
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: IntegerSquareRootFn__0Ra1ReFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0Ra1Re
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: IntegerSquareRootFn__0RaFn
extendRelationSig(): t,e: IntegerSquareRootFn, 0Ra
extendRelationSig(): sig: [NonnegativeInteger, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: TemporalCompositionFn
writeSorts(): k: capacity
writeSorts(): k: playsRoleInEventOfType
writeSorts(): k: dateUsed
writeSorts(): k: overlapsTemporally
writeSorts(): k: partition
writeSorts(): newTerm: partition__1
extendRelationSig(): t,e: partition, 1
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: partition__2
extendRelationSig(): t,e: partition, 2
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: partition__3
extendRelationSig(): t,e: partition, 3
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: partition__4
extendRelationSig(): t,e: partition, 4
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: partition__5
extendRelationSig(): t,e: partition, 5
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: partition__6
extendRelationSig(): t,e: partition, 6
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): k: identicalListItems
writeSorts(): k: lessThan
Error in KBcache.extendInstance(): term already exists: lessThan__1In2In
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: lessThan__1In2In
extendRelationSig(): t,e: lessThan, 1In2In
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: lessThan__1Ra2Ra
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: lessThan__1Ra2Ra
extendRelationSig(): t,e: lessThan, 1Ra2Ra
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
Error in KBcache.extendInstance(): term already exists: lessThan__1Re2Re
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: lessThan__1Re2Re
extendRelationSig(): t,e: lessThan, 1Re2Re
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): k: finishes
writeSorts(): k: ImmediatePastFn
writeSorts(): k: atomicNumber
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: atomicNumber__2Ra
extendRelationSig(): t,e: atomicNumber, 2Ra
extendRelationSig(): sig: [, ElementalSubstance+, PositiveInteger]
extendRelationSig(): combined sig: [, ElementalSubstance+, RationalNumber]
writeRelationSort(): sig: [, ElementalSubstance+, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: atomicNumber__2Re
extendRelationSig(): t,e: atomicNumber, 2Re
extendRelationSig(): sig: [, ElementalSubstance+, PositiveInteger]
extendRelationSig(): combined sig: [, ElementalSubstance+, RealNumber]
writeRelationSort(): sig: [, ElementalSubstance+, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: atomicNumber__2In
extendRelationSig(): t,e: atomicNumber, 2In
extendRelationSig(): sig: [, ElementalSubstance+, PositiveInteger]
extendRelationSig(): combined sig: [, ElementalSubstance+, Integer]
writeRelationSort(): sig: [, ElementalSubstance+, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: FloorFn
writeSorts(): newTerm: FloorFn__0In1ReFn
extendRelationSig(): t,e: FloorFn, 0In1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: GigaFn
writeSorts(): k: stringLength
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: stringLength__1Ra
extendRelationSig(): t,e: stringLength, 1Ra
extendRelationSig(): sig: [, NonnegativeInteger, SymbolicString]
extendRelationSig(): combined sig: [, RationalNumber, SymbolicString]
writeRelationSort(): sig: [, RationalNumber, SymbolicString]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: stringLength__1Re
extendRelationSig(): t,e: stringLength, 1Re
extendRelationSig(): sig: [, NonnegativeInteger, SymbolicString]
extendRelationSig(): combined sig: [, RealNumber, SymbolicString]
writeRelationSort(): sig: [, RealNumber, SymbolicString]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: stringLength__1In
extendRelationSig(): t,e: stringLength, 1In
extendRelationSig(): sig: [, NonnegativeInteger, SymbolicString]
extendRelationSig(): combined sig: [, Integer, SymbolicString]
writeRelationSort(): sig: [, Integer, SymbolicString]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: defaultMaximumLength
writeSorts(): k: PathWeightFn
writeSorts(): newTerm: PathWeightFn__0ReFn
extendRelationSig(): t,e: PathWeightFn, 0Re
extendRelationSig(): sig: [Quantity, GraphPath]
extendRelationSig(): combined sig: [RealNumber, GraphPath]
writeRelationSort(): sig: [RealNumber, GraphPath]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: PathWeightFn__0InFn
extendRelationSig(): t,e: PathWeightFn, 0In
extendRelationSig(): sig: [Quantity, GraphPath]
extendRelationSig(): combined sig: [Integer, GraphPath]
writeRelationSort(): sig: [Integer, GraphPath]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: PathWeightFn__0RaFn
extendRelationSig(): t,e: PathWeightFn, 0Ra
extendRelationSig(): sig: [Quantity, GraphPath]
extendRelationSig(): combined sig: [RationalNumber, GraphPath]
writeRelationSort(): sig: [RationalNumber, GraphPath]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: TimePeriodFn
writeSorts(): k: subList
writeSorts(): k: ListConcatenateFn
writeSorts(): k: memberCount
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: memberCount__2Ra
extendRelationSig(): t,e: memberCount, 2Ra
extendRelationSig(): sig: [, Collection, Integer]
extendRelationSig(): combined sig: [, Collection, RationalNumber]
writeRelationSort(): sig: [, Collection, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: memberCount__2Re
extendRelationSig(): t,e: memberCount, 2Re
extendRelationSig(): sig: [, Collection, Integer]
extendRelationSig(): combined sig: [, Collection, RealNumber]
writeRelationSort(): sig: [, Collection, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: memberCount__2In
extendRelationSig(): t,e: memberCount, 2In
extendRelationSig(): sig: [, Collection, Integer]
extendRelationSig(): combined sig: [, Collection, Integer]
writeRelationSort(): sig: [, Collection, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: greaterThanOrEqualTo
Error in KBcache.extendInstance(): term already exists: greaterThanOrEqualTo__1In2In
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: greaterThanOrEqualTo__1In2In
extendRelationSig(): t,e: greaterThanOrEqualTo, 1In2In
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: greaterThanOrEqualTo__1Ra2Ra
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: greaterThanOrEqualTo__1Ra2Ra
extendRelationSig(): t,e: greaterThanOrEqualTo, 1Ra2Ra
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
Error in KBcache.extendInstance(): term already exists: greaterThanOrEqualTo__1Re2Re
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: greaterThanOrEqualTo__1Re2Re
extendRelationSig(): t,e: greaterThanOrEqualTo, 1Re2Re
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): k: FutureFn
writeSorts(): k: PeriodicalIssueFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PeriodicalIssueFn__2RaFn
extendRelationSig(): t,e: PeriodicalIssueFn, 2Ra
extendRelationSig(): sig: [Periodical+, Periodical+, PositiveInteger]
extendRelationSig(): combined sig: [Periodical+, Periodical+, RationalNumber]
writeRelationSort(): sig: [Periodical+, Periodical+, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PeriodicalIssueFn__2ReFn
extendRelationSig(): t,e: PeriodicalIssueFn, 2Re
extendRelationSig(): sig: [Periodical+, Periodical+, PositiveInteger]
extendRelationSig(): combined sig: [Periodical+, Periodical+, RealNumber]
writeRelationSort(): sig: [Periodical+, Periodical+, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PeriodicalIssueFn__2InFn
extendRelationSig(): t,e: PeriodicalIssueFn, 2In
extendRelationSig(): sig: [Periodical+, Periodical+, PositiveInteger]
extendRelationSig(): combined sig: [Periodical+, Periodical+, Integer]
writeRelationSort(): sig: [Periodical+, Periodical+, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: exhaustiveAttribute
writeSorts(): newTerm: exhaustiveAttribute__1
extendRelationSig(): t,e: exhaustiveAttribute, 1
extendRelationSig(): sig: [, Attribute+, Attribute]
extendRelationSig(): combined sig: [, Attribute+, Attribute]
writeRelationSort(): sig: [, Attribute+, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveAttribute__2
extendRelationSig(): t,e: exhaustiveAttribute, 2
extendRelationSig(): sig: [, Attribute+, Attribute]
extendRelationSig(): combined sig: [, Attribute+, Attribute]
writeRelationSort(): sig: [, Attribute+, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveAttribute__3
extendRelationSig(): t,e: exhaustiveAttribute, 3
extendRelationSig(): sig: [, Attribute+, Attribute]
extendRelationSig(): combined sig: [, Attribute+, Attribute]
writeRelationSort(): sig: [, Attribute+, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveAttribute__4
extendRelationSig(): t,e: exhaustiveAttribute, 4
extendRelationSig(): sig: [, Attribute+, Attribute]
extendRelationSig(): combined sig: [, Attribute+, Attribute]
writeRelationSort(): sig: [, Attribute+, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveAttribute__5
extendRelationSig(): t,e: exhaustiveAttribute, 5
extendRelationSig(): sig: [, Attribute+, Attribute]
extendRelationSig(): combined sig: [, Attribute+, Attribute]
writeRelationSort(): sig: [, Attribute+, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveAttribute__6
extendRelationSig(): t,e: exhaustiveAttribute, 6
extendRelationSig(): sig: [, Attribute+, Attribute]
extendRelationSig(): combined sig: [, Attribute+, Attribute]
writeRelationSort(): sig: [, Attribute+, Attribute]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): k: SecondFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SecondFn__1RaFn
extendRelationSig(): t,e: SecondFn, 1Ra
extendRelationSig(): sig: [Second+, PositiveInteger, Minute+]
extendRelationSig(): combined sig: [Second+, RationalNumber, Minute+]
writeRelationSort(): sig: [Second+, RationalNumber, Minute+]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SecondFn__1ReFn
extendRelationSig(): t,e: SecondFn, 1Re
extendRelationSig(): sig: [Second+, PositiveInteger, Minute+]
extendRelationSig(): combined sig: [Second+, RealNumber, Minute+]
writeRelationSort(): sig: [Second+, RealNumber, Minute+]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SecondFn__1InFn
extendRelationSig(): t,e: SecondFn, 1In
extendRelationSig(): sig: [Second+, PositiveInteger, Minute+]
extendRelationSig(): combined sig: [Second+, Integer, Minute+]
writeRelationSort(): sig: [Second+, Integer, Minute+]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: meltingPoint
writeSorts(): k: LogFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__2RaFn
extendRelationSig(): t,e: LogFn, 2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: LogFn__0In1InFn
extendRelationSig(): t,e: LogFn, 0In1In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, Integer, PositiveInteger]
writeRelationSort(): sig: [Integer, Integer, PositiveInteger]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: LogFn__0Ra1Re2ReFn
extendRelationSig(): t,e: LogFn, 0Ra1Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0Ra2InFn
extendRelationSig(): t,e: LogFn, 0Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: LogFn__0ReFn
extendRelationSig(): t,e: LogFn, 0Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, PositiveInteger]
writeRelationSort(): sig: [RealNumber, RealNumber, PositiveInteger]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0Re2RaFn
extendRelationSig(): t,e: LogFn, 0Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__2ReFn
extendRelationSig(): t,e: LogFn, 2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1Ra2ReFn
extendRelationSig(): t,e: LogFn, 1Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: LogFn__0In1In2ReFn
extendRelationSig(): t,e: LogFn, 0In1In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, Integer, RealNumber]
writeRelationSort(): sig: [Integer, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: LogFn__0Ra1Ra2InFn
extendRelationSig(): t,e: LogFn, 0Ra1Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: LogFn__0In1RaFn
extendRelationSig(): t,e: LogFn, 0In1Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RationalNumber, PositiveInteger]
writeRelationSort(): sig: [Integer, RationalNumber, PositiveInteger]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1Ra2RaFn
extendRelationSig(): t,e: LogFn, 1Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: LogFn__0In1In2RaFn
extendRelationSig(): t,e: LogFn, 0In1In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0Re2InFn
extendRelationSig(): t,e: LogFn, 0Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1Re2ReFn
extendRelationSig(): t,e: LogFn, 1Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: LogFn__0In1ReFn
extendRelationSig(): t,e: LogFn, 0In1Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RealNumber, PositiveInteger]
writeRelationSort(): sig: [Integer, RealNumber, PositiveInteger]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: LogFn__0Re1Ra2ReFn
extendRelationSig(): t,e: LogFn, 0Re1Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: LogFn__0Re1Re2RaFn
extendRelationSig(): t,e: LogFn, 0Re1Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: LogFn__0Re1Ra2RaFn
extendRelationSig(): t,e: LogFn, 0Re1Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: LogFn__0Re1Re2ReFn
extendRelationSig(): t,e: LogFn, 0Re1Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: LogFn__0In1Ra2InFn
extendRelationSig(): t,e: LogFn, 0In1Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: LogFn__0In1Re2InFn
extendRelationSig(): t,e: LogFn, 0In1Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: LogFn__0In1Re2ReFn
extendRelationSig(): t,e: LogFn, 0In1Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: LogFn__0In1Ra2RaFn
extendRelationSig(): t,e: LogFn, 0In1Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: LogFn__0In1Re2RaFn
extendRelationSig(): t,e: LogFn, 0In1Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1InFn
extendRelationSig(): t,e: LogFn, 1In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, Integer, PositiveInteger]
writeRelationSort(): sig: [RealNumber, Integer, PositiveInteger]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0Re2ReFn
extendRelationSig(): t,e: LogFn, 0Re2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0Ra2RaFn
extendRelationSig(): t,e: LogFn, 0Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: LogFn__0In1Ra2ReFn
extendRelationSig(): t,e: LogFn, 0In1Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0Ra2ReFn
extendRelationSig(): t,e: LogFn, 0Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1RaFn
extendRelationSig(): t,e: LogFn, 1Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, PositiveInteger]
writeRelationSort(): sig: [RealNumber, RationalNumber, PositiveInteger]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0In2InFn
extendRelationSig(): t,e: LogFn, 0In2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1ReFn
extendRelationSig(): t,e: LogFn, 1Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, PositiveInteger]
writeRelationSort(): sig: [RealNumber, RealNumber, PositiveInteger]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: LogFn__0Ra1In2InFn
extendRelationSig(): t,e: LogFn, 0Ra1In2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: LogFn__0Re1RaFn
extendRelationSig(): t,e: LogFn, 0Re1Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, PositiveInteger]
writeRelationSort(): sig: [RealNumber, RationalNumber, PositiveInteger]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: LogFn__0Ra1In2ReFn
extendRelationSig(): t,e: LogFn, 0Ra1In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: LogFn__0Re1InFn
extendRelationSig(): t,e: LogFn, 0Re1In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, Integer, PositiveInteger]
writeRelationSort(): sig: [RealNumber, Integer, PositiveInteger]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: LogFn__0Ra1In2RaFn
extendRelationSig(): t,e: LogFn, 0Ra1In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0In2RaFn
extendRelationSig(): t,e: LogFn, 0In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: LogFn__0Re1In2ReFn
extendRelationSig(): t,e: LogFn, 0Re1In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: LogFn__0Ra1InFn
extendRelationSig(): t,e: LogFn, 0Ra1In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, Integer, PositiveInteger]
writeRelationSort(): sig: [RationalNumber, Integer, PositiveInteger]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__0In2ReFn
extendRelationSig(): t,e: LogFn, 0In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: LogFn__0Re1In2RaFn
extendRelationSig(): t,e: LogFn, 0Re1In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1In2InFn
extendRelationSig(): t,e: LogFn, 1In2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: LogFn__0Re1In2InFn
extendRelationSig(): t,e: LogFn, 0Re1In2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1In2ReFn
extendRelationSig(): t,e: LogFn, 1In2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1In2RaFn
extendRelationSig(): t,e: LogFn, 1In2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): newTerm: LogFn__0Re1Ra2InFn
extendRelationSig(): t,e: LogFn, 0Re1Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: LogFn__0Re1Re2InFn
extendRelationSig(): t,e: LogFn, 0Re1Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1Re2RaFn
extendRelationSig(): t,e: LogFn, 1Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: LogFn__0Ra1Re2InFn
extendRelationSig(): t,e: LogFn, 0Ra1Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: LogFn__0InFn
extendRelationSig(): t,e: LogFn, 0In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, RealNumber, PositiveInteger]
writeRelationSort(): sig: [Integer, RealNumber, PositiveInteger]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__2InFn
extendRelationSig(): t,e: LogFn, 2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: LogFn__0Ra1RaFn
extendRelationSig(): t,e: LogFn, 0Ra1Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, PositiveInteger]
writeRelationSort(): sig: [RationalNumber, RationalNumber, PositiveInteger]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1Ra2InFn
extendRelationSig(): t,e: LogFn, 1Ra2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: LogFn__0In1In2InFn
extendRelationSig(): t,e: LogFn, 0In1In2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: LogFn__0Ra1Ra2ReFn
extendRelationSig(): t,e: LogFn, 0Ra1Ra2Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: LogFn__0Re1ReFn
extendRelationSig(): t,e: LogFn, 0Re1Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, PositiveInteger]
writeRelationSort(): sig: [RealNumber, RealNumber, PositiveInteger]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LogFn__1Re2InFn
extendRelationSig(): t,e: LogFn, 1Re2In
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: LogFn__0Ra1ReFn
extendRelationSig(): t,e: LogFn, 0Ra1Re
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, PositiveInteger]
writeRelationSort(): sig: [RationalNumber, RealNumber, PositiveInteger]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: LogFn__0Ra1Re2RaFn
extendRelationSig(): t,e: LogFn, 0Ra1Re2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: LogFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: LogFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: LogFn__0RaFn
extendRelationSig(): t,e: LogFn, 0Ra
extendRelationSig(): sig: [RealNumber, RealNumber, PositiveInteger]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, PositiveInteger]
writeRelationSort(): sig: [RationalNumber, RealNumber, PositiveInteger]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): k: monetaryWage
writeSorts(): k: DivisionFn
Error in KBcache.extendInstance(): term already exists: DivisionFn__0In1In2InFn
writeSorts(): newTerm: DivisionFn__0In1In2InFn
extendRelationSig(): t,e: DivisionFn, 0In1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: DivisionFn__0Re1Re2ReFn
writeSorts(): newTerm: DivisionFn__0Re1Re2ReFn
extendRelationSig(): t,e: DivisionFn, 0Re1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KBcache.extendInstance(): term already exists: DivisionFn__0Ra1Ra2RaFn
writeSorts(): newTerm: DivisionFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: DivisionFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): k: effectiveRange
writeSorts(): k: TeraFn
writeSorts(): k: geometricDistance
writeSorts(): k: pathLength
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: pathLength__2Ra
extendRelationSig(): t,e: pathLength, 2Ra
extendRelationSig(): sig: [, GraphPath, PositiveInteger]
extendRelationSig(): combined sig: [, GraphPath, RationalNumber]
writeRelationSort(): sig: [, GraphPath, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: pathLength__2Re
extendRelationSig(): t,e: pathLength, 2Re
extendRelationSig(): sig: [, GraphPath, PositiveInteger]
extendRelationSig(): combined sig: [, GraphPath, RealNumber]
writeRelationSort(): sig: [, GraphPath, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: pathLength__2In
extendRelationSig(): t,e: pathLength, 2In
extendRelationSig(): sig: [, GraphPath, PositiveInteger]
extendRelationSig(): combined sig: [, GraphPath, Integer]
writeRelationSort(): sig: [, GraphPath, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: WealthFn
writeSorts(): k: domainSubclass
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: domainSubclass__2Ra
extendRelationSig(): t,e: domainSubclass, 2Ra
extendRelationSig(): sig: [, Relation, PositiveInteger, SetOrClass]
extendRelationSig(): combined sig: [, Relation, RationalNumber, SetOrClass]
writeRelationSort(): sig: [, Relation, RationalNumber, SetOrClass]
writeRelationSort(): sigstr:  $i * $rat * $i 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: domainSubclass__2Re
extendRelationSig(): t,e: domainSubclass, 2Re
extendRelationSig(): sig: [, Relation, PositiveInteger, SetOrClass]
extendRelationSig(): combined sig: [, Relation, RealNumber, SetOrClass]
writeRelationSort(): sig: [, Relation, RealNumber, SetOrClass]
writeRelationSort(): sigstr:  $i * $real * $i 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: domainSubclass__2In
extendRelationSig(): t,e: domainSubclass, 2In
extendRelationSig(): sig: [, Relation, PositiveInteger, SetOrClass]
extendRelationSig(): combined sig: [, Relation, Integer, SetOrClass]
writeRelationSort(): sig: [, Relation, Integer, SetOrClass]
writeRelationSort(): sigstr:  $i * $int * $i 
writeSorts(): k: SubtractionFn
Error in KBcache.extendInstance(): term already exists: SubtractionFn__0In1In2InFn
writeSorts(): newTerm: SubtractionFn__0In1In2InFn
extendRelationSig(): t,e: SubtractionFn, 0In1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: SubtractionFn__0Re1Re2ReFn
writeSorts(): newTerm: SubtractionFn__0Re1Re2ReFn
extendRelationSig(): t,e: SubtractionFn, 0Re1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KBcache.extendInstance(): term already exists: SubtractionFn__0Ra1Ra2RaFn
writeSorts(): newTerm: SubtractionFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: SubtractionFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): k: anniversary
writeSorts(): k: date
writeSorts(): k: sphereRadius
writeSorts(): k: temporalPart
writeSorts(): k: initialList
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: initialList__2Ra
extendRelationSig(): t,e: initialList, 2Ra
extendRelationSig(): sig: [, List, Entity]
extendRelationSig(): combined sig: [, List, RationalNumber]
writeRelationSort(): sig: [, List, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: initialList__2Re
extendRelationSig(): t,e: initialList, 2Re
extendRelationSig(): sig: [, List, Entity]
extendRelationSig(): combined sig: [, List, RealNumber]
writeRelationSort(): sig: [, List, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: initialList__2In
extendRelationSig(): t,e: initialList, 2In
extendRelationSig(): sig: [, List, Entity]
extendRelationSig(): combined sig: [, List, Integer]
writeRelationSort(): sig: [, List, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: SquareRootFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SquareRootFn__1RaFn
extendRelationSig(): t,e: SquareRootFn, 1Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SquareRootFn__0In1InFn
extendRelationSig(): t,e: SquareRootFn, 0In1In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SquareRootFn__0ReFn
extendRelationSig(): t,e: SquareRootFn, 0Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SquareRootFn__1ReFn
extendRelationSig(): t,e: SquareRootFn, 1Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SquareRootFn__0Re1RaFn
extendRelationSig(): t,e: SquareRootFn, 0Re1Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SquareRootFn__0Re1InFn
extendRelationSig(): t,e: SquareRootFn, 0Re1In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SquareRootFn__0In1RaFn
extendRelationSig(): t,e: SquareRootFn, 0In1Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SquareRootFn__0In1ReFn
extendRelationSig(): t,e: SquareRootFn, 0In1Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SquareRootFn__0Ra1InFn
extendRelationSig(): t,e: SquareRootFn, 0Ra1In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SquareRootFn__0InFn
extendRelationSig(): t,e: SquareRootFn, 0In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SquareRootFn__1InFn
extendRelationSig(): t,e: SquareRootFn, 1In
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SquareRootFn__0Ra1RaFn
extendRelationSig(): t,e: SquareRootFn, 0Ra1Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SquareRootFn__0Re1ReFn
extendRelationSig(): t,e: SquareRootFn, 0Re1Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SquareRootFn__0Ra1ReFn
extendRelationSig(): t,e: SquareRootFn, 0Ra1Re
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SquareRootFn__0RaFn
extendRelationSig(): t,e: SquareRootFn, 0Ra
extendRelationSig(): sig: [RealNumber, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: before
writeSorts(): k: graphMeasure
writeSorts(): k: conditionalProbability
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: conditionalProbability__3Ra
extendRelationSig(): t,e: conditionalProbability, 3Ra
extendRelationSig(): sig: [, Formula, Formula, RealNumber]
extendRelationSig(): combined sig: [, Formula, Formula, RationalNumber]
writeRelationSort(): sig: [, Formula, Formula, RationalNumber]
writeRelationSort(): sigstr:  $i * $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: conditionalProbability__3Re
extendRelationSig(): t,e: conditionalProbability, 3Re
extendRelationSig(): sig: [, Formula, Formula, RealNumber]
extendRelationSig(): combined sig: [, Formula, Formula, RealNumber]
writeRelationSort(): sig: [, Formula, Formula, RealNumber]
writeRelationSort(): sigstr:  $i * $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: conditionalProbability__3In
extendRelationSig(): t,e: conditionalProbability, 3In
extendRelationSig(): sig: [, Formula, Formula, RealNumber]
extendRelationSig(): combined sig: [, Formula, Formula, Integer]
writeRelationSort(): sig: [, Formula, Formula, Integer]
writeRelationSort(): sigstr:  $i * $i * $int 
writeSorts(): k: DayFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: DayFn__1RaFn
extendRelationSig(): t,e: DayFn, 1Ra
extendRelationSig(): sig: [Day+, PositiveInteger, Month+]
extendRelationSig(): combined sig: [Day+, RationalNumber, Month+]
writeRelationSort(): sig: [Day+, RationalNumber, Month+]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: DayFn__1ReFn
extendRelationSig(): t,e: DayFn, 1Re
extendRelationSig(): sig: [Day+, PositiveInteger, Month+]
extendRelationSig(): combined sig: [Day+, RealNumber, Month+]
writeRelationSort(): sig: [Day+, RealNumber, Month+]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: DayFn__1InFn
extendRelationSig(): t,e: DayFn, 1In
extendRelationSig(): sig: [Day+, PositiveInteger, Month+]
extendRelationSig(): combined sig: [Day+, Integer, Month+]
writeRelationSort(): sig: [Day+, Integer, Month+]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: waterDepth
writeSorts(): k: PastFn
writeSorts(): k: ListFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn__1RaFn
extendRelationSig(): t,e: ListFn, 1Ra
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RationalNumber]
writeRelationSort(): sig: [List, RationalNumber]
writeRelationSort(): sigstr:  $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_3__1RaFn
extendRelationSig(): t,e: ListFn, 3__1Ra
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RationalNumber]
writeRelationSort(): sig: [, RationalNumber]
writeRelationSort(): sigstr:  $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_4__1InFn
extendRelationSig(): t,e: ListFn, 4__1In
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, Integer]
writeRelationSort(): sig: [, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_1__1InFn
extendRelationSig(): t,e: ListFn, 1__1In
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, Integer]
writeRelationSort(): sig: [, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_6__1ReFn
extendRelationSig(): t,e: ListFn, 6__1Re
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RealNumber]
writeRelationSort(): sig: [, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn__1ReFn
extendRelationSig(): t,e: ListFn, 1Re
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RealNumber]
writeRelationSort(): sig: [List, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_6__1RaFn
extendRelationSig(): t,e: ListFn, 6__1Ra
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RationalNumber]
writeRelationSort(): sig: [, RationalNumber]
writeRelationSort(): sigstr:  $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_2__1ReFn
extendRelationSig(): t,e: ListFn, 2__1Re
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RealNumber]
writeRelationSort(): sig: [, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_1__1RaFn
extendRelationSig(): t,e: ListFn, 1__1Ra
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RationalNumber]
writeRelationSort(): sig: [, RationalNumber]
writeRelationSort(): sigstr:  $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_6__1InFn
extendRelationSig(): t,e: ListFn, 6__1In
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, Integer]
writeRelationSort(): sig: [, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_3__1InFn
extendRelationSig(): t,e: ListFn, 3__1In
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, Integer]
writeRelationSort(): sig: [, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_4__1RaFn
extendRelationSig(): t,e: ListFn, 4__1Ra
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RationalNumber]
writeRelationSort(): sig: [, RationalNumber]
writeRelationSort(): sigstr:  $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_4__1ReFn
extendRelationSig(): t,e: ListFn, 4__1Re
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RealNumber]
writeRelationSort(): sig: [, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn__1InFn
extendRelationSig(): t,e: ListFn, 1In
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, Integer]
writeRelationSort(): sig: [List, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_2__1RaFn
extendRelationSig(): t,e: ListFn, 2__1Ra
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RationalNumber]
writeRelationSort(): sig: [, RationalNumber]
writeRelationSort(): sigstr:  $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_5__1InFn
extendRelationSig(): t,e: ListFn, 5__1In
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, Integer]
writeRelationSort(): sig: [, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_1__1ReFn
extendRelationSig(): t,e: ListFn, 1__1Re
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RealNumber]
writeRelationSort(): sig: [, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_5__1ReFn
extendRelationSig(): t,e: ListFn, 5__1Re
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RealNumber]
writeRelationSort(): sig: [, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_2__1InFn
extendRelationSig(): t,e: ListFn, 2__1In
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, Integer]
writeRelationSort(): sig: [, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_3__1ReFn
extendRelationSig(): t,e: ListFn, 3__1Re
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RealNumber]
writeRelationSort(): sig: [, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: ListFn_5__1RaFn
extendRelationSig(): t,e: ListFn, 5__1Ra
extendRelationSig(): sig: [List, Entity]
extendRelationSig(): combined sig: [List, RationalNumber]
writeRelationSort(): sig: [, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): k: deathdate
writeSorts(): k: DiameterFn
writeSorts(): k: beforeOrEqual
writeSorts(): k: frequency
writeSorts(): k: ProbabilityFn
writeSorts(): newTerm: ProbabilityFn__0ReFn
extendRelationSig(): t,e: ProbabilityFn, 0Re
extendRelationSig(): sig: [RealNumber, Formula]
extendRelationSig(): combined sig: [RealNumber, Formula]
writeRelationSort(): sig: [RealNumber, Formula]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: ProbabilityFn__0InFn
extendRelationSig(): t,e: ProbabilityFn, 0In
extendRelationSig(): sig: [RealNumber, Formula]
extendRelationSig(): combined sig: [Integer, Formula]
writeRelationSort(): sig: [Integer, Formula]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: ProbabilityFn__0RaFn
extendRelationSig(): t,e: ProbabilityFn, 0Ra
extendRelationSig(): sig: [RealNumber, Formula]
extendRelationSig(): combined sig: [RationalNumber, Formula]
writeRelationSort(): sig: [RationalNumber, Formula]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: defaultMinimumMeasure
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMinimumMeasure__2Ra
extendRelationSig(): t,e: defaultMinimumMeasure, 2Ra
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, RationalNumber]
writeRelationSort(): sig: [, Object+, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMinimumMeasure__2Re
extendRelationSig(): t,e: defaultMinimumMeasure, 2Re
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, RealNumber]
writeRelationSort(): sig: [, Object+, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMinimumMeasure__2In
extendRelationSig(): t,e: defaultMinimumMeasure, 2In
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, Integer]
writeRelationSort(): sig: [, Object+, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: QuarterFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: QuarterFn__1RaFn
extendRelationSig(): t,e: QuarterFn, 1Ra
extendRelationSig(): sig: [QuarterYear+, PositiveInteger, Year+]
extendRelationSig(): combined sig: [QuarterYear+, RationalNumber, Year+]
writeRelationSort(): sig: [QuarterYear+, RationalNumber, Year+]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: QuarterFn__1ReFn
extendRelationSig(): t,e: QuarterFn, 1Re
extendRelationSig(): sig: [QuarterYear+, PositiveInteger, Year+]
extendRelationSig(): combined sig: [QuarterYear+, RealNumber, Year+]
writeRelationSort(): sig: [QuarterYear+, RealNumber, Year+]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: QuarterFn__1InFn
extendRelationSig(): t,e: QuarterFn, 1In
extendRelationSig(): sig: [QuarterYear+, PositiveInteger, Year+]
extendRelationSig(): combined sig: [QuarterYear+, Integer, Year+]
writeRelationSort(): sig: [QuarterYear+, Integer, Year+]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: PicoFn
writeSorts(): k: diameter
writeSorts(): k: earlier
writeSorts(): k: fleetSize
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: fleetSize__2Ra
extendRelationSig(): t,e: fleetSize, 2Ra
extendRelationSig(): sig: [, Agent, Integer]
extendRelationSig(): combined sig: [, Agent, RationalNumber]
writeRelationSort(): sig: [, Agent, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: fleetSize__2Re
extendRelationSig(): t,e: fleetSize, 2Re
extendRelationSig(): sig: [, Agent, Integer]
extendRelationSig(): combined sig: [, Agent, RealNumber]
writeRelationSort(): sig: [, Agent, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: fleetSize__2In
extendRelationSig(): t,e: fleetSize, 2In
extendRelationSig(): sig: [, Agent, Integer]
extendRelationSig(): combined sig: [, Agent, Integer]
writeRelationSort(): sig: [, Agent, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: WhereFn
writeSorts(): k: defaultMaximumWidth
writeSorts(): k: electronNumber
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: electronNumber__2Ra
extendRelationSig(): t,e: electronNumber, 2Ra
extendRelationSig(): sig: [, PureSubstance, PositiveInteger]
extendRelationSig(): combined sig: [, PureSubstance, RationalNumber]
writeRelationSort(): sig: [, PureSubstance, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: electronNumber__2Re
extendRelationSig(): t,e: electronNumber, 2Re
extendRelationSig(): sig: [, PureSubstance, PositiveInteger]
extendRelationSig(): combined sig: [, PureSubstance, RealNumber]
writeRelationSort(): sig: [, PureSubstance, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: electronNumber__2In
extendRelationSig(): t,e: electronNumber, 2In
extendRelationSig(): sig: [, PureSubstance, PositiveInteger]
extendRelationSig(): combined sig: [, PureSubstance, Integer]
writeRelationSort(): sig: [, PureSubstance, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: MinuteFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinuteFn__1RaFn
extendRelationSig(): t,e: MinuteFn, 1Ra
extendRelationSig(): sig: [Minute+, NonnegativeInteger, Hour+]
extendRelationSig(): combined sig: [Minute+, RationalNumber, Hour+]
writeRelationSort(): sig: [Minute+, RationalNumber, Hour+]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinuteFn__1ReFn
extendRelationSig(): t,e: MinuteFn, 1Re
extendRelationSig(): sig: [Minute+, NonnegativeInteger, Hour+]
extendRelationSig(): combined sig: [Minute+, RealNumber, Hour+]
writeRelationSort(): sig: [Minute+, RealNumber, Hour+]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinuteFn__1InFn
extendRelationSig(): t,e: MinuteFn, 1In
extendRelationSig(): sig: [Minute+, NonnegativeInteger, Hour+]
extendRelationSig(): combined sig: [Minute+, Integer, Hour+]
writeRelationSort(): sig: [Minute+, Integer, Hour+]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: MicroFn
writeSorts(): k: YearFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: YearFn__1RaFn
extendRelationSig(): t,e: YearFn, 1Ra
extendRelationSig(): sig: [Year+, Integer]
extendRelationSig(): combined sig: [Year+, RationalNumber]
writeRelationSort(): sig: [Year+, RationalNumber]
writeRelationSort(): sigstr:  $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: YearFn__1ReFn
extendRelationSig(): t,e: YearFn, 1Re
extendRelationSig(): sig: [Year+, Integer]
extendRelationSig(): combined sig: [Year+, RealNumber]
writeRelationSort(): sig: [Year+, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: YearFn__1InFn
extendRelationSig(): t,e: YearFn, 1In
extendRelationSig(): sig: [Year+, Integer]
extendRelationSig(): combined sig: [Year+, Integer]
writeRelationSort(): sig: [Year+, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): k: SeriesVolumeFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SeriesVolumeFn__2RaFn
extendRelationSig(): t,e: SeriesVolumeFn, 2Ra
extendRelationSig(): sig: [Text+, Series+, PositiveInteger]
extendRelationSig(): combined sig: [Text+, Series+, RationalNumber]
writeRelationSort(): sig: [Text+, Series+, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SeriesVolumeFn__2ReFn
extendRelationSig(): t,e: SeriesVolumeFn, 2Re
extendRelationSig(): sig: [Text+, Series+, PositiveInteger]
extendRelationSig(): combined sig: [Text+, Series+, RealNumber]
writeRelationSort(): sig: [Text+, Series+, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SeriesVolumeFn__2InFn
extendRelationSig(): t,e: SeriesVolumeFn, 2In
extendRelationSig(): sig: [Text+, Series+, PositiveInteger]
extendRelationSig(): combined sig: [Text+, Series+, Integer]
writeRelationSort(): sig: [Text+, Series+, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: WhenFn
writeSorts(): k: radius
writeSorts(): k: starts
writeSorts(): k: DensityFn
writeSorts(): k: greaterThan
Error in KBcache.extendInstance(): term already exists: greaterThan__1In2In
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: greaterThan__1In2In
extendRelationSig(): t,e: greaterThan, 1In2In
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: greaterThan__1Ra2Ra
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: greaterThan__1Ra2Ra
extendRelationSig(): t,e: greaterThan, 1Ra2Ra
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
Error in KBcache.extendInstance(): term already exists: greaterThan__1Re2Re
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: greaterThan__1Re2Re
extendRelationSig(): t,e: greaterThan, 1Re2Re
extendRelationSig(): sig: [, Quantity, Quantity]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): k: BeginFn
writeSorts(): k: wavelength
writeSorts(): k: temporallyBetweenOrEqual
writeSorts(): k: AssignmentFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__2RaFn
extendRelationSig(): t,e: AssignmentFn, 2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RationalNumber]
writeRelationSort(): sig: [Entity, Function, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0Ra2InFn
extendRelationSig(): t,e: AssignmentFn, 0Ra2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [RationalNumber, Function, Integer]
writeRelationSort(): sig: [RationalNumber, Function, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_4__2InFn
extendRelationSig(): t,e: AssignmentFn, 4__2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, Integer]
writeRelationSort(): sig: [, , Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0In2InFn
extendRelationSig(): t,e: AssignmentFn, 0In2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Integer, Function, Integer]
writeRelationSort(): sig: [Integer, Function, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): newTerm: AssignmentFn__0ReFn
extendRelationSig(): t,e: AssignmentFn, 0Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [RealNumber, Function, Entity]
writeRelationSort(): sig: [RealNumber, Function, Entity]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0Re2RaFn
extendRelationSig(): t,e: AssignmentFn, 0Re2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [RealNumber, Function, RationalNumber]
writeRelationSort(): sig: [RealNumber, Function, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__2ReFn
extendRelationSig(): t,e: AssignmentFn, 2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RealNumber]
writeRelationSort(): sig: [Entity, Function, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_5__2ReFn
extendRelationSig(): t,e: AssignmentFn, 5__2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RealNumber]
writeRelationSort(): sig: [, , RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_2__2ReFn
extendRelationSig(): t,e: AssignmentFn, 2__2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RealNumber]
writeRelationSort(): sig: [, , RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0In2RaFn
extendRelationSig(): t,e: AssignmentFn, 0In2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Integer, Function, RationalNumber]
writeRelationSort(): sig: [Integer, Function, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0Re2InFn
extendRelationSig(): t,e: AssignmentFn, 0Re2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [RealNumber, Function, Integer]
writeRelationSort(): sig: [RealNumber, Function, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_4__2RaFn
extendRelationSig(): t,e: AssignmentFn, 4__2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RationalNumber]
writeRelationSort(): sig: [, , RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0In2ReFn
extendRelationSig(): t,e: AssignmentFn, 0In2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Integer, Function, RealNumber]
writeRelationSort(): sig: [Integer, Function, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
writeSorts(): newTerm: AssignmentFn_1__Fn
extendRelationSig(): t,e: AssignmentFn, 1__
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, Entity]
writeRelationSort(): sig: [Entity, Function, Entity]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_4__2ReFn
extendRelationSig(): t,e: AssignmentFn, 4__2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RealNumber]
writeRelationSort(): sig: [, , RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_5__2InFn
extendRelationSig(): t,e: AssignmentFn, 5__2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, Integer]
writeRelationSort(): sig: [, , Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_2__2RaFn
extendRelationSig(): t,e: AssignmentFn, 2__2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RationalNumber]
writeRelationSort(): sig: [, , RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_5__2RaFn
extendRelationSig(): t,e: AssignmentFn, 5__2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RationalNumber]
writeRelationSort(): sig: [, , RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_2__2InFn
extendRelationSig(): t,e: AssignmentFn, 2__2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, Integer]
writeRelationSort(): sig: [, , Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_3__2RaFn
extendRelationSig(): t,e: AssignmentFn, 3__2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RationalNumber]
writeRelationSort(): sig: [, , RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_6__2ReFn
extendRelationSig(): t,e: AssignmentFn, 6__2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RealNumber]
writeRelationSort(): sig: [, , RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_6__2RaFn
extendRelationSig(): t,e: AssignmentFn, 6__2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RationalNumber]
writeRelationSort(): sig: [, , RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_3__2InFn
extendRelationSig(): t,e: AssignmentFn, 3__2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, Integer]
writeRelationSort(): sig: [, , Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_6__2InFn
extendRelationSig(): t,e: AssignmentFn, 6__2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, Integer]
writeRelationSort(): sig: [, , Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): newTerm: AssignmentFn__0InFn
extendRelationSig(): t,e: AssignmentFn, 0In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Integer, Function, Entity]
writeRelationSort(): sig: [Integer, Function, Entity]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__2InFn
extendRelationSig(): t,e: AssignmentFn, 2In
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, Integer]
writeRelationSort(): sig: [Entity, Function, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0Re2ReFn
extendRelationSig(): t,e: AssignmentFn, 0Re2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [RealNumber, Function, RealNumber]
writeRelationSort(): sig: [RealNumber, Function, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0Ra2RaFn
extendRelationSig(): t,e: AssignmentFn, 0Ra2Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [RationalNumber, Function, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Function, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
writeSorts(): newTerm: AssignmentFn__0RaFn
extendRelationSig(): t,e: AssignmentFn, 0Ra
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [RationalNumber, Function, Entity]
writeRelationSort(): sig: [RationalNumber, Function, Entity]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn__0Ra2ReFn
extendRelationSig(): t,e: AssignmentFn, 0Ra2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [RationalNumber, Function, RealNumber]
writeRelationSort(): sig: [RationalNumber, Function, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AssignmentFn_3__2ReFn
extendRelationSig(): t,e: AssignmentFn, 3__2Re
extendRelationSig(): sig: [Entity, Function, Entity]
extendRelationSig(): combined sig: [Entity, Function, RealNumber]
writeRelationSort(): sig: [, , RealNumber]
writeRelationSort(): sigstr:  $i * $real 
writeSorts(): k: weight
writeSorts(): k: SignumFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SignumFn__1RaFn
extendRelationSig(): t,e: SignumFn, 1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SignumFn__0In1InFn
extendRelationSig(): t,e: SignumFn, 0In1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SignumFn__0ReFn
extendRelationSig(): t,e: SignumFn, 0Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SignumFn__1ReFn
extendRelationSig(): t,e: SignumFn, 1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SignumFn__0Re1RaFn
extendRelationSig(): t,e: SignumFn, 0Re1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SignumFn__0Re1InFn
extendRelationSig(): t,e: SignumFn, 0Re1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SignumFn__0In1RaFn
extendRelationSig(): t,e: SignumFn, 0In1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SignumFn__0In1ReFn
extendRelationSig(): t,e: SignumFn, 0In1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SignumFn__0Ra1InFn
extendRelationSig(): t,e: SignumFn, 0Ra1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SignumFn__0InFn
extendRelationSig(): t,e: SignumFn, 0In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SignumFn__1InFn
extendRelationSig(): t,e: SignumFn, 1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SignumFn__0Ra1RaFn
extendRelationSig(): t,e: SignumFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SignumFn__0Re1ReFn
extendRelationSig(): t,e: SignumFn, 0Re1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SignumFn__0Ra1ReFn
extendRelationSig(): t,e: SignumFn, 0Ra1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SignumFn__0RaFn
extendRelationSig(): t,e: SignumFn, 0Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: identityElement
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: identityElement__2Ra
extendRelationSig(): t,e: identityElement, 2Ra
extendRelationSig(): sig: [, BinaryFunction, Integer]
extendRelationSig(): combined sig: [, BinaryFunction, RationalNumber]
writeRelationSort(): sig: [, BinaryFunction, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: identityElement__2Re
extendRelationSig(): t,e: identityElement, 2Re
extendRelationSig(): sig: [, BinaryFunction, Integer]
extendRelationSig(): combined sig: [, BinaryFunction, RealNumber]
writeRelationSort(): sig: [, BinaryFunction, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: identityElement__2In
extendRelationSig(): t,e: identityElement, 2In
extendRelationSig(): sig: [, BinaryFunction, Integer]
extendRelationSig(): combined sig: [, BinaryFunction, Integer]
writeRelationSort(): sig: [, BinaryFunction, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: valence
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: valence__2Ra
extendRelationSig(): t,e: valence, 2Ra
extendRelationSig(): sig: [, Relation, PositiveInteger]
extendRelationSig(): combined sig: [, Relation, RationalNumber]
writeRelationSort(): sig: [, Relation, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: valence__2Re
extendRelationSig(): t,e: valence, 2Re
extendRelationSig(): sig: [, Relation, PositiveInteger]
extendRelationSig(): combined sig: [, Relation, RealNumber]
writeRelationSort(): sig: [, Relation, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: valence__2In
extendRelationSig(): t,e: valence, 2In
extendRelationSig(): sig: [, Relation, PositiveInteger]
extendRelationSig(): combined sig: [, Relation, Integer]
writeRelationSort(): sig: [, Relation, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: CardinalityFn
writeSorts(): newTerm: CardinalityFn__0ReFn
extendRelationSig(): t,e: CardinalityFn, 0Re
extendRelationSig(): sig: [Integer, (UnionFn SetOrClass Collection)]
extendRelationSig(): combined sig: [RealNumber, (UnionFn SetOrClass Collection)]
writeRelationSort(): sig: [RealNumber, (UnionFn SetOrClass Collection)]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: CardinalityFn__0InFn
extendRelationSig(): t,e: CardinalityFn, 0In
extendRelationSig(): sig: [Integer, (UnionFn SetOrClass Collection)]
extendRelationSig(): combined sig: [Integer, (UnionFn SetOrClass Collection)]
writeRelationSort(): sig: [Integer, (UnionFn SetOrClass Collection)]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: CardinalityFn__0RaFn
extendRelationSig(): t,e: CardinalityFn, 0Ra
extendRelationSig(): sig: [Integer, (UnionFn SetOrClass Collection)]
extendRelationSig(): combined sig: [RationalNumber, (UnionFn SetOrClass Collection)]
writeRelationSort(): sig: [RationalNumber, (UnionFn SetOrClass Collection)]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: contraryAttribute
writeSorts(): newTerm: contraryAttribute__1
extendRelationSig(): t,e: contraryAttribute, 1
extendRelationSig(): sig: [, Attribute]
extendRelationSig(): combined sig: [, Attribute]
writeRelationSort(): sig: [, Attribute]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: contraryAttribute__2
extendRelationSig(): t,e: contraryAttribute, 2
extendRelationSig(): sig: [, Attribute]
extendRelationSig(): combined sig: [, Attribute]
writeRelationSort(): sig: [, Attribute]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: contraryAttribute__3
extendRelationSig(): t,e: contraryAttribute, 3
extendRelationSig(): sig: [, Attribute]
extendRelationSig(): combined sig: [, Attribute]
writeRelationSort(): sig: [, Attribute]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: contraryAttribute__4
extendRelationSig(): t,e: contraryAttribute, 4
extendRelationSig(): sig: [, Attribute]
extendRelationSig(): combined sig: [, Attribute]
writeRelationSort(): sig: [, Attribute]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: contraryAttribute__5
extendRelationSig(): t,e: contraryAttribute, 5
extendRelationSig(): sig: [, Attribute]
extendRelationSig(): combined sig: [, Attribute]
writeRelationSort(): sig: [, Attribute]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: contraryAttribute__6
extendRelationSig(): t,e: contraryAttribute, 6
extendRelationSig(): sig: [, Attribute]
extendRelationSig(): combined sig: [, Attribute]
writeRelationSort(): sig: [, Attribute]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: SuccessorFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SuccessorFn__1RaFn
extendRelationSig(): t,e: SuccessorFn, 1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SuccessorFn__0In1InFn
extendRelationSig(): t,e: SuccessorFn, 0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SuccessorFn__0ReFn
extendRelationSig(): t,e: SuccessorFn, 0Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SuccessorFn__1ReFn
extendRelationSig(): t,e: SuccessorFn, 1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SuccessorFn__0Re1RaFn
extendRelationSig(): t,e: SuccessorFn, 0Re1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SuccessorFn__0Re1InFn
extendRelationSig(): t,e: SuccessorFn, 0Re1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SuccessorFn__0In1RaFn
extendRelationSig(): t,e: SuccessorFn, 0In1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SuccessorFn__0In1ReFn
extendRelationSig(): t,e: SuccessorFn, 0In1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SuccessorFn__0Ra1InFn
extendRelationSig(): t,e: SuccessorFn, 0Ra1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SuccessorFn__0InFn
extendRelationSig(): t,e: SuccessorFn, 0In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: SuccessorFn__1InFn
extendRelationSig(): t,e: SuccessorFn, 1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: SuccessorFn__0Ra1RaFn
extendRelationSig(): t,e: SuccessorFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: SuccessorFn__0Re1ReFn
extendRelationSig(): t,e: SuccessorFn, 0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SuccessorFn__0Ra1ReFn
extendRelationSig(): t,e: SuccessorFn, 0Ra1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: SuccessorFn__0RaFn
extendRelationSig(): t,e: SuccessorFn, 0Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): k: airTemperature
writeSorts(): k: measure
writeSorts(): k: approximateValue
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1Ra
extendRelationSig(): t,e: approximateValue, 1Ra
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RationalNumber, RealNumber]
writeRelationSort(): sig: [, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: approximateValue__2Ra
extendRelationSig(): t,e: approximateValue, 2Ra
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RealNumber, RationalNumber]
writeRelationSort(): sig: [, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1Re
extendRelationSig(): t,e: approximateValue, 1Re
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: approximateValue__2Re
extendRelationSig(): t,e: approximateValue, 2Re
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1Ra2Re
extendRelationSig(): t,e: approximateValue, 1Ra2Re
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RationalNumber, RealNumber]
writeRelationSort(): sig: [, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1Ra2Ra
extendRelationSig(): t,e: approximateValue, 1Ra2Ra
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1Re2Re
extendRelationSig(): t,e: approximateValue, 1Re2Re
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1Re2Ra
extendRelationSig(): t,e: approximateValue, 1Re2Ra
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RealNumber, RationalNumber]
writeRelationSort(): sig: [, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1In2In
extendRelationSig(): t,e: approximateValue, 1In2In
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1In
extendRelationSig(): t,e: approximateValue, 1In
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, Integer, RealNumber]
writeRelationSort(): sig: [, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: approximateValue__2In
extendRelationSig(): t,e: approximateValue, 2In
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RealNumber, Integer]
writeRelationSort(): sig: [, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1Ra2In
extendRelationSig(): t,e: approximateValue, 1Ra2In
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RationalNumber, Integer]
writeRelationSort(): sig: [, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1In2Re
extendRelationSig(): t,e: approximateValue, 1In2Re
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, Integer, RealNumber]
writeRelationSort(): sig: [, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1Re2In
extendRelationSig(): t,e: approximateValue, 1Re2In
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, RealNumber, Integer]
writeRelationSort(): sig: [, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: approximateValue__1In2Ra
extendRelationSig(): t,e: approximateValue, 1In2Ra
extendRelationSig(): sig: [, RealNumber, RealNumber]
extendRelationSig(): combined sig: [, Integer, RationalNumber]
writeRelationSort(): sig: [, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): k: AdditionFn
Error in KBcache.extendInstance(): term already exists: AdditionFn__0In1In2InFn
writeSorts(): newTerm: AdditionFn__0In1In2InFn
extendRelationSig(): t,e: AdditionFn, 0In1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: AdditionFn__0Re1Re2ReFn
writeSorts(): newTerm: AdditionFn__0Re1Re2ReFn
extendRelationSig(): t,e: AdditionFn, 0Re1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KBcache.extendInstance(): term already exists: AdditionFn__0Ra1Ra2RaFn
writeSorts(): newTerm: AdditionFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: AdditionFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): k: angularMeasure
writeSorts(): k: PerCapitaFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PerCapitaFn__1RaFn
extendRelationSig(): t,e: PerCapitaFn, 1Ra
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [Quantity, RationalNumber, GeopoliticalArea]
writeRelationSort(): sig: [Quantity, RationalNumber, GeopoliticalArea]
writeRelationSort(): sigstr:  $rat * $i 
writeSorts(): newTerm: PerCapitaFn__0In1InFn
extendRelationSig(): t,e: PerCapitaFn, 0In1In
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [Integer, Integer, GeopoliticalArea]
writeRelationSort(): sig: [Integer, Integer, GeopoliticalArea]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): newTerm: PerCapitaFn__0ReFn
extendRelationSig(): t,e: PerCapitaFn, 0Re
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [RealNumber, Quantity, GeopoliticalArea]
writeRelationSort(): sig: [RealNumber, Quantity, GeopoliticalArea]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PerCapitaFn__1ReFn
extendRelationSig(): t,e: PerCapitaFn, 1Re
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [Quantity, RealNumber, GeopoliticalArea]
writeRelationSort(): sig: [Quantity, RealNumber, GeopoliticalArea]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: PerCapitaFn__0Re1RaFn
extendRelationSig(): t,e: PerCapitaFn, 0Re1Ra
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, GeopoliticalArea]
writeRelationSort(): sig: [RealNumber, RationalNumber, GeopoliticalArea]
writeRelationSort(): sigstr:  $rat * $i 
writeSorts(): newTerm: PerCapitaFn__0Re1InFn
extendRelationSig(): t,e: PerCapitaFn, 0Re1In
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [RealNumber, Integer, GeopoliticalArea]
writeRelationSort(): sig: [RealNumber, Integer, GeopoliticalArea]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): newTerm: PerCapitaFn__0In1RaFn
extendRelationSig(): t,e: PerCapitaFn, 0In1Ra
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [Integer, RationalNumber, GeopoliticalArea]
writeRelationSort(): sig: [Integer, RationalNumber, GeopoliticalArea]
writeRelationSort(): sigstr:  $rat * $i 
writeSorts(): newTerm: PerCapitaFn__0In1ReFn
extendRelationSig(): t,e: PerCapitaFn, 0In1Re
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [Integer, RealNumber, GeopoliticalArea]
writeRelationSort(): sig: [Integer, RealNumber, GeopoliticalArea]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: PerCapitaFn__0Ra1InFn
extendRelationSig(): t,e: PerCapitaFn, 0Ra1In
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [RationalNumber, Integer, GeopoliticalArea]
writeRelationSort(): sig: [RationalNumber, Integer, GeopoliticalArea]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): newTerm: PerCapitaFn__0InFn
extendRelationSig(): t,e: PerCapitaFn, 0In
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [Integer, Quantity, GeopoliticalArea]
writeRelationSort(): sig: [Integer, Quantity, GeopoliticalArea]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: PerCapitaFn__1InFn
extendRelationSig(): t,e: PerCapitaFn, 1In
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [Quantity, Integer, GeopoliticalArea]
writeRelationSort(): sig: [Quantity, Integer, GeopoliticalArea]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): newTerm: PerCapitaFn__0Ra1RaFn
extendRelationSig(): t,e: PerCapitaFn, 0Ra1Ra
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, GeopoliticalArea]
writeRelationSort(): sig: [RationalNumber, RationalNumber, GeopoliticalArea]
writeRelationSort(): sigstr:  $rat * $i 
writeSorts(): newTerm: PerCapitaFn__0Re1ReFn
extendRelationSig(): t,e: PerCapitaFn, 0Re1Re
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [RealNumber, RealNumber, GeopoliticalArea]
writeRelationSort(): sig: [RealNumber, RealNumber, GeopoliticalArea]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: PerCapitaFn__0Ra1ReFn
extendRelationSig(): t,e: PerCapitaFn, 0Ra1Re
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, GeopoliticalArea]
writeRelationSort(): sig: [RationalNumber, RealNumber, GeopoliticalArea]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: PerCapitaFn__0RaFn
extendRelationSig(): t,e: PerCapitaFn, 0Ra
extendRelationSig(): sig: [Quantity, Quantity, GeopoliticalArea]
extendRelationSig(): combined sig: [RationalNumber, Quantity, GeopoliticalArea]
writeRelationSort(): sig: [RationalNumber, Quantity, GeopoliticalArea]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): k: defaultMeasure
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMeasure__2Ra
extendRelationSig(): t,e: defaultMeasure, 2Ra
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, RationalNumber]
writeRelationSort(): sig: [, Object+, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMeasure__2Re
extendRelationSig(): t,e: defaultMeasure, 2Re
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, RealNumber]
writeRelationSort(): sig: [, Object+, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMeasure__2In
extendRelationSig(): t,e: defaultMeasure, 2In
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, Integer]
writeRelationSort(): sig: [, Object+, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: birthday
writeSorts(): k: agreementPeriod
writeSorts(): k: potentialOfHydrogen
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: potentialOfHydrogen__2Ra
extendRelationSig(): t,e: potentialOfHydrogen, 2Ra
extendRelationSig(): sig: [, Solution, RealNumber]
extendRelationSig(): combined sig: [, Solution, RationalNumber]
writeRelationSort(): sig: [, Solution, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: potentialOfHydrogen__2Re
extendRelationSig(): t,e: potentialOfHydrogen, 2Re
extendRelationSig(): sig: [, Solution, RealNumber]
extendRelationSig(): combined sig: [, Solution, RealNumber]
writeRelationSort(): sig: [, Solution, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: potentialOfHydrogen__2In
extendRelationSig(): t,e: potentialOfHydrogen, 2In
extendRelationSig(): sig: [, Solution, RealNumber]
extendRelationSig(): combined sig: [, Solution, Integer]
writeRelationSort(): sig: [, Solution, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: defaultMaximumHeight
writeSorts(): k: MilliFn
writeSorts(): k: distance
writeSorts(): k: EditionFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: EditionFn__2RaFn
extendRelationSig(): t,e: EditionFn, 2Ra
extendRelationSig(): sig: [ContentBearingObject+, ContentBearingObject+, PositiveInteger]
extendRelationSig(): combined sig: [ContentBearingObject+, ContentBearingObject+, RationalNumber]
writeRelationSort(): sig: [ContentBearingObject+, ContentBearingObject+, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: EditionFn__2ReFn
extendRelationSig(): t,e: EditionFn, 2Re
extendRelationSig(): sig: [ContentBearingObject+, ContentBearingObject+, PositiveInteger]
extendRelationSig(): combined sig: [ContentBearingObject+, ContentBearingObject+, RealNumber]
writeRelationSort(): sig: [ContentBearingObject+, ContentBearingObject+, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: EditionFn__2InFn
extendRelationSig(): t,e: EditionFn, 2In
extendRelationSig(): sig: [ContentBearingObject+, ContentBearingObject+, PositiveInteger]
extendRelationSig(): combined sig: [ContentBearingObject+, ContentBearingObject+, Integer]
writeRelationSort(): sig: [ContentBearingObject+, ContentBearingObject+, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: UnitFn
writeSorts(): k: SineFn
writeSorts(): newTerm: SineFn__0ReFn
extendRelationSig(): t,e: SineFn, 0Re
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: SineFn__0InFn
extendRelationSig(): t,e: SineFn, 0In
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [Integer, PlaneAngleMeasure]
writeRelationSort(): sig: [Integer, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: SineFn__0RaFn
extendRelationSig(): t,e: SineFn, 0Ra
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [RationalNumber, PlaneAngleMeasure]
writeRelationSort(): sig: [RationalNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: WeekFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: WeekFn__1RaFn
extendRelationSig(): t,e: WeekFn, 1Ra
extendRelationSig(): sig: [Week+, PositiveInteger, Year+]
extendRelationSig(): combined sig: [Week+, RationalNumber, Year+]
writeRelationSort(): sig: [Week+, RationalNumber, Year+]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: WeekFn__1ReFn
extendRelationSig(): t,e: WeekFn, 1Re
extendRelationSig(): sig: [Week+, PositiveInteger, Year+]
extendRelationSig(): combined sig: [Week+, RealNumber, Year+]
writeRelationSort(): sig: [Week+, RealNumber, Year+]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: WeekFn__1InFn
extendRelationSig(): t,e: WeekFn, 1In
extendRelationSig(): sig: [Week+, PositiveInteger, Year+]
extendRelationSig(): combined sig: [Week+, Integer, Year+]
writeRelationSort(): sig: [Week+, Integer, Year+]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: VelocityFn
writeSorts(): k: exhaustiveDecomposition
writeSorts(): newTerm: exhaustiveDecomposition__1
extendRelationSig(): t,e: exhaustiveDecomposition, 1
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveDecomposition__2
extendRelationSig(): t,e: exhaustiveDecomposition, 2
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveDecomposition__3
extendRelationSig(): t,e: exhaustiveDecomposition, 3
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveDecomposition__4
extendRelationSig(): t,e: exhaustiveDecomposition, 4
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveDecomposition__5
extendRelationSig(): t,e: exhaustiveDecomposition, 5
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): newTerm: exhaustiveDecomposition__6
extendRelationSig(): t,e: exhaustiveDecomposition, 6
extendRelationSig(): sig: [, Class, Class]
extendRelationSig(): combined sig: [, Class, Class]
writeRelationSort(): sig: [, Class, Class]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): k: agreementExpirationDate
writeSorts(): k: LeastCommonMultipleFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LeastCommonMultipleFn__1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: LeastCommonMultipleFn__0In1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_1__0Re1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 1__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_1__0Ra1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 1__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LeastCommonMultipleFn__1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: LeastCommonMultipleFn_2__0Ra1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 2__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0Re1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0Re1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: LeastCommonMultipleFn_3__0Re1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 3__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0Re1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0Re1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_1__0In1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 1__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_4__0Ra1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 4__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0In1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0In1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: LeastCommonMultipleFn_2__0Re1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 2__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_2__0In1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 2__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_3__0Ra1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 3__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0In1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0In1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: LeastCommonMultipleFn__0Ra1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0Ra1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_4__0In1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 4__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_5__0Re1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 5__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_4__0Re1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 4__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_3__0In1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 3__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_5__0Ra1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 5__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: LeastCommonMultipleFn__1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_6__0In1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 6__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0Ra1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: LeastCommonMultipleFn__0Re1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: LeastCommonMultipleFn_5__0In1InFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 5__0In1In
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0Ra1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0Ra1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: LeastCommonMultipleFn_6__0Re1ReFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 6__0Re1Re
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn__0RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 0Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: LeastCommonMultipleFn_6__0Ra1RaFn
extendRelationSig(): t,e: LeastCommonMultipleFn, 6__0Ra1Ra
extendRelationSig(): sig: [Integer, Integer]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): k: NumeratorFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: NumeratorFn__1RaFn
extendRelationSig(): t,e: NumeratorFn, 1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: NumeratorFn__0In1InFn
extendRelationSig(): t,e: NumeratorFn, 0In1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: NumeratorFn__0ReFn
extendRelationSig(): t,e: NumeratorFn, 0Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: NumeratorFn__1ReFn
extendRelationSig(): t,e: NumeratorFn, 1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: NumeratorFn__0Re1RaFn
extendRelationSig(): t,e: NumeratorFn, 0Re1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: NumeratorFn__0Re1InFn
extendRelationSig(): t,e: NumeratorFn, 0Re1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: NumeratorFn__0In1RaFn
extendRelationSig(): t,e: NumeratorFn, 0In1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: NumeratorFn__0In1ReFn
extendRelationSig(): t,e: NumeratorFn, 0In1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: NumeratorFn__0Ra1InFn
extendRelationSig(): t,e: NumeratorFn, 0Ra1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: NumeratorFn__0InFn
extendRelationSig(): t,e: NumeratorFn, 0In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: NumeratorFn__1InFn
extendRelationSig(): t,e: NumeratorFn, 1In
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: NumeratorFn__0Ra1RaFn
extendRelationSig(): t,e: NumeratorFn, 0Ra1Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: NumeratorFn__0Re1ReFn
extendRelationSig(): t,e: NumeratorFn, 0Re1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: NumeratorFn__0Ra1ReFn
extendRelationSig(): t,e: NumeratorFn, 0Ra1Re
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: NumeratorFn__0RaFn
extendRelationSig(): t,e: NumeratorFn, 0Ra
extendRelationSig(): sig: [Integer, RealNumber]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: SpeedFn
writeSorts(): k: duration
writeSorts(): k: humanCapacity
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: humanCapacity__2Ra
extendRelationSig(): t,e: humanCapacity, 2Ra
extendRelationSig(): sig: [, StationaryArtifact, PositiveInteger]
extendRelationSig(): combined sig: [, StationaryArtifact, RationalNumber]
writeRelationSort(): sig: [, StationaryArtifact, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: humanCapacity__2Re
extendRelationSig(): t,e: humanCapacity, 2Re
extendRelationSig(): sig: [, StationaryArtifact, PositiveInteger]
extendRelationSig(): combined sig: [, StationaryArtifact, RealNumber]
writeRelationSort(): sig: [, StationaryArtifact, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: humanCapacity__2In
extendRelationSig(): t,e: humanCapacity, 2In
extendRelationSig(): sig: [, StationaryArtifact, PositiveInteger]
extendRelationSig(): combined sig: [, StationaryArtifact, Integer]
writeRelationSort(): sig: [, StationaryArtifact, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: soundFrequency
writeSorts(): k: yearOfFounding
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: yearOfFounding__2Ra
extendRelationSig(): t,e: yearOfFounding, 2Ra
extendRelationSig(): sig: [, Organization, Integer]
extendRelationSig(): combined sig: [, Organization, RationalNumber]
writeRelationSort(): sig: [, Organization, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: yearOfFounding__2Re
extendRelationSig(): t,e: yearOfFounding, 2Re
extendRelationSig(): sig: [, Organization, Integer]
extendRelationSig(): combined sig: [, Organization, RealNumber]
writeRelationSort(): sig: [, Organization, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: yearOfFounding__2In
extendRelationSig(): t,e: yearOfFounding, 2In
extendRelationSig(): sig: [, Organization, Integer]
extendRelationSig(): combined sig: [, Organization, Integer]
writeRelationSort(): sig: [, Organization, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: voltageMeasure
writeSorts(): k: transactionAmount
writeSorts(): k: protonNumber
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: protonNumber__2Ra
extendRelationSig(): t,e: protonNumber, 2Ra
extendRelationSig(): sig: [, PureSubstance, PositiveInteger]
extendRelationSig(): combined sig: [, PureSubstance, RationalNumber]
writeRelationSort(): sig: [, PureSubstance, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: protonNumber__2Re
extendRelationSig(): t,e: protonNumber, 2Re
extendRelationSig(): sig: [, PureSubstance, PositiveInteger]
extendRelationSig(): combined sig: [, PureSubstance, RealNumber]
writeRelationSort(): sig: [, PureSubstance, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: protonNumber__2In
extendRelationSig(): t,e: protonNumber, 2In
extendRelationSig(): sig: [, PureSubstance, PositiveInteger]
extendRelationSig(): combined sig: [, PureSubstance, Integer]
writeRelationSort(): sig: [, PureSubstance, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: HourFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: HourFn__1RaFn
extendRelationSig(): t,e: HourFn, 1Ra
extendRelationSig(): sig: [Hour+, NonnegativeInteger, Day+]
extendRelationSig(): combined sig: [Hour+, RationalNumber, Day+]
writeRelationSort(): sig: [Hour+, RationalNumber, Day+]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: HourFn__1ReFn
extendRelationSig(): t,e: HourFn, 1Re
extendRelationSig(): sig: [Hour+, NonnegativeInteger, Day+]
extendRelationSig(): combined sig: [Hour+, RealNumber, Day+]
writeRelationSort(): sig: [Hour+, RealNumber, Day+]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: HourFn__1InFn
extendRelationSig(): t,e: HourFn, 1In
extendRelationSig(): sig: [Hour+, NonnegativeInteger, Day+]
extendRelationSig(): combined sig: [Hour+, Integer, Day+]
writeRelationSort(): sig: [Hour+, Integer, Day+]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): k: KiloFn
writeSorts(): k: profit
writeSorts(): k: MegaFn
writeSorts(): k: RationalNumberFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RationalNumberFn__1RaFn
extendRelationSig(): t,e: RationalNumberFn, 1Ra
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RationalNumberFn__0In1InFn
extendRelationSig(): t,e: RationalNumberFn, 0In1In
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RationalNumberFn__0ReFn
extendRelationSig(): t,e: RationalNumberFn, 0Re
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RealNumber, Number]
writeRelationSort(): sig: [RealNumber, Number]
writeRelationSort(): sigstr:  $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RationalNumberFn__1ReFn
extendRelationSig(): t,e: RationalNumberFn, 1Re
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RationalNumberFn__0Re1RaFn
extendRelationSig(): t,e: RationalNumberFn, 0Re1Ra
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RationalNumberFn__0Re1InFn
extendRelationSig(): t,e: RationalNumberFn, 0Re1In
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RationalNumberFn__0In1RaFn
extendRelationSig(): t,e: RationalNumberFn, 0In1Ra
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RationalNumberFn__0In1ReFn
extendRelationSig(): t,e: RationalNumberFn, 0In1Re
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RationalNumberFn__0Ra1InFn
extendRelationSig(): t,e: RationalNumberFn, 0Ra1In
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RationalNumberFn__0InFn
extendRelationSig(): t,e: RationalNumberFn, 0In
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [Integer, Number]
writeRelationSort(): sig: [Integer, Number]
writeRelationSort(): sigstr:  $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RationalNumberFn__1InFn
extendRelationSig(): t,e: RationalNumberFn, 1In
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RationalNumberFn__0Ra1RaFn
extendRelationSig(): t,e: RationalNumberFn, 0Ra1Ra
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RationalNumberFn__0Re1ReFn
extendRelationSig(): t,e: RationalNumberFn, 0Re1Re
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RationalNumberFn__0Ra1ReFn
extendRelationSig(): t,e: RationalNumberFn, 0Ra1Re
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RationalNumberFn__0RaFn
extendRelationSig(): t,e: RationalNumberFn, 0Ra
extendRelationSig(): sig: [RationalNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, Number]
writeRelationSort(): sig: [RationalNumber, Number]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: defaultMaximumMeasure
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMaximumMeasure__2Ra
extendRelationSig(): t,e: defaultMaximumMeasure, 2Ra
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, RationalNumber]
writeRelationSort(): sig: [, Object+, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMaximumMeasure__2Re
extendRelationSig(): t,e: defaultMaximumMeasure, 2Re
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, RealNumber]
writeRelationSort(): sig: [, Object+, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: defaultMaximumMeasure__2In
extendRelationSig(): t,e: defaultMaximumMeasure, 2In
extendRelationSig(): sig: [, Object+, Quantity]
extendRelationSig(): combined sig: [, Object+, Integer]
writeRelationSort(): sig: [, Object+, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: FirstFn
writeSorts(): newTerm: FirstFn__0ReFn
extendRelationSig(): t,e: FirstFn, 0Re
extendRelationSig(): sig: [Entity, List]
extendRelationSig(): combined sig: [RealNumber, List]
writeRelationSort(): sig: [RealNumber, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: FirstFn__0InFn
extendRelationSig(): t,e: FirstFn, 0In
extendRelationSig(): sig: [Entity, List]
extendRelationSig(): combined sig: [Integer, List]
writeRelationSort(): sig: [Integer, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: FirstFn__0RaFn
extendRelationSig(): t,e: FirstFn, 0Ra
extendRelationSig(): sig: [Entity, List]
extendRelationSig(): combined sig: [RationalNumber, List]
writeRelationSort(): sig: [RationalNumber, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: ImaginaryPartFn
writeSorts(): k: RadiusFn
writeSorts(): k: IntervalFn
writeSorts(): k: AbsoluteValueFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AbsoluteValueFn__1RaFn
extendRelationSig(): t,e: AbsoluteValueFn, 1Ra
extendRelationSig(): sig: [NonnegativeRealNumber, RealNumber]
extendRelationSig(): combined sig: [NonnegativeRealNumber, RationalNumber]
writeRelationSort(): sig: [NonnegativeRealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: AbsoluteValueFn__0ReFn
extendRelationSig(): t,e: AbsoluteValueFn, 0Re
extendRelationSig(): sig: [NonnegativeRealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AbsoluteValueFn__1ReFn
extendRelationSig(): t,e: AbsoluteValueFn, 1Re
extendRelationSig(): sig: [NonnegativeRealNumber, RealNumber]
extendRelationSig(): combined sig: [NonnegativeRealNumber, RealNumber]
writeRelationSort(): sig: [NonnegativeRealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: AbsoluteValueFn__1InFn
extendRelationSig(): t,e: AbsoluteValueFn, 1In
extendRelationSig(): sig: [NonnegativeRealNumber, RealNumber]
extendRelationSig(): combined sig: [NonnegativeRealNumber, Integer]
writeRelationSort(): sig: [NonnegativeRealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: AbsoluteValueFn__0Re1RaFn
extendRelationSig(): t,e: AbsoluteValueFn, 0Re1Ra
extendRelationSig(): sig: [NonnegativeRealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: AbsoluteValueFn__0Re1InFn
extendRelationSig(): t,e: AbsoluteValueFn, 0Re1In
extendRelationSig(): sig: [NonnegativeRealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: AbsoluteValueFn__0Re1ReFn
extendRelationSig(): t,e: AbsoluteValueFn, 0Re1Re
extendRelationSig(): sig: [NonnegativeRealNumber, RealNumber]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): k: monetaryValue
writeSorts(): k: agreementEffectiveDate
writeSorts(): k: equal
Error in KBcache.extendInstance(): term already exists: equal__1In2In
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: equal__1In2In
extendRelationSig(): t,e: equal, 1In2In
extendRelationSig(): sig: [, Entity, Entity]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KBcache.extendInstance(): term already exists: equal__1Ra2Ra
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: equal__1Ra2Ra
extendRelationSig(): t,e: equal, 1Ra2Ra
extendRelationSig(): sig: [, Entity, Entity]
extendRelationSig(): combined sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
Error in KBcache.extendInstance(): term already exists: equal__1Re2Re
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: equal__1Re2Re
extendRelationSig(): t,e: equal, 1Re2Re
extendRelationSig(): sig: [, Entity, Entity]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): k: RealNumberFn
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RealNumberFn__1RaFn
extendRelationSig(): t,e: RealNumberFn, 1Ra
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RealNumberFn__0In1InFn
extendRelationSig(): t,e: RealNumberFn, 0In1In
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [Integer, Integer]
writeRelationSort(): sig: [Integer, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RealNumberFn__0ReFn
extendRelationSig(): t,e: RealNumberFn, 0Re
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RealNumber, Number]
writeRelationSort(): sig: [RealNumber, Number]
writeRelationSort(): sigstr:  $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RealNumberFn__1ReFn
extendRelationSig(): t,e: RealNumberFn, 1Re
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RealNumberFn__0Re1RaFn
extendRelationSig(): t,e: RealNumberFn, 0Re1Ra
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RealNumberFn__0Re1InFn
extendRelationSig(): t,e: RealNumberFn, 0Re1In
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RealNumberFn__0In1RaFn
extendRelationSig(): t,e: RealNumberFn, 0In1Ra
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [Integer, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RealNumberFn__0In1ReFn
extendRelationSig(): t,e: RealNumberFn, 0In1Re
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [Integer, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RealNumberFn__0Ra1InFn
extendRelationSig(): t,e: RealNumberFn, 0Ra1In
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RealNumberFn__0InFn
extendRelationSig(): t,e: RealNumberFn, 0In
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [Integer, Number]
writeRelationSort(): sig: [Integer, Number]
writeRelationSort(): sigstr:  $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: RealNumberFn__1InFn
extendRelationSig(): t,e: RealNumberFn, 1In
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, Integer]
writeRelationSort(): sigstr:  $int 
writeSorts(): newTerm: RealNumberFn__0Ra1RaFn
extendRelationSig(): t,e: RealNumberFn, 0Ra1Ra
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat 
writeSorts(): newTerm: RealNumberFn__0Re1ReFn
extendRelationSig(): t,e: RealNumberFn, 0Re1Re
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RealNumberFn__0Ra1ReFn
extendRelationSig(): t,e: RealNumberFn, 0Ra1Re
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $real 
writeSorts(): newTerm: RealNumberFn__0RaFn
extendRelationSig(): t,e: RealNumberFn, 0Ra
extendRelationSig(): sig: [RealNumber, Number]
extendRelationSig(): combined sig: [RationalNumber, Number]
writeRelationSort(): sig: [RationalNumber, Number]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: barometricPressure
writeSorts(): k: memberAtTime
writeSorts(): k: MinFn
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__2RaFn
extendRelationSig(): t,e: MinFn, 2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Quantity, RationalNumber]
writeRelationSort(): sig: [Quantity, Quantity, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
writeSorts(): newTerm: MinFn__0In1InFn
extendRelationSig(): t,e: MinFn, 0In1In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, Quantity]
writeRelationSort(): sig: [Integer, Integer, Quantity]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): newTerm: MinFn__0Ra1Re2ReFn
extendRelationSig(): t,e: MinFn, 0Ra1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0Ra2InFn
extendRelationSig(): t,e: MinFn, 0Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity, Integer]
writeRelationSort(): sig: [RationalNumber, Quantity, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): newTerm: MinFn__0ReFn
extendRelationSig(): t,e: MinFn, 0Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity, Quantity]
writeRelationSort(): sig: [RealNumber, Quantity, Quantity]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0Re2RaFn
extendRelationSig(): t,e: MinFn, 0Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity, RationalNumber]
writeRelationSort(): sig: [RealNumber, Quantity, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__2ReFn
extendRelationSig(): t,e: MinFn, 2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Quantity, RealNumber]
writeRelationSort(): sig: [Quantity, Quantity, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1Ra2ReFn
extendRelationSig(): t,e: MinFn, 1Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber, RealNumber]
writeRelationSort(): sig: [Quantity, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: MinFn__0In1In2ReFn
extendRelationSig(): t,e: MinFn, 0In1In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, RealNumber]
writeRelationSort(): sig: [Integer, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: MinFn__0Ra1Ra2InFn
extendRelationSig(): t,e: MinFn, 0Ra1Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: MinFn__0In1RaFn
extendRelationSig(): t,e: MinFn, 0In1Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber, Quantity]
writeRelationSort(): sig: [Integer, RationalNumber, Quantity]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1Ra2RaFn
extendRelationSig(): t,e: MinFn, 1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber, RationalNumber]
writeRelationSort(): sig: [Quantity, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: MinFn__0In1In2RaFn
extendRelationSig(): t,e: MinFn, 0In1In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sig: [Integer, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0Re2InFn
extendRelationSig(): t,e: MinFn, 0Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity, Integer]
writeRelationSort(): sig: [RealNumber, Quantity, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1Re2ReFn
extendRelationSig(): t,e: MinFn, 1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber, RealNumber]
writeRelationSort(): sig: [Quantity, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: MinFn__0In1ReFn
extendRelationSig(): t,e: MinFn, 0In1Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber, Quantity]
writeRelationSort(): sig: [Integer, RealNumber, Quantity]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: MinFn__0Re1Ra2ReFn
extendRelationSig(): t,e: MinFn, 0Re1Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: MinFn__0Re1Re2RaFn
extendRelationSig(): t,e: MinFn, 0Re1Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: MinFn__0Re1Ra2RaFn
extendRelationSig(): t,e: MinFn, 0Re1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RealNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: MinFn__0Re1Re2ReFn
extendRelationSig(): t,e: MinFn, 0Re1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sig: [RealNumber, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: MinFn__0In1Ra2InFn
extendRelationSig(): t,e: MinFn, 0In1Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sig: [Integer, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: MinFn__0In1Re2InFn
extendRelationSig(): t,e: MinFn, 0In1Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber, Integer]
writeRelationSort(): sig: [Integer, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: MinFn__0In1Re2ReFn
extendRelationSig(): t,e: MinFn, 0In1Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sig: [Integer, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
writeSorts(): newTerm: MinFn__0In1Ra2RaFn
extendRelationSig(): t,e: MinFn, 0In1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: MinFn__0In1Re2RaFn
extendRelationSig(): t,e: MinFn, 0In1Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sig: [Integer, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1InFn
extendRelationSig(): t,e: MinFn, 1In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer, Quantity]
writeRelationSort(): sig: [Quantity, Integer, Quantity]
writeRelationSort(): sigstr:  $int * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0Re2ReFn
extendRelationSig(): t,e: MinFn, 0Re2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Quantity, RealNumber]
writeRelationSort(): sig: [RealNumber, Quantity, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0Ra2RaFn
extendRelationSig(): t,e: MinFn, 0Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Quantity, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
writeSorts(): newTerm: MinFn__0In1Ra2ReFn
extendRelationSig(): t,e: MinFn, 0In1Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sig: [Integer, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0Ra2ReFn
extendRelationSig(): t,e: MinFn, 0Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity, RealNumber]
writeRelationSort(): sig: [RationalNumber, Quantity, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1RaFn
extendRelationSig(): t,e: MinFn, 1Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber, Quantity]
writeRelationSort(): sig: [Quantity, RationalNumber, Quantity]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0In2InFn
extendRelationSig(): t,e: MinFn, 0In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity, Integer]
writeRelationSort(): sig: [Integer, Quantity, Integer]
writeRelationSort(): sigstr:  $i * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1ReFn
extendRelationSig(): t,e: MinFn, 1Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber, Quantity]
writeRelationSort(): sig: [Quantity, RealNumber, Quantity]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: MinFn__0Ra1In2InFn
extendRelationSig(): t,e: MinFn, 0Ra1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sig: [RationalNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: MinFn__0Re1RaFn
extendRelationSig(): t,e: MinFn, 0Re1Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Quantity]
writeRelationSort(): sig: [RealNumber, RationalNumber, Quantity]
writeRelationSort(): sigstr:  $rat * $i 
writeSorts(): newTerm: MinFn__0Ra1In2ReFn
extendRelationSig(): t,e: MinFn, 0Ra1In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: MinFn__0Re1InFn
extendRelationSig(): t,e: MinFn, 0Re1In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer, Quantity]
writeRelationSort(): sig: [RealNumber, Integer, Quantity]
writeRelationSort(): sigstr:  $int * $i 
writeSorts(): newTerm: MinFn__0Ra1In2RaFn
extendRelationSig(): t,e: MinFn, 0Ra1In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RationalNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0In2RaFn
extendRelationSig(): t,e: MinFn, 0In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity, RationalNumber]
writeRelationSort(): sig: [Integer, Quantity, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
writeSorts(): newTerm: MinFn__0Re1In2ReFn
extendRelationSig(): t,e: MinFn, 0Re1In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sig: [RealNumber, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
writeSorts(): newTerm: MinFn__0Ra1InFn
extendRelationSig(): t,e: MinFn, 0Ra1In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Integer, Quantity]
writeRelationSort(): sig: [RationalNumber, Integer, Quantity]
writeRelationSort(): sigstr:  $int * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__0In2ReFn
extendRelationSig(): t,e: MinFn, 0In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity, RealNumber]
writeRelationSort(): sig: [Integer, Quantity, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
writeSorts(): newTerm: MinFn__0Re1In2RaFn
extendRelationSig(): t,e: MinFn, 0Re1In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sig: [RealNumber, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1In2InFn
extendRelationSig(): t,e: MinFn, 1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer, Integer]
writeRelationSort(): sig: [Quantity, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: MinFn__0Re1In2InFn
extendRelationSig(): t,e: MinFn, 0Re1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, Integer, Integer]
writeRelationSort(): sig: [RealNumber, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1In2ReFn
extendRelationSig(): t,e: MinFn, 1In2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer, RealNumber]
writeRelationSort(): sig: [Quantity, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1In2RaFn
extendRelationSig(): t,e: MinFn, 1In2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Integer, RationalNumber]
writeRelationSort(): sig: [Quantity, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): newTerm: MinFn__0Re1Ra2InFn
extendRelationSig(): t,e: MinFn, 0Re1Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sig: [RealNumber, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: MinFn__0Re1Re2InFn
extendRelationSig(): t,e: MinFn, 0Re1Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sig: [RealNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1Re2RaFn
extendRelationSig(): t,e: MinFn, 1Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber, RationalNumber]
writeRelationSort(): sig: [Quantity, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: MinFn__0Ra1Re2InFn
extendRelationSig(): t,e: MinFn, 0Ra1Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sig: [RationalNumber, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: MinFn__0InFn
extendRelationSig(): t,e: MinFn, 0In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Quantity, Quantity]
writeRelationSort(): sig: [Integer, Quantity, Quantity]
writeRelationSort(): sigstr:  $i * $i 
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__2InFn
extendRelationSig(): t,e: MinFn, 2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, Quantity, Integer]
writeRelationSort(): sig: [Quantity, Quantity, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): newTerm: MinFn__0Ra1RaFn
extendRelationSig(): t,e: MinFn, 0Ra1Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, Quantity]
writeRelationSort(): sig: [RationalNumber, RationalNumber, Quantity]
writeRelationSort(): sigstr:  $rat * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1Ra2InFn
extendRelationSig(): t,e: MinFn, 1Ra2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RationalNumber, Integer]
writeRelationSort(): sig: [Quantity, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
writeSorts(): newTerm: MinFn__0In1In2InFn
extendRelationSig(): t,e: MinFn, 0In1In2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Integer, Integer, Integer]
writeRelationSort(): sig: [Integer, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
writeSorts(): newTerm: MinFn__0Ra1Ra2ReFn
extendRelationSig(): t,e: MinFn, 0Ra1Ra2Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
writeSorts(): newTerm: MinFn__0Re1ReFn
extendRelationSig(): t,e: MinFn, 0Re1Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RealNumber, RealNumber, Quantity]
writeRelationSort(): sig: [RealNumber, RealNumber, Quantity]
writeRelationSort(): sigstr:  $real * $i 
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: MinFn__1Re2InFn
extendRelationSig(): t,e: MinFn, 1Re2In
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [Quantity, RealNumber, Integer]
writeRelationSort(): sig: [Quantity, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
writeSorts(): newTerm: MinFn__0Ra1ReFn
extendRelationSig(): t,e: MinFn, 0Ra1Re
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, Quantity]
writeRelationSort(): sig: [RationalNumber, RealNumber, Quantity]
writeRelationSort(): sigstr:  $real * $i 
writeSorts(): newTerm: MinFn__0Ra1Re2RaFn
extendRelationSig(): t,e: MinFn, 0Ra1Re2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
writeSorts(): newTerm: MinFn__0Ra1Ra2RaFn
extendRelationSig(): t,e: MinFn, 0Ra1Ra2Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sig: [RationalNumber, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
writeSorts(): newTerm: MinFn__0RaFn
extendRelationSig(): t,e: MinFn, 0Ra
extendRelationSig(): sig: [Quantity, Quantity, Quantity]
extendRelationSig(): combined sig: [RationalNumber, Quantity, Quantity]
writeRelationSort(): sig: [RationalNumber, Quantity, Quantity]
writeRelationSort(): sigstr:  $i * $i 
writeSorts(): k: TangentFn
writeSorts(): newTerm: TangentFn__0ReFn
extendRelationSig(): t,e: TangentFn, 0Re
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sig: [RealNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: TangentFn__0InFn
extendRelationSig(): t,e: TangentFn, 0In
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [Integer, PlaneAngleMeasure]
writeRelationSort(): sig: [Integer, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: TangentFn__0RaFn
extendRelationSig(): t,e: TangentFn, 0Ra
extendRelationSig(): sig: [RealNumber, PlaneAngleMeasure]
extendRelationSig(): combined sig: [RationalNumber, PlaneAngleMeasure]
writeRelationSort(): sig: [RationalNumber, PlaneAngleMeasure]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: TimeIntervalFn
writeSorts(): k: memberTypeCount
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: memberTypeCount__3Ra
extendRelationSig(): t,e: memberTypeCount, 3Ra
extendRelationSig(): sig: [, Collection, SetOrClass, NonnegativeInteger]
extendRelationSig(): combined sig: [, Collection, SetOrClass, RationalNumber]
writeRelationSort(): sig: [, Collection, SetOrClass, RationalNumber]
writeRelationSort(): sigstr:  $i * $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: memberTypeCount__3Re
extendRelationSig(): t,e: memberTypeCount, 3Re
extendRelationSig(): sig: [, Collection, SetOrClass, NonnegativeInteger]
extendRelationSig(): combined sig: [, Collection, SetOrClass, RealNumber]
writeRelationSort(): sig: [, Collection, SetOrClass, RealNumber]
writeRelationSort(): sigstr:  $i * $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: memberTypeCount__3In
extendRelationSig(): t,e: memberTypeCount, 3In
extendRelationSig(): sig: [, Collection, SetOrClass, NonnegativeInteger]
extendRelationSig(): combined sig: [, Collection, SetOrClass, Integer]
writeRelationSort(): sig: [, Collection, SetOrClass, Integer]
writeRelationSort(): sigstr:  $i * $i * $int 
writeSorts(): k: time
writeSorts(): k: ListLengthFn
writeSorts(): newTerm: ListLengthFn__0ReFn
extendRelationSig(): t,e: ListLengthFn, 0Re
extendRelationSig(): sig: [NonnegativeInteger, List]
extendRelationSig(): combined sig: [RealNumber, List]
writeRelationSort(): sig: [RealNumber, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: ListLengthFn__0InFn
extendRelationSig(): t,e: ListLengthFn, 0In
extendRelationSig(): sig: [NonnegativeInteger, List]
extendRelationSig(): combined sig: [Integer, List]
writeRelationSort(): sig: [Integer, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): newTerm: ListLengthFn__0RaFn
extendRelationSig(): t,e: ListLengthFn, 0Ra
extendRelationSig(): sig: [NonnegativeInteger, List]
extendRelationSig(): combined sig: [RationalNumber, List]
writeRelationSort(): sig: [RationalNumber, List]
writeRelationSort(): sigstr:  $i 
writeSorts(): k: intelligenceQuotient
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: intelligenceQuotient__2Ra
extendRelationSig(): t,e: intelligenceQuotient, 2Ra
extendRelationSig(): sig: [, Human, RationalNumber]
extendRelationSig(): combined sig: [, Human, RationalNumber]
writeRelationSort(): sig: [, Human, RationalNumber]
writeRelationSort(): sigstr:  $i * $rat 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: intelligenceQuotient__2Re
extendRelationSig(): t,e: intelligenceQuotient, 2Re
extendRelationSig(): sig: [, Human, RationalNumber]
extendRelationSig(): combined sig: [, Human, RealNumber]
writeRelationSort(): sig: [, Human, RealNumber]
writeRelationSort(): sigstr:  $i * $real 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: intelligenceQuotient__2In
extendRelationSig(): t,e: intelligenceQuotient, 2In
extendRelationSig(): sig: [, Human, RationalNumber]
extendRelationSig(): combined sig: [, Human, Integer]
writeRelationSort(): sig: [, Human, Integer]
writeRelationSort(): sigstr:  $i * $int 
writeSorts(): k: multiplicativeFactor
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1Ra
extendRelationSig(): t,e: multiplicativeFactor, 1Ra
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, RationalNumber, Integer]
writeRelationSort(): sig: [, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: multiplicativeFactor__2Ra
extendRelationSig(): t,e: multiplicativeFactor, 2Ra
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, Integer, RationalNumber]
writeRelationSort(): sig: [, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1Re
extendRelationSig(): t,e: multiplicativeFactor, 1Re
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, RealNumber, Integer]
writeRelationSort(): sig: [, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: multiplicativeFactor__2Re
extendRelationSig(): t,e: multiplicativeFactor, 2Re
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, Integer, RealNumber]
writeRelationSort(): sig: [, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1Ra2Re
extendRelationSig(): t,e: multiplicativeFactor, 1Ra2Re
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, RationalNumber, RealNumber]
writeRelationSort(): sig: [, RationalNumber, RealNumber]
writeRelationSort(): sigstr:  $rat * $real 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1Ra2Ra
extendRelationSig(): t,e: multiplicativeFactor, 1Ra2Ra
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sig: [, RationalNumber, RationalNumber]
writeRelationSort(): sigstr:  $rat * $rat 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1Re2Re
extendRelationSig(): t,e: multiplicativeFactor, 1Re2Re
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, RealNumber, RealNumber]
writeRelationSort(): sig: [, RealNumber, RealNumber]
writeRelationSort(): sigstr:  $real * $real 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1Re2Ra
extendRelationSig(): t,e: multiplicativeFactor, 1Re2Ra
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, RealNumber, RationalNumber]
writeRelationSort(): sig: [, RealNumber, RationalNumber]
writeRelationSort(): sigstr:  $real * $rat 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1In2In
extendRelationSig(): t,e: multiplicativeFactor, 1In2In
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1In
extendRelationSig(): t,e: multiplicativeFactor, 1In
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty c1
Error in KB.isSubclass(): empty parent
writeSorts(): newTerm: multiplicativeFactor__2In
extendRelationSig(): t,e: multiplicativeFactor, 2In
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, Integer, Integer]
writeRelationSort(): sig: [, Integer, Integer]
writeRelationSort(): sigstr:  $int * $int 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1Ra2In
extendRelationSig(): t,e: multiplicativeFactor, 1Ra2In
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, RationalNumber, Integer]
writeRelationSort(): sig: [, RationalNumber, Integer]
writeRelationSort(): sigstr:  $rat * $int 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1In2Re
extendRelationSig(): t,e: multiplicativeFactor, 1In2Re
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, Integer, RealNumber]
writeRelationSort(): sig: [, Integer, RealNumber]
writeRelationSort(): sigstr:  $int * $real 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1Re2In
extendRelationSig(): t,e: multiplicativeFactor, 1Re2In
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, RealNumber, Integer]
writeRelationSort(): sig: [, RealNumber, Integer]
writeRelationSort(): sigstr:  $real * $int 
Error in KB.isSubclass(): empty c1
writeSorts(): newTerm: multiplicativeFactor__1In2Ra
extendRelationSig(): t,e: multiplicativeFactor, 1In2Ra
extendRelationSig(): sig: [, Integer, Integer]
extendRelationSig(): combined sig: [, Integer, RationalNumber]
writeRelationSort(): sig: [, Integer, RationalNumber]
writeRelationSort(): sigstr:  $int * $rat 
writeSorts(): k: temporallyBetween
writeSorts(): k: age
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: FloorFn__0In0In1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__0In0In1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__0In0In1InFn
KB.termDepth(): no such term 
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__0In0In1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__0In0In1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__0In0In1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__0In0In1InFn
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.isSubclass(): empty parent
Error in SUMOtoTFAform.getOpReturnType(): no term: FloorFn__1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
KB.termDepth(): no such term 
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: FloorFn__1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
Warnings in KB.isFunction(): 'Fn' suffix without functional relation type : FloorFn__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?HEIGHT)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?Q)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?Q)
Error in SUMOtoTFAform.constrainOp(): missing signature element for altitude  in form (altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation altitude in formula: 
(altitude ?OBJ1 ?OBJ2 ?Q)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?ELEMENT ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?ELEMENT ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?ELEMENT ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?ELEMENT ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?ELEMENT ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?ELEMENT ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?ELEMENT ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?ELEMENT ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?ELEMENT ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?ELEMENT ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?ELEMENT ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?ELEMENT ?OBJ)
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?S ?B)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?S ?B)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?S ?B)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?S ?B)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?S ?B)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?S ?B)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?S ?B)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?S ?B)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?S ?B)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?S ?B)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?S ?B)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?S ?B)
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.findType(): no type information for predicate routeInSystem
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation routeInSystem in formula: 
(routeInSystem ?P ?S)
Error in FormulaPreprocessor.findType(): no type information for predicate routeInSystem
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation routeInSystem in formula: 
(routeInSystem ?P ?S)
Error in FormulaPreprocessor.findType(): no type information for predicate routeInSystem
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation routeInSystem in formula: 
(routeInSystem ?P ?S)
Error in FormulaPreprocessor.findType(): no type information for predicate routeInSystem
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation routeInSystem in formula: 
(routeInSystem ?P ?S)
Error in SUMOtoTFAform.constrainOp(): missing signature element for routeInSystem  in form (routeInSystem ?P ?S)
Error in SUMOtoTFAform.constrainOp(): missing signature element for routeInSystem  in form (routeInSystem ?P ?S)
Error in FormulaPreprocessor.findType(): no type information for predicate routeInSystem
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation routeInSystem in formula: 
(routeInSystem ?P ?S)
Error in FormulaPreprocessor.findType(): no type information for predicate routeInSystem
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation routeInSystem in formula: 
(routeInSystem ?P ?S)
Error in SUMOtoTFAform.constrainOp(): missing signature element for routeInSystem  in form (routeInSystem ?P ?S)
Error in SUMOtoTFAform.constrainOp(): missing signature element for routeInSystem  in form (routeInSystem ?P ?S)
Error in FormulaPreprocessor.findType(): no type information for predicate routeInSystem
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation routeInSystem in formula: 
(routeInSystem ?P ?S)
Error in FormulaPreprocessor.findType(): no type information for predicate routeInSystem
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation routeInSystem in formula: 
(routeInSystem ?P ?S)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.findType(): no type information for predicate maxValue
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation maxValue in formula: 
(maxValue ?R ?ARG ?N)
Error in FormulaPreprocessor.findType(): no type information for predicate maxValue
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation maxValue in formula: 
(maxValue ?R ?ARG ?N)
Error in FormulaPreprocessor.findType(): no type information for predicate maxValue
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation maxValue in formula: 
(maxValue ?R ?ARG ?N)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.findType(): no type information for predicate minValue
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation minValue in formula: 
(minValue ?R ?ARG ?N)
Error in FormulaPreprocessor.findType(): no type information for predicate minValue
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation minValue in formula: 
(minValue ?R ?ARG ?N)
Error in FormulaPreprocessor.findType(): no type information for predicate minValue
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 3 of relation minValue in formula: 
(minValue ?R ?ARG ?N)
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in FormulaPreprocessor.findType(): no type information for predicate approximateDiameter
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation approximateDiameter in formula: 
(approximateDiameter ?Particle
  (MeasureFn ?Size Millimeter))
Error in FormulaPreprocessor.findType(): no type information for predicate approximateDiameter
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation approximateDiameter in formula: 
(approximateDiameter ?Particle
  (MeasureFn ?Size Millimeter))
Error in SUMOtoTFAform.constrainOp(): missing signature element for approximateDiameter  in form (approximateDiameter ?Particle
  (MeasureFn ?Size Millimeter))
Error in SUMOtoTFAform.constrainOp(): missing signature element for approximateDiameter  in form (approximateDiameter ?Particle
  (MeasureFn ?Size Millimeter))
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.findType(): no type information for predicate approximateDiameter
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation approximateDiameter in formula: 
(approximateDiameter ?Particle
  (MeasureFn ?Size Millimeter))
Error in SUMOtoTFAform.constrainOp(): missing signature element for approximateDiameter  in form (approximateDiameter ?Particle
  (MeasureFn ?Size Millimeter))
Error in SUMOtoTFAform.constrainOp(): missing signature element for approximateDiameter  in form (approximateDiameter ?Particle
  (MeasureFn ?Size Millimeter))
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.findType(): no type information for predicate approximateDiameter
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation approximateDiameter in formula: 
(approximateDiameter ?Particle
  (MeasureFn ?Size Millimeter))
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?SP ?O)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?SP ?O)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?SP ?O)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?SP ?O)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?SP ?O)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?SP ?O)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?SP ?O)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?SP ?O)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?SP ?O)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?SP ?O)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?SP ?O)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?SP ?O)
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_2
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_2
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_2
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_2
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART1 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART1 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART2 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART2 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART1 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART1 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART2 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART2 ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART1 ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART1 ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART2 ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART2 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART1 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART1 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART2 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART2 ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART1 ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART1 ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART2 ?OBJ)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART2 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART1 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART1 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART2 ?OBJ)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART2 ?OBJ)
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): empty function range for ListFn_1__1InFn
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ3
  (HoleHostFn ?HOLE))
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ3
  (HoleHostFn ?HOLE))
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ3
  (HoleHostFn ?HOLE))
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ3
  (HoleHostFn ?HOLE))
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ3
  (HoleHostFn ?HOLE))
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ3
  (HoleHostFn ?HOLE))
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ3
  (HoleHostFn ?HOLE))
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ3
  (HoleHostFn ?HOLE))
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
.Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?COVER ?BODY)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?COVER ?BODY)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?COVER ?BODY)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?COVER ?BODY)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?COVER ?BODY)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?COVER ?BODY)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?COVER ?BODY)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?COVER ?BODY)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?COVER ?BODY)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?COVER ?BODY)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?COVER ?BODY)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?COVER ?BODY)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_2
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_2
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_2
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_2
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
Error in SUMOtoTFAform.getOpReturnType(): no term: AssignmentFn_3
KB.termDepth(): no such term (FoodForFn Animal)
KB.termDepth(): no such term (FoodForFn Animal)
KB.termDepth(): no such term (FoodForFn DomesticAnimal)
KB.termDepth(): no such term (FoodForFn DomesticAnimal)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.findType(): no type information for predicate shape
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation shape in formula: 
(shape ?OBJ Flat)
Error in FormulaPreprocessor.findType(): no type information for predicate shape
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation shape in formula: 
(shape ?OBJ Flat)
Error in SUMOtoTFAform.constrainOp(): missing signature element for shape  in form (shape ?OBJ Flat)
Error in SUMOtoTFAform.constrainOp(): missing signature element for shape  in form (shape ?OBJ Flat)
Error in FormulaPreprocessor.findType(): no type information for predicate shape
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation shape in formula: 
(shape ?OBJ Flat)
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
KB.termDepth(): no such term 
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
Error in KB.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
Error in SUMOtoTFAform.mostSpecificTerm(): no such term: (UnionFn SetOrClass Collection)
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?OBJ2)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ1 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?OBJ1 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ1 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?OBJ1 ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ1 ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ1 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ1 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?OBJ1 ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ1 ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ1 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ1 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?OBJ1 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?WHOLE)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?WHOLE)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?WHOLE)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?WHOLE)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?WHOLE)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?PART ?WHOLE)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?PART ?WHOLE)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?PART ?WHOLE)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ3 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?OBJ3 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ3 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?OBJ3 ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ3 ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ3 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ3 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?OBJ3 ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ3 ?OBJ2)
Error in SUMOtoTFAform.constrainOp(): missing signature element for superficialPart  in form (superficialPart ?OBJ3 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 1 of relation superficialPart in formula: 
(superficialPart ?OBJ3 ?OBJ2)
Error in FormulaPreprocessor.computeVariableTypesRecurse(): no type information for arg 2 of relation superficialPart in formula: 
(superficialPart ?OBJ3 ?OBJ2)
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
..KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.......................Error in KB.isSubclass(): empty c1
Error in SUMOtoTFAform.constrainOp(): missing signature element for documentation__1Re  in form (documentation__1Re 2.718282 ChineseLanguage "&%NumberE 是一个 &%RealNumber，它是自然对数的机率，大约 等于2.718282。")
Error in SUMOtoTFAform.constrainOp(): missing signature element for documentation__1Re  in form (documentation__1Re 2.718282 ChineseLanguage "&%NumberE 是一个 &%RealNumber，它是自然对数的机率，大约 等于2.718282。")
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): missing signature element for documentation__1Re  in form (documentation__1Re 2.718282 EnglishLanguage "&%NumberE is the &%RealNumber that is the base for natural logarithms. It is approximately equal to 2.718282.")
Error in SUMOtoTFAform.constrainOp(): missing signature element for documentation__1Re  in form (documentation__1Re 2.718282 EnglishLanguage "&%NumberE is the &%RealNumber that is the base for natural logarithms. It is approximately equal to 2.718282.")
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.Error in KB.isSubclass(): empty c1
Error in SUMOtoTFAform.constrainOp(): missing signature element for documentation__1Re  in form (documentation__1Re 3.141592653589793 ChineseLanguage "&%Pi 是一个 &%RealNumber，它是圆圈的圆周和直径的比率，大约等于 3.141592653589793。")
Error in SUMOtoTFAform.constrainOp(): missing signature element for documentation__1Re  in form (documentation__1Re 3.141592653589793 ChineseLanguage "&%Pi 是一个 &%RealNumber，它是圆圈的圆周和直径的比率，大约等于 3.141592653589793。")
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.constrainOp(): missing signature element for documentation__1Re  in form (documentation__1Re 3.141592653589793 EnglishLanguage "&%Pi is the &%RealNumber that is the ratio of the perimeter of a circle to its diameter. It is approximately equal to 3.141592653589793.")
Error in SUMOtoTFAform.constrainOp(): missing signature element for documentation__1Re  in form (documentation__1Re 3.141592653589793 EnglishLanguage "&%Pi is the &%RealNumber that is the ratio of the perimeter of a circle to its diameter. It is approximately equal to 3.141592653589793.")
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.................................KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
Error in KB.isSubclass(): empty c1
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.isSubclass(): empty c1
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_2
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_1
Error in SUMOtoTFAform.getOpReturnType(): no term: ListFn_2
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
................................................................................KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
..KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
KB.termDepth(): no such term 
KB.termDepth(): no such term 
Error in KB.mostSpecificTerm(): no such term: 
Error in KB.mostSpecificTerm(): no such term: 
.............................................................................................................................................................................
